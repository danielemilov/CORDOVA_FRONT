{"version":3,"file":"Chat-CsLsvlFL.js","sources":["../../node_modules/@chakra-ui/icons/dist/chunk-BTVB6U66.mjs","../../node_modules/@chakra-ui/icons/dist/chunk-NGPSDGVK.mjs","../../node_modules/@chakra-ui/icons/dist/chunk-G6T6CBSV.mjs","../../node_modules/react-infinite-scroll-component/dist/index.es.js","../../node_modules/lucide-react/dist/esm/shared/src/utils.js","../../node_modules/lucide-react/dist/esm/defaultAttributes.js","../../node_modules/lucide-react/dist/esm/Icon.js","../../node_modules/lucide-react/dist/esm/createLucideIcon.js","../../node_modules/lucide-react/dist/esm/icons/ellipsis-vertical.js","../../node_modules/recordrtc/RecordRTC.js","../../src/components/Chat.jsx"],"sourcesContent":["'use client'\n\n// src/Close.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar CloseIcon = createIcon({\n  displayName: \"CloseIcon\",\n  d: \"M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z\"\n});\n\nexport {\n  CloseIcon\n};\n//# sourceMappingURL=chunk-BTVB6U66.mjs.map","'use client'\n\n// src/Attachment.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar AttachmentIcon = createIcon({\n  displayName: \"AttachmentIcon\",\n  d: \"M21.843,3.455a6.961,6.961,0,0,0-9.846,0L1.619,13.832a5.128,5.128,0,0,0,7.252,7.252L17.3,12.653A3.293,3.293,0,1,0,12.646,8L7.457,13.184A1,1,0,1,0,8.871,14.6L14.06,9.409a1.294,1.294,0,0,1,1.829,1.83L7.457,19.67a3.128,3.128,0,0,1-4.424-4.424L13.411,4.869a4.962,4.962,0,1,1,7.018,7.018L12.646,19.67a1,1,0,1,0,1.414,1.414L21.843,13.3a6.96,6.96,0,0,0,0-9.846Z\"\n});\n\nexport {\n  AttachmentIcon\n};\n//# sourceMappingURL=chunk-NGPSDGVK.mjs.map","'use client'\n\n// src/ArrowBack.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar ArrowBackIcon = createIcon({\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\",\n  displayName: \"ArrowBackIcon\"\n});\n\nexport {\n  ArrowBackIcon\n};\n//# sourceMappingURL=chunk-G6T6CBSV.mjs.map","import React, { Component } from 'react';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\n/* eslint-disable no-undefined,no-param-reassign,no-shadow */\n\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param  {Number}    delay          A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  {Boolean}   [noTrailing]   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds while the\n *                                    throttled-function is being called. If noTrailing is false or unspecified, callback will be executed one final time\n *                                    after the last throttled-function call. (After the throttled-function has not been called for `delay` milliseconds,\n *                                    the internal counter is reset)\n * @param  {Function}  callback       A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                    to `callback` when the throttled-function is executed.\n * @param  {Boolean}   [debounceMode] If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is false (at end),\n *                                    schedule `callback` to execute after `delay` ms.\n *\n * @return {Function}  A new, throttled, function.\n */\nfunction throttle (delay, noTrailing, callback, debounceMode) {\n  /*\n   * After wrapper has stopped being called, this timeout ensures that\n   * `callback` is executed at the proper times in `throttle` and `end`\n   * debounce modes.\n   */\n  var timeoutID;\n  var cancelled = false; // Keep track of the last time `callback` was executed.\n\n  var lastExec = 0; // Function to clear existing timeout\n\n  function clearExistingTimeout() {\n    if (timeoutID) {\n      clearTimeout(timeoutID);\n    }\n  } // Function to cancel next exec\n\n\n  function cancel() {\n    clearExistingTimeout();\n    cancelled = true;\n  } // `noTrailing` defaults to falsy.\n\n\n  if (typeof noTrailing !== 'boolean') {\n    debounceMode = callback;\n    callback = noTrailing;\n    noTrailing = undefined;\n  }\n  /*\n   * The `wrapper` function encapsulates all of the throttling / debouncing\n   * functionality and when executed will limit the rate at which `callback`\n   * is executed.\n   */\n\n\n  function wrapper() {\n    var self = this;\n    var elapsed = Date.now() - lastExec;\n    var args = arguments;\n\n    if (cancelled) {\n      return;\n    } // Execute `callback` and update the `lastExec` timestamp.\n\n\n    function exec() {\n      lastExec = Date.now();\n      callback.apply(self, args);\n    }\n    /*\n     * If `debounceMode` is true (at begin) this is used to clear the flag\n     * to allow future `callback` executions.\n     */\n\n\n    function clear() {\n      timeoutID = undefined;\n    }\n\n    if (debounceMode && !timeoutID) {\n      /*\n       * Since `wrapper` is being called for the first time and\n       * `debounceMode` is true (at begin), execute `callback`.\n       */\n      exec();\n    }\n\n    clearExistingTimeout();\n\n    if (debounceMode === undefined && elapsed > delay) {\n      /*\n       * In throttle mode, if `delay` time has been exceeded, execute\n       * `callback`.\n       */\n      exec();\n    } else if (noTrailing !== true) {\n      /*\n       * In trailing throttle mode, since `delay` time has not been\n       * exceeded, schedule `callback` to execute `delay` ms after most\n       * recent execution.\n       *\n       * If `debounceMode` is true (at begin), schedule `clear` to execute\n       * after `delay` ms.\n       *\n       * If `debounceMode` is false (at end), schedule `callback` to\n       * execute after `delay` ms.\n       */\n      timeoutID = setTimeout(debounceMode ? clear : exec, debounceMode === undefined ? delay - elapsed : delay);\n    }\n  }\n\n  wrapper.cancel = cancel; // Return the wrapper function.\n\n  return wrapper;\n}\n\nvar ThresholdUnits = {\r\n    Pixel: 'Pixel',\r\n    Percent: 'Percent',\r\n};\r\nvar defaultThreshold = {\r\n    unit: ThresholdUnits.Percent,\r\n    value: 0.8,\r\n};\r\nfunction parseThreshold(scrollThreshold) {\r\n    if (typeof scrollThreshold === 'number') {\r\n        return {\r\n            unit: ThresholdUnits.Percent,\r\n            value: scrollThreshold * 100,\r\n        };\r\n    }\r\n    if (typeof scrollThreshold === 'string') {\r\n        if (scrollThreshold.match(/^(\\d*(\\.\\d+)?)px$/)) {\r\n            return {\r\n                unit: ThresholdUnits.Pixel,\r\n                value: parseFloat(scrollThreshold),\r\n            };\r\n        }\r\n        if (scrollThreshold.match(/^(\\d*(\\.\\d+)?)%$/)) {\r\n            return {\r\n                unit: ThresholdUnits.Percent,\r\n                value: parseFloat(scrollThreshold),\r\n            };\r\n        }\r\n        console.warn('scrollThreshold format is invalid. Valid formats: \"120px\", \"50%\"...');\r\n        return defaultThreshold;\r\n    }\r\n    console.warn('scrollThreshold should be string or number');\r\n    return defaultThreshold;\r\n}\n\nvar InfiniteScroll = /** @class */ (function (_super) {\r\n    __extends(InfiniteScroll, _super);\r\n    function InfiniteScroll(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.lastScrollTop = 0;\r\n        _this.actionTriggered = false;\r\n        // variables to keep track of pull down behaviour\r\n        _this.startY = 0;\r\n        _this.currentY = 0;\r\n        _this.dragging = false;\r\n        // will be populated in componentDidMount\r\n        // based on the height of the pull down element\r\n        _this.maxPullDownDistance = 0;\r\n        _this.getScrollableTarget = function () {\r\n            if (_this.props.scrollableTarget instanceof HTMLElement)\r\n                return _this.props.scrollableTarget;\r\n            if (typeof _this.props.scrollableTarget === 'string') {\r\n                return document.getElementById(_this.props.scrollableTarget);\r\n            }\r\n            if (_this.props.scrollableTarget === null) {\r\n                console.warn(\"You are trying to pass scrollableTarget but it is null. This might\\n        happen because the element may not have been added to DOM yet.\\n        See https://github.com/ankeetmaini/react-infinite-scroll-component/issues/59 for more info.\\n      \");\r\n            }\r\n            return null;\r\n        };\r\n        _this.onStart = function (evt) {\r\n            if (_this.lastScrollTop)\r\n                return;\r\n            _this.dragging = true;\r\n            if (evt instanceof MouseEvent) {\r\n                _this.startY = evt.pageY;\r\n            }\r\n            else if (evt instanceof TouchEvent) {\r\n                _this.startY = evt.touches[0].pageY;\r\n            }\r\n            _this.currentY = _this.startY;\r\n            if (_this._infScroll) {\r\n                _this._infScroll.style.willChange = 'transform';\r\n                _this._infScroll.style.transition = \"transform 0.2s cubic-bezier(0,0,0.31,1)\";\r\n            }\r\n        };\r\n        _this.onMove = function (evt) {\r\n            if (!_this.dragging)\r\n                return;\r\n            if (evt instanceof MouseEvent) {\r\n                _this.currentY = evt.pageY;\r\n            }\r\n            else if (evt instanceof TouchEvent) {\r\n                _this.currentY = evt.touches[0].pageY;\r\n            }\r\n            // user is scrolling down to up\r\n            if (_this.currentY < _this.startY)\r\n                return;\r\n            if (_this.currentY - _this.startY >=\r\n                Number(_this.props.pullDownToRefreshThreshold)) {\r\n                _this.setState({\r\n                    pullToRefreshThresholdBreached: true,\r\n                });\r\n            }\r\n            // so you can drag upto 1.5 times of the maxPullDownDistance\r\n            if (_this.currentY - _this.startY > _this.maxPullDownDistance * 1.5)\r\n                return;\r\n            if (_this._infScroll) {\r\n                _this._infScroll.style.overflow = 'visible';\r\n                _this._infScroll.style.transform = \"translate3d(0px, \" + (_this.currentY -\r\n                    _this.startY) + \"px, 0px)\";\r\n            }\r\n        };\r\n        _this.onEnd = function () {\r\n            _this.startY = 0;\r\n            _this.currentY = 0;\r\n            _this.dragging = false;\r\n            if (_this.state.pullToRefreshThresholdBreached) {\r\n                _this.props.refreshFunction && _this.props.refreshFunction();\r\n                _this.setState({\r\n                    pullToRefreshThresholdBreached: false,\r\n                });\r\n            }\r\n            requestAnimationFrame(function () {\r\n                // this._infScroll\r\n                if (_this._infScroll) {\r\n                    _this._infScroll.style.overflow = 'auto';\r\n                    _this._infScroll.style.transform = 'none';\r\n                    _this._infScroll.style.willChange = 'unset';\r\n                }\r\n            });\r\n        };\r\n        _this.onScrollListener = function (event) {\r\n            if (typeof _this.props.onScroll === 'function') {\r\n                // Execute this callback in next tick so that it does not affect the\r\n                // functionality of the library.\r\n                setTimeout(function () { return _this.props.onScroll && _this.props.onScroll(event); }, 0);\r\n            }\r\n            var target = _this.props.height || _this._scrollableNode\r\n                ? event.target\r\n                : document.documentElement.scrollTop\r\n                    ? document.documentElement\r\n                    : document.body;\r\n            // return immediately if the action has already been triggered,\r\n            // prevents multiple triggers.\r\n            if (_this.actionTriggered)\r\n                return;\r\n            var atBottom = _this.props.inverse\r\n                ? _this.isElementAtTop(target, _this.props.scrollThreshold)\r\n                : _this.isElementAtBottom(target, _this.props.scrollThreshold);\r\n            // call the `next` function in the props to trigger the next data fetch\r\n            if (atBottom && _this.props.hasMore) {\r\n                _this.actionTriggered = true;\r\n                _this.setState({ showLoader: true });\r\n                _this.props.next && _this.props.next();\r\n            }\r\n            _this.lastScrollTop = target.scrollTop;\r\n        };\r\n        _this.state = {\r\n            showLoader: false,\r\n            pullToRefreshThresholdBreached: false,\r\n            prevDataLength: props.dataLength,\r\n        };\r\n        _this.throttledOnScrollListener = throttle(150, _this.onScrollListener).bind(_this);\r\n        _this.onStart = _this.onStart.bind(_this);\r\n        _this.onMove = _this.onMove.bind(_this);\r\n        _this.onEnd = _this.onEnd.bind(_this);\r\n        return _this;\r\n    }\r\n    InfiniteScroll.prototype.componentDidMount = function () {\r\n        if (typeof this.props.dataLength === 'undefined') {\r\n            throw new Error(\"mandatory prop \\\"dataLength\\\" is missing. The prop is needed\" +\r\n                \" when loading more content. Check README.md for usage\");\r\n        }\r\n        this._scrollableNode = this.getScrollableTarget();\r\n        this.el = this.props.height\r\n            ? this._infScroll\r\n            : this._scrollableNode || window;\r\n        if (this.el) {\r\n            this.el.addEventListener('scroll', this\r\n                .throttledOnScrollListener);\r\n        }\r\n        if (typeof this.props.initialScrollY === 'number' &&\r\n            this.el &&\r\n            this.el instanceof HTMLElement &&\r\n            this.el.scrollHeight > this.props.initialScrollY) {\r\n            this.el.scrollTo(0, this.props.initialScrollY);\r\n        }\r\n        if (this.props.pullDownToRefresh && this.el) {\r\n            this.el.addEventListener('touchstart', this.onStart);\r\n            this.el.addEventListener('touchmove', this.onMove);\r\n            this.el.addEventListener('touchend', this.onEnd);\r\n            this.el.addEventListener('mousedown', this.onStart);\r\n            this.el.addEventListener('mousemove', this.onMove);\r\n            this.el.addEventListener('mouseup', this.onEnd);\r\n            // get BCR of pullDown element to position it above\r\n            this.maxPullDownDistance =\r\n                (this._pullDown &&\r\n                    this._pullDown.firstChild &&\r\n                    this._pullDown.firstChild.getBoundingClientRect()\r\n                        .height) ||\r\n                    0;\r\n            this.forceUpdate();\r\n            if (typeof this.props.refreshFunction !== 'function') {\r\n                throw new Error(\"Mandatory prop \\\"refreshFunction\\\" missing.\\n          Pull Down To Refresh functionality will not work\\n          as expected. Check README.md for usage'\");\r\n            }\r\n        }\r\n    };\r\n    InfiniteScroll.prototype.componentWillUnmount = function () {\r\n        if (this.el) {\r\n            this.el.removeEventListener('scroll', this\r\n                .throttledOnScrollListener);\r\n            if (this.props.pullDownToRefresh) {\r\n                this.el.removeEventListener('touchstart', this.onStart);\r\n                this.el.removeEventListener('touchmove', this.onMove);\r\n                this.el.removeEventListener('touchend', this.onEnd);\r\n                this.el.removeEventListener('mousedown', this.onStart);\r\n                this.el.removeEventListener('mousemove', this.onMove);\r\n                this.el.removeEventListener('mouseup', this.onEnd);\r\n            }\r\n        }\r\n    };\r\n    InfiniteScroll.prototype.componentDidUpdate = function (prevProps) {\r\n        // do nothing when dataLength is unchanged\r\n        if (this.props.dataLength === prevProps.dataLength)\r\n            return;\r\n        this.actionTriggered = false;\r\n        // update state when new data was sent in\r\n        this.setState({\r\n            showLoader: false,\r\n        });\r\n    };\r\n    InfiniteScroll.getDerivedStateFromProps = function (nextProps, prevState) {\r\n        var dataLengthChanged = nextProps.dataLength !== prevState.prevDataLength;\r\n        // reset when data changes\r\n        if (dataLengthChanged) {\r\n            return __assign(__assign({}, prevState), { prevDataLength: nextProps.dataLength });\r\n        }\r\n        return null;\r\n    };\r\n    InfiniteScroll.prototype.isElementAtTop = function (target, scrollThreshold) {\r\n        if (scrollThreshold === void 0) { scrollThreshold = 0.8; }\r\n        var clientHeight = target === document.body || target === document.documentElement\r\n            ? window.screen.availHeight\r\n            : target.clientHeight;\r\n        var threshold = parseThreshold(scrollThreshold);\r\n        if (threshold.unit === ThresholdUnits.Pixel) {\r\n            return (target.scrollTop <=\r\n                threshold.value + clientHeight - target.scrollHeight + 1);\r\n        }\r\n        return (target.scrollTop <=\r\n            threshold.value / 100 + clientHeight - target.scrollHeight + 1);\r\n    };\r\n    InfiniteScroll.prototype.isElementAtBottom = function (target, scrollThreshold) {\r\n        if (scrollThreshold === void 0) { scrollThreshold = 0.8; }\r\n        var clientHeight = target === document.body || target === document.documentElement\r\n            ? window.screen.availHeight\r\n            : target.clientHeight;\r\n        var threshold = parseThreshold(scrollThreshold);\r\n        if (threshold.unit === ThresholdUnits.Pixel) {\r\n            return (target.scrollTop + clientHeight >= target.scrollHeight - threshold.value);\r\n        }\r\n        return (target.scrollTop + clientHeight >=\r\n            (threshold.value / 100) * target.scrollHeight);\r\n    };\r\n    InfiniteScroll.prototype.render = function () {\r\n        var _this = this;\r\n        var style = __assign({ height: this.props.height || 'auto', overflow: 'auto', WebkitOverflowScrolling: 'touch' }, this.props.style);\r\n        var hasChildren = this.props.hasChildren ||\r\n            !!(this.props.children &&\r\n                this.props.children instanceof Array &&\r\n                this.props.children.length);\r\n        // because heighted infiniteScroll visualy breaks\r\n        // on drag down as overflow becomes visible\r\n        var outerDivStyle = this.props.pullDownToRefresh && this.props.height\r\n            ? { overflow: 'auto' }\r\n            : {};\r\n        return (React.createElement(\"div\", { style: outerDivStyle, className: \"infinite-scroll-component__outerdiv\" },\r\n            React.createElement(\"div\", { className: \"infinite-scroll-component \" + (this.props.className || ''), ref: function (infScroll) { return (_this._infScroll = infScroll); }, style: style },\r\n                this.props.pullDownToRefresh && (React.createElement(\"div\", { style: { position: 'relative' }, ref: function (pullDown) { return (_this._pullDown = pullDown); } },\r\n                    React.createElement(\"div\", { style: {\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: -1 * this.maxPullDownDistance,\r\n                        } }, this.state.pullToRefreshThresholdBreached\r\n                        ? this.props.releaseToRefreshContent\r\n                        : this.props.pullDownToRefreshContent))),\r\n                this.props.children,\r\n                !this.state.showLoader &&\r\n                    !hasChildren &&\r\n                    this.props.hasMore &&\r\n                    this.props.loader,\r\n                this.state.showLoader && this.props.hasMore && this.props.loader,\r\n                !this.props.hasMore && this.props.endMessage)));\r\n    };\r\n    return InfiniteScroll;\r\n}(Component));\n\nexport default InfiniteScroll;\n//# sourceMappingURL=index.es.js.map\n","/**\n * @license lucide-react v0.429.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && array.indexOf(className) === index;\n}).join(\" \");\n\nexport { mergeClasses, toKebabCase };\n//# sourceMappingURL=utils.js.map\n","/**\n * @license lucide-react v0.429.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.429.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nimport { mergeClasses } from './shared/src/utils.js';\n\nconst Icon = forwardRef(\n  ({\n    color = \"currentColor\",\n    size = 24,\n    strokeWidth = 2,\n    absoluteStrokeWidth,\n    className = \"\",\n    children,\n    iconNode,\n    ...rest\n  }, ref) => {\n    return createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: mergeClasses(\"lucide\", className),\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...Array.isArray(children) ? children : [children]\n      ]\n    );\n  }\n);\n\nexport { Icon as default };\n//# sourceMappingURL=Icon.js.map\n","/**\n * @license lucide-react v0.429.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport { mergeClasses, toKebabCase } from './shared/src/utils.js';\nimport Icon from './Icon.js';\n\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ className, ...props }, ref) => createElement(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(`lucide-${toKebabCase(iconName)}`, className),\n      ...props\n    })\n  );\n  Component.displayName = `${iconName}`;\n  return Component;\n};\n\nexport { createLucideIcon as default };\n//# sourceMappingURL=createLucideIcon.js.map\n","/**\n * @license lucide-react v0.429.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst EllipsisVertical = createLucideIcon(\"EllipsisVertical\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"1\", key: \"41hilf\" }],\n  [\"circle\", { cx: \"12\", cy: \"5\", r: \"1\", key: \"gxeob9\" }],\n  [\"circle\", { cx: \"12\", cy: \"19\", r: \"1\", key: \"lyex9k\" }]\n]);\n\nexport { EllipsisVertical as default };\n//# sourceMappingURL=ellipsis-vertical.js.map\n","'use strict';\r\n\r\n// Last time updated: 2021-03-09 3:20:22 AM UTC\r\n\r\n// ________________\r\n// RecordRTC v5.6.2\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/RecordRTC\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\n// ____________\r\n// RecordRTC.js\r\n\r\n/**\r\n * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows. \r\n * @summary Record audio, video or screen inside the browser.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTC\r\n * @class\r\n * @example\r\n * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {\r\n *     type: 'video', // audio or video or gif or canvas\r\n *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc\r\n * });\r\n * recorder.startRecording();\r\n * @see For further information:\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\r\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction RecordRTC(mediaStream, config) {\r\n    if (!mediaStream) {\r\n        throw 'First parameter is required.';\r\n    }\r\n\r\n    config = config || {\r\n        type: 'video'\r\n    };\r\n\r\n    config = new RecordRTCConfiguration(mediaStream, config);\r\n\r\n    // a reference to user's recordRTC object\r\n    var self = this;\r\n\r\n    function startRecording(config2) {\r\n        if (!config.disableLogs) {\r\n            console.log('RecordRTC version: ', self.version);\r\n        }\r\n\r\n        if (!!config2) {\r\n            // allow users to set options using startRecording method\r\n            // config2 is similar to main \"config\" object (second parameter over RecordRTC constructor)\r\n            config = new RecordRTCConfiguration(mediaStream, config2);\r\n        }\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('started recording ' + config.type + ' stream.');\r\n        }\r\n\r\n        if (mediaRecorder) {\r\n            mediaRecorder.clearRecordedData();\r\n            mediaRecorder.record();\r\n\r\n            setState('recording');\r\n\r\n            if (self.recordingDuration) {\r\n                handleRecordingDuration();\r\n            }\r\n            return self;\r\n        }\r\n\r\n        initRecorder(function() {\r\n            if (self.recordingDuration) {\r\n                handleRecordingDuration();\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    function initRecorder(initCallback) {\r\n        if (initCallback) {\r\n            config.initCallback = function() {\r\n                initCallback();\r\n                initCallback = config.initCallback = null; // recorder.initRecorder should be call-backed once.\r\n            };\r\n        }\r\n\r\n        var Recorder = new GetRecorderType(mediaStream, config);\r\n\r\n        mediaRecorder = new Recorder(mediaStream, config);\r\n        mediaRecorder.record();\r\n\r\n        setState('recording');\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Initialized recorderType:', mediaRecorder.constructor.name, 'for output-type:', config.type);\r\n        }\r\n    }\r\n\r\n    function stopRecording(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state === 'paused') {\r\n            self.resumeRecording();\r\n\r\n            setTimeout(function() {\r\n                stopRecording(callback);\r\n            }, 1);\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'recording' && !config.disableLogs) {\r\n            console.warn('Recording state should be: \"recording\", however current state is: ', self.state);\r\n        }\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Stopped recording ' + config.type + ' stream.');\r\n        }\r\n\r\n        if (config.type !== 'gif') {\r\n            mediaRecorder.stop(_callback);\r\n        } else {\r\n            mediaRecorder.stop();\r\n            _callback();\r\n        }\r\n\r\n        setState('stopped');\r\n\r\n        function _callback(__blob) {\r\n            if (!mediaRecorder) {\r\n                if (typeof callback.call === 'function') {\r\n                    callback.call(self, '');\r\n                } else {\r\n                    callback('');\r\n                }\r\n                return;\r\n            }\r\n\r\n            Object.keys(mediaRecorder).forEach(function(key) {\r\n                if (typeof mediaRecorder[key] === 'function') {\r\n                    return;\r\n                }\r\n\r\n                self[key] = mediaRecorder[key];\r\n            });\r\n\r\n            var blob = mediaRecorder.blob;\r\n\r\n            if (!blob) {\r\n                if (__blob) {\r\n                    mediaRecorder.blob = blob = __blob;\r\n                } else {\r\n                    throw 'Recording failed.';\r\n                }\r\n            }\r\n\r\n            if (blob && !config.disableLogs) {\r\n                console.log(blob.type, '->', bytesToSize(blob.size));\r\n            }\r\n\r\n            if (callback) {\r\n                var url;\r\n\r\n                try {\r\n                    url = URL.createObjectURL(blob);\r\n                } catch (e) {}\r\n\r\n                if (typeof callback.call === 'function') {\r\n                    callback.call(self, url);\r\n                } else {\r\n                    callback(url);\r\n                }\r\n            }\r\n\r\n            if (!config.autoWriteToDisk) {\r\n                return;\r\n            }\r\n\r\n            getDataURL(function(dataURL) {\r\n                var parameter = {};\r\n                parameter[config.type + 'Blob'] = dataURL;\r\n                DiskStorage.Store(parameter);\r\n            });\r\n        }\r\n    }\r\n\r\n    function pauseRecording() {\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'recording') {\r\n            if (!config.disableLogs) {\r\n                console.warn('Unable to pause the recording. Recording state: ', self.state);\r\n            }\r\n            return;\r\n        }\r\n\r\n        setState('paused');\r\n\r\n        mediaRecorder.pause();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Paused recording.');\r\n        }\r\n    }\r\n\r\n    function resumeRecording() {\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'paused') {\r\n            if (!config.disableLogs) {\r\n                console.warn('Unable to resume the recording. Recording state: ', self.state);\r\n            }\r\n            return;\r\n        }\r\n\r\n        setState('recording');\r\n\r\n        // not all libs have this method yet\r\n        mediaRecorder.resume();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Resumed recording.');\r\n        }\r\n    }\r\n\r\n    function readFile(_blob) {\r\n        postMessage(new FileReaderSync().readAsDataURL(_blob));\r\n    }\r\n\r\n    function getDataURL(callback, _mediaRecorder) {\r\n        if (!callback) {\r\n            throw 'Pass a callback function over getDataURL.';\r\n        }\r\n\r\n        var blob = _mediaRecorder ? _mediaRecorder.blob : (mediaRecorder || {}).blob;\r\n\r\n        if (!blob) {\r\n            if (!config.disableLogs) {\r\n                console.warn('Blob encoder did not finish its job yet.');\r\n            }\r\n\r\n            setTimeout(function() {\r\n                getDataURL(callback, _mediaRecorder);\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        if (typeof Worker !== 'undefined' && !navigator.mozGetUserMedia) {\r\n            var webWorker = processInWebWorker(readFile);\r\n\r\n            webWorker.onmessage = function(event) {\r\n                callback(event.data);\r\n            };\r\n\r\n            webWorker.postMessage(blob);\r\n        } else {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(blob);\r\n            reader.onload = function(event) {\r\n                callback(event.target.result);\r\n            };\r\n        }\r\n\r\n        function processInWebWorker(_function) {\r\n            try {\r\n                var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                    'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n                ], {\r\n                    type: 'application/javascript'\r\n                }));\r\n\r\n                var worker = new Worker(blob);\r\n                URL.revokeObjectURL(blob);\r\n                return worker;\r\n            } catch (e) {}\r\n        }\r\n    }\r\n\r\n    function handleRecordingDuration(counter) {\r\n        counter = counter || 0;\r\n\r\n        if (self.state === 'paused') {\r\n            setTimeout(function() {\r\n                handleRecordingDuration(counter);\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        if (self.state === 'stopped') {\r\n            return;\r\n        }\r\n\r\n        if (counter >= self.recordingDuration) {\r\n            stopRecording(self.onRecordingStopped);\r\n            return;\r\n        }\r\n\r\n        counter += 1000; // 1-second\r\n\r\n        setTimeout(function() {\r\n            handleRecordingDuration(counter);\r\n        }, 1000);\r\n    }\r\n\r\n    function setState(state) {\r\n        if (!self) {\r\n            return;\r\n        }\r\n\r\n        self.state = state;\r\n\r\n        if (typeof self.onStateChanged.call === 'function') {\r\n            self.onStateChanged.call(self, state);\r\n        } else {\r\n            self.onStateChanged(state);\r\n        }\r\n    }\r\n\r\n    var WARNING = 'It seems that recorder is destroyed or \"startRecording\" is not invoked for ' + config.type + ' recorder.';\r\n\r\n    function warningLog() {\r\n        if (config.disableLogs === true) {\r\n            return;\r\n        }\r\n\r\n        console.warn(WARNING);\r\n    }\r\n\r\n    var mediaRecorder;\r\n\r\n    var returnObject = {\r\n        /**\r\n         * This method starts the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var recorder = RecordRTC(mediaStream, {\r\n         *     type: 'video'\r\n         * });\r\n         * recorder.startRecording();\r\n         */\r\n        startRecording: startRecording,\r\n\r\n        /**\r\n         * This method stops the recording. It is strongly recommended to get \"blob\" or \"URI\" inside the callback to make sure all recorders finished their job.\r\n         * @param {function} callback - Callback to get the recorded blob.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     // use either \"this\" or \"recorder\" object; both are identical\r\n         *     video.src = this.toURL();\r\n         *     var blob = this.getBlob();\r\n         * });\r\n         */\r\n        stopRecording: stopRecording,\r\n\r\n        /**\r\n         * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo Firefox is unable to pause the recording. Fix it.\r\n         * @example\r\n         * recorder.pauseRecording();  // pause the recording\r\n         * recorder.resumeRecording(); // resume again\r\n         */\r\n        pauseRecording: pauseRecording,\r\n\r\n        /**\r\n         * This method resumes the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.pauseRecording();  // first of all, pause the recording\r\n         * recorder.resumeRecording(); // now resume it\r\n         */\r\n        resumeRecording: resumeRecording,\r\n\r\n        /**\r\n         * This method initializes the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo This method should be deprecated.\r\n         * @example\r\n         * recorder.initRecorder();\r\n         */\r\n        initRecorder: initRecorder,\r\n\r\n        /**\r\n         * Ask RecordRTC to auto-stop the recording after 5 minutes.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var fiveMinutes = 5 * 1000 * 60;\r\n         * recorder.setRecordingDuration(fiveMinutes, function() {\r\n         *    var blob = this.getBlob();\r\n         *    video.src = this.toURL();\r\n         * });\r\n         * \r\n         * // or otherwise\r\n         * recorder.setRecordingDuration(fiveMinutes).onRecordingStopped(function() {\r\n         *    var blob = this.getBlob();\r\n         *    video.src = this.toURL();\r\n         * });\r\n         */\r\n        setRecordingDuration: function(recordingDuration, callback) {\r\n            if (typeof recordingDuration === 'undefined') {\r\n                throw 'recordingDuration is required.';\r\n            }\r\n\r\n            if (typeof recordingDuration !== 'number') {\r\n                throw 'recordingDuration must be a number.';\r\n            }\r\n\r\n            self.recordingDuration = recordingDuration;\r\n            self.onRecordingStopped = callback || function() {};\r\n\r\n            return {\r\n                onRecordingStopped: function(callback) {\r\n                    self.onRecordingStopped = callback;\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * This method can be used to clear/reset all the recorded data.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo Figure out the difference between \"reset\" and \"clearRecordedData\" methods.\r\n         * @example\r\n         * recorder.clearRecordedData();\r\n         */\r\n        clearRecordedData: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            mediaRecorder.clearRecordedData();\r\n\r\n            if (!config.disableLogs) {\r\n                console.log('Cleared old recorded data.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the recorded blob. Use this method inside the \"stopRecording\" callback.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var blob = this.getBlob();\r\n         *\r\n         *     var file = new File([blob], 'filename.webm', {\r\n         *         type: 'video/webm'\r\n         *     });\r\n         *\r\n         *     var formData = new FormData();\r\n         *     formData.append('file', file); // upload \"File\" object rather than a \"Blob\"\r\n         *     uploadToServer(formData);\r\n         * });\r\n         * @returns {Blob} Returns recorded data as \"Blob\" object.\r\n         */\r\n        getBlob: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            return mediaRecorder.blob;\r\n        },\r\n\r\n        /**\r\n         * Get data-URI instead of Blob.\r\n         * @param {function} callback - Callback to get the Data-URI.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     recorder.getDataURL(function(dataURI) {\r\n         *         video.src = dataURI;\r\n         *     });\r\n         * });\r\n         */\r\n        getDataURL: getDataURL,\r\n\r\n        /**\r\n         * Get virtual/temporary URL. Usage of this URL is limited to current tab.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     video.src = this.toURL();\r\n         * });\r\n         * @returns {String} Returns a virtual/temporary URL for the recorded \"Blob\".\r\n         */\r\n        toURL: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            return URL.createObjectURL(mediaRecorder.blob);\r\n        },\r\n\r\n        /**\r\n         * Get internal recording object (i.e. internal module) e.g. MutliStreamRecorder, MediaStreamRecorder, StereoAudioRecorder or WhammyRecorder etc.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var internalRecorder = recorder.getInternalRecorder();\r\n         * if(internalRecorder instanceof MultiStreamRecorder) {\r\n         *     internalRecorder.addStreams([newAudioStream]);\r\n         *     internalRecorder.resetVideoStreams([screenStream]);\r\n         * }\r\n         * @returns {Object} Returns internal recording object.\r\n         */\r\n        getInternalRecorder: function() {\r\n            return mediaRecorder;\r\n        },\r\n\r\n        /**\r\n         * Invoke save-as dialog to save the recorded blob into your disk.\r\n         * @param {string} fileName - Set your own file name.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     this.save('file-name');\r\n         *\r\n         *     // or manually:\r\n         *     invokeSaveAsDialog(this.getBlob(), 'filename.webm');\r\n         * });\r\n         */\r\n        save: function(fileName) {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            invokeSaveAsDialog(mediaRecorder.blob, fileName);\r\n        },\r\n\r\n        /**\r\n         * This method gets a blob from indexed-DB storage.\r\n         * @param {function} callback - Callback to get the recorded blob.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.getFromDisk(function(dataURL) {\r\n         *     video.src = dataURL;\r\n         * });\r\n         */\r\n        getFromDisk: function(callback) {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            RecordRTC.getFromDisk(config.type, callback);\r\n        },\r\n\r\n        /**\r\n         * This method appends an array of webp images to the recorded video-blob. It takes an \"array\" object.\r\n         * @type {Array.<Array>}\r\n         * @param {Array} arrayOfWebPImages - Array of webp images.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo This method should be deprecated.\r\n         * @example\r\n         * var arrayOfWebPImages = [];\r\n         * arrayOfWebPImages.push({\r\n         *     duration: index,\r\n         *     image: 'data:image/webp;base64,...'\r\n         * });\r\n         * recorder.setAdvertisementArray(arrayOfWebPImages);\r\n         */\r\n        setAdvertisementArray: function(arrayOfWebPImages) {\r\n            config.advertisement = [];\r\n\r\n            var length = arrayOfWebPImages.length;\r\n            for (var i = 0; i < length; i++) {\r\n                config.advertisement.push({\r\n                    duration: i,\r\n                    image: arrayOfWebPImages[i]\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * It is equivalent to <code class=\"str\">\"recorder.getBlob()\"</code> method. Usage of \"getBlob\" is recommended, though.\r\n         * @property {Blob} blob - Recorded Blob can be accessed using this property.\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var blob = this.blob;\r\n         *\r\n         *     // below one is recommended\r\n         *     var blob = this.getBlob();\r\n         * });\r\n         */\r\n        blob: null,\r\n\r\n        /**\r\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\r\n         * @property {number} bufferSize - Buffer-size used to encode the WAV container\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     alert('Recorder used this buffer-size: ' + this.bufferSize);\r\n         * });\r\n         */\r\n        bufferSize: 0,\r\n\r\n        /**\r\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\r\n         * @property {number} sampleRate - Sample-rates used to encode the WAV container\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     alert('Recorder used these sample-rates: ' + this.sampleRate);\r\n         * });\r\n         */\r\n        sampleRate: 0,\r\n\r\n        /**\r\n         * {recorderType:StereoAudioRecorder} returns ArrayBuffer object.\r\n         * @property {ArrayBuffer} buffer - Audio ArrayBuffer, supported only in Chrome.\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var arrayBuffer = this.buffer;\r\n         *     alert(arrayBuffer.byteLength);\r\n         * });\r\n         */\r\n        buffer: null,\r\n\r\n        /**\r\n         * This method resets the recorder. So that you can reuse single recorder instance many times.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.reset();\r\n         * recorder.startRecording();\r\n         */\r\n        reset: function() {\r\n            if (self.state === 'recording' && !config.disableLogs) {\r\n                console.warn('Stop an active recorder.');\r\n            }\r\n\r\n            if (mediaRecorder && typeof mediaRecorder.clearRecordedData === 'function') {\r\n                mediaRecorder.clearRecordedData();\r\n            }\r\n            mediaRecorder = null;\r\n            setState('inactive');\r\n            self.blob = null;\r\n        },\r\n\r\n        /**\r\n         * This method is called whenever recorder's state changes. Use this as an \"event\".\r\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.onStateChanged = function(state) {\r\n         *     console.log('Recorder state: ', state);\r\n         * };\r\n         */\r\n        onStateChanged: function(state) {\r\n            if (!config.disableLogs) {\r\n                console.log('Recorder state changed:', state);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * A recorder can have inactive, recording, paused or stopped states.\r\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\r\n         * @memberof RecordRTC\r\n         * @static\r\n         * @readonly\r\n         * @example\r\n         * // this looper function will keep you updated about the recorder's states.\r\n         * (function looper() {\r\n         *     document.querySelector('h1').innerHTML = 'Recorder\\'s state is: ' + recorder.state;\r\n         *     if(recorder.state === 'stopped') return; // ignore+stop\r\n         *     setTimeout(looper, 1000); // update after every 3-seconds\r\n         * })();\r\n         * recorder.startRecording();\r\n         */\r\n        state: 'inactive',\r\n\r\n        /**\r\n         * Get recorder's readonly state.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @example\r\n         * var state = recorder.getState();\r\n         * @returns {String} Returns recording state.\r\n         */\r\n        getState: function() {\r\n            return self.state;\r\n        },\r\n\r\n        /**\r\n         * Destroy RecordRTC instance. Clear all recorders and objects.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @example\r\n         * recorder.destroy();\r\n         */\r\n        destroy: function() {\r\n            var disableLogsCache = config.disableLogs;\r\n\r\n            config = {\r\n                disableLogs: true\r\n            };\r\n            self.reset();\r\n            setState('destroyed');\r\n            returnObject = self = null;\r\n\r\n            if (Storage.AudioContextConstructor) {\r\n                Storage.AudioContextConstructor.close();\r\n                Storage.AudioContextConstructor = null;\r\n            }\r\n\r\n            config.disableLogs = disableLogsCache;\r\n\r\n            if (!config.disableLogs) {\r\n                console.log('RecordRTC is destroyed.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * RecordRTC version number\r\n         * @property {String} version - Release version number.\r\n         * @memberof RecordRTC\r\n         * @static\r\n         * @readonly\r\n         * @example\r\n         * alert(recorder.version);\r\n         */\r\n        version: '5.6.2'\r\n    };\r\n\r\n    if (!this) {\r\n        self = returnObject;\r\n        return returnObject;\r\n    }\r\n\r\n    // if someone wants to use RecordRTC with the \"new\" keyword.\r\n    for (var prop in returnObject) {\r\n        this[prop] = returnObject[prop];\r\n    }\r\n\r\n    self = this;\r\n\r\n    return returnObject;\r\n}\r\n\r\nRecordRTC.version = '5.6.2';\r\n\r\nif (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n    module.exports = RecordRTC;\r\n}\r\n\r\nif (typeof define === 'function' && define.amd) {\r\n    define('RecordRTC', [], function() {\r\n        return RecordRTC;\r\n    });\r\n}\n\r\nRecordRTC.getFromDisk = function(type, callback) {\r\n    if (!callback) {\r\n        throw 'callback is mandatory.';\r\n    }\r\n\r\n    console.log('Getting recorded ' + (type === 'all' ? 'blobs' : type + ' blob ') + ' from disk!');\r\n    DiskStorage.Fetch(function(dataURL, _type) {\r\n        if (type !== 'all' && _type === type + 'Blob' && callback) {\r\n            callback(dataURL);\r\n        }\r\n\r\n        if (type === 'all' && callback) {\r\n            callback(dataURL, _type.replace('Blob', ''));\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * This method can be used to store recorded blobs into IndexedDB storage.\r\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\r\n * @method\r\n * @memberof RecordRTC\r\n * @example\r\n * RecordRTC.writeToDisk({\r\n *     audio: audioBlob,\r\n *     video: videoBlob,\r\n *     gif  : gifBlob\r\n * });\r\n */\r\nRecordRTC.writeToDisk = function(options) {\r\n    console.log('Writing recorded blob(s) to disk!');\r\n    options = options || {};\r\n    if (options.audio && options.video && options.gif) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.video.getDataURL(function(videoDataURL) {\r\n                options.gif.getDataURL(function(gifDataURL) {\r\n                    DiskStorage.Store({\r\n                        audioBlob: audioDataURL,\r\n                        videoBlob: videoDataURL,\r\n                        gifBlob: gifDataURL\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio && options.video) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.video.getDataURL(function(videoDataURL) {\r\n                DiskStorage.Store({\r\n                    audioBlob: audioDataURL,\r\n                    videoBlob: videoDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio && options.gif) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.gif.getDataURL(function(gifDataURL) {\r\n                DiskStorage.Store({\r\n                    audioBlob: audioDataURL,\r\n                    gifBlob: gifDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.video && options.gif) {\r\n        options.video.getDataURL(function(videoDataURL) {\r\n            options.gif.getDataURL(function(gifDataURL) {\r\n                DiskStorage.Store({\r\n                    videoBlob: videoDataURL,\r\n                    gifBlob: gifDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            DiskStorage.Store({\r\n                audioBlob: audioDataURL\r\n            });\r\n        });\r\n    } else if (options.video) {\r\n        options.video.getDataURL(function(videoDataURL) {\r\n            DiskStorage.Store({\r\n                videoBlob: videoDataURL\r\n            });\r\n        });\r\n    } else if (options.gif) {\r\n        options.gif.getDataURL(function(gifDataURL) {\r\n            DiskStorage.Store({\r\n                gifBlob: gifDataURL\r\n            });\r\n        });\r\n    }\r\n};\n\r\n// __________________________\r\n// RecordRTC-Configuration.js\r\n\r\n/**\r\n * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.\r\n * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid \"config\" object.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTCConfiguration\r\n * @class\r\n * @example\r\n * var options = RecordRTCConfiguration(mediaStream, options);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}\r\n */\r\n\r\nfunction RecordRTCConfiguration(mediaStream, config) {\r\n    if (!config.recorderType && !config.type) {\r\n        if (!!config.audio && !!config.video) {\r\n            config.type = 'video';\r\n        } else if (!!config.audio && !config.video) {\r\n            config.type = 'audio';\r\n        }\r\n    }\r\n\r\n    if (config.recorderType && !config.type) {\r\n        if (config.recorderType === WhammyRecorder || config.recorderType === CanvasRecorder || (typeof WebAssemblyRecorder !== 'undefined' && config.recorderType === WebAssemblyRecorder)) {\r\n            config.type = 'video';\r\n        } else if (config.recorderType === GifRecorder) {\r\n            config.type = 'gif';\r\n        } else if (config.recorderType === StereoAudioRecorder) {\r\n            config.type = 'audio';\r\n        } else if (config.recorderType === MediaStreamRecorder) {\r\n            if (getTracks(mediaStream, 'audio').length && getTracks(mediaStream, 'video').length) {\r\n                config.type = 'video';\r\n            } else if (!getTracks(mediaStream, 'audio').length && getTracks(mediaStream, 'video').length) {\r\n                config.type = 'video';\r\n            } else if (getTracks(mediaStream, 'audio').length && !getTracks(mediaStream, 'video').length) {\r\n                config.type = 'audio';\r\n            } else {\r\n                // config.type = 'UnKnown';\r\n            }\r\n        }\r\n    }\r\n\r\n    if (typeof MediaStreamRecorder !== 'undefined' && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\r\n        if (!config.mimeType) {\r\n            config.mimeType = 'video/webm';\r\n        }\r\n\r\n        if (!config.type) {\r\n            config.type = config.mimeType.split('/')[0];\r\n        }\r\n\r\n        if (!config.bitsPerSecond) {\r\n            // config.bitsPerSecond = 128000;\r\n        }\r\n    }\r\n\r\n    // consider default type=audio\r\n    if (!config.type) {\r\n        if (config.mimeType) {\r\n            config.type = config.mimeType.split('/')[0];\r\n        }\r\n        if (!config.type) {\r\n            config.type = 'audio';\r\n        }\r\n    }\r\n\r\n    return config;\r\n}\n\r\n// __________________\r\n// GetRecorderType.js\r\n\r\n/**\r\n * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.\r\n * @summary It returns best recorder-type available for your browser.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef GetRecorderType\r\n * @class\r\n * @example\r\n * var RecorderType = GetRecorderType(options);\r\n * var recorder = new RecorderType(options);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction GetRecorderType(mediaStream, config) {\r\n    var recorder;\r\n\r\n    // StereoAudioRecorder can work with all three: Edge, Firefox and Chrome\r\n    // todo: detect if it is Edge, then auto use: StereoAudioRecorder\r\n    if (isChrome || isEdge || isOpera) {\r\n        // Media Stream Recording API has not been implemented in chrome yet;\r\n        // That's why using WebAudio API to record stereo audio in WAV format\r\n        recorder = StereoAudioRecorder;\r\n    }\r\n\r\n    if (typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype && !isChrome) {\r\n        recorder = MediaStreamRecorder;\r\n    }\r\n\r\n    // video recorder (in WebM format)\r\n    if (config.type === 'video' && (isChrome || isOpera)) {\r\n        recorder = WhammyRecorder;\r\n\r\n        if (typeof WebAssemblyRecorder !== 'undefined' && typeof ReadableStream !== 'undefined') {\r\n            recorder = WebAssemblyRecorder;\r\n        }\r\n    }\r\n\r\n    // video recorder (in Gif format)\r\n    if (config.type === 'gif') {\r\n        recorder = GifRecorder;\r\n    }\r\n\r\n    // html2canvas recording!\r\n    if (config.type === 'canvas') {\r\n        recorder = CanvasRecorder;\r\n    }\r\n\r\n    if (isMediaRecorderCompatible() && recorder !== CanvasRecorder && recorder !== GifRecorder && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\r\n        if (getTracks(mediaStream, 'video').length || getTracks(mediaStream, 'audio').length) {\r\n            // audio-only recording\r\n            if (config.type === 'audio') {\r\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('audio/webm')) {\r\n                    recorder = MediaStreamRecorder;\r\n                }\r\n                // else recorder = StereoAudioRecorder;\r\n            } else {\r\n                // video or screen tracks\r\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('video/webm')) {\r\n                    recorder = MediaStreamRecorder;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (mediaStream instanceof Array && mediaStream.length) {\r\n        recorder = MultiStreamRecorder;\r\n    }\r\n\r\n    if (config.recorderType) {\r\n        recorder = config.recorderType;\r\n    }\r\n\r\n    if (!config.disableLogs && !!recorder && !!recorder.name) {\r\n        console.log('Using recorderType:', recorder.name || recorder.constructor.name);\r\n    }\r\n\r\n    if (!recorder && isSafari) {\r\n        recorder = MediaStreamRecorder;\r\n    }\r\n\r\n    return recorder;\r\n}\n\r\n// _____________\r\n// MRecordRTC.js\r\n\r\n/**\r\n * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.\r\n * @summary MRecordRTC stands for \"Multiple-RecordRTC\".\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef MRecordRTC\r\n * @class\r\n * @example\r\n * var recorder = new MRecordRTC();\r\n * recorder.addStream(MediaStream);\r\n * recorder.mediaType = {\r\n *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder\r\n *     video: true, // or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\r\n *     gif: true    // or GifRecorder\r\n * };\r\n * // mimeType is optional and should be set only in advance cases.\r\n * recorder.mimeType = {\r\n *     audio: 'audio/wav',\r\n *     video: 'video/webm',\r\n *     gif:   'image/gif'\r\n * };\r\n * recorder.startRecording();\r\n * @see For further information:\r\n * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @requires {@link RecordRTC}\r\n */\r\n\r\nfunction MRecordRTC(mediaStream) {\r\n\r\n    /**\r\n     * This method attaches MediaStream object to {@link MRecordRTC}.\r\n     * @param {MediaStream} mediaStream - A MediaStream object, either fetched using getUserMedia API, or generated using captureStreamUntilEnded or WebAudio API.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.addStream(MediaStream);\r\n     */\r\n    this.addStream = function(_mediaStream) {\r\n        if (_mediaStream) {\r\n            mediaStream = _mediaStream;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This property can be used to set the recording type e.g. audio, or video, or gif, or canvas.\r\n     * @property {object} mediaType - {audio: true, video: true, gif: true}\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * var recorder = new MRecordRTC();\r\n     * recorder.mediaType = {\r\n     *     audio: true, // TRUE or StereoAudioRecorder or MediaStreamRecorder\r\n     *     video: true, // TRUE or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\r\n     *     gif  : true  // TRUE or GifRecorder\r\n     * };\r\n     */\r\n    this.mediaType = {\r\n        audio: true,\r\n        video: true\r\n    };\r\n\r\n    /**\r\n     * This method starts recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.startRecording();\r\n     */\r\n    this.startRecording = function() {\r\n        var mediaType = this.mediaType;\r\n        var recorderType;\r\n        var mimeType = this.mimeType || {\r\n            audio: null,\r\n            video: null,\r\n            gif: null\r\n        };\r\n\r\n        if (typeof mediaType.audio !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'audio').length) {\r\n            mediaType.audio = false;\r\n        }\r\n\r\n        if (typeof mediaType.video !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'video').length) {\r\n            mediaType.video = false;\r\n        }\r\n\r\n        if (typeof mediaType.gif !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'video').length) {\r\n            mediaType.gif = false;\r\n        }\r\n\r\n        if (!mediaType.audio && !mediaType.video && !mediaType.gif) {\r\n            throw 'MediaStream must have either audio or video tracks.';\r\n        }\r\n\r\n        if (!!mediaType.audio) {\r\n            recorderType = null;\r\n            if (typeof mediaType.audio === 'function') {\r\n                recorderType = mediaType.audio;\r\n            }\r\n\r\n            this.audioRecorder = new RecordRTC(mediaStream, {\r\n                type: 'audio',\r\n                bufferSize: this.bufferSize,\r\n                sampleRate: this.sampleRate,\r\n                numberOfAudioChannels: this.numberOfAudioChannels || 2,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.audio,\r\n                timeSlice: this.timeSlice,\r\n                onTimeStamp: this.onTimeStamp\r\n            });\r\n\r\n            if (!mediaType.video) {\r\n                this.audioRecorder.startRecording();\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.video) {\r\n            recorderType = null;\r\n            if (typeof mediaType.video === 'function') {\r\n                recorderType = mediaType.video;\r\n            }\r\n\r\n            var newStream = mediaStream;\r\n\r\n            if (isMediaRecorderCompatible() && !!mediaType.audio && typeof mediaType.audio === 'function') {\r\n                var videoTrack = getTracks(mediaStream, 'video')[0];\r\n\r\n                if (isFirefox) {\r\n                    newStream = new MediaStream();\r\n                    newStream.addTrack(videoTrack);\r\n\r\n                    if (recorderType && recorderType === WhammyRecorder) {\r\n                        // Firefox does NOT supports webp-encoding yet\r\n                        // But Firefox do supports WebAssemblyRecorder\r\n                        recorderType = MediaStreamRecorder;\r\n                    }\r\n                } else {\r\n                    newStream = new MediaStream();\r\n                    newStream.addTrack(videoTrack);\r\n                }\r\n            }\r\n\r\n            this.videoRecorder = new RecordRTC(newStream, {\r\n                type: 'video',\r\n                video: this.video,\r\n                canvas: this.canvas,\r\n                frameInterval: this.frameInterval || 10,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.video,\r\n                timeSlice: this.timeSlice,\r\n                onTimeStamp: this.onTimeStamp,\r\n                workerPath: this.workerPath,\r\n                webAssemblyPath: this.webAssemblyPath,\r\n                frameRate: this.frameRate, // used by WebAssemblyRecorder; values: usually 30; accepts any.\r\n                bitrate: this.bitrate // used by WebAssemblyRecorder; values: 0 to 1000+\r\n            });\r\n\r\n            if (!mediaType.audio) {\r\n                this.videoRecorder.startRecording();\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.audio && !!mediaType.video) {\r\n            var self = this;\r\n\r\n            var isSingleRecorder = isMediaRecorderCompatible() === true;\r\n\r\n            if (mediaType.audio instanceof StereoAudioRecorder && !!mediaType.video) {\r\n                isSingleRecorder = false;\r\n            } else if (mediaType.audio !== true && mediaType.video !== true && mediaType.audio !== mediaType.video) {\r\n                isSingleRecorder = false;\r\n            }\r\n\r\n            if (isSingleRecorder === true) {\r\n                self.audioRecorder = null;\r\n                self.videoRecorder.startRecording();\r\n            } else {\r\n                self.videoRecorder.initRecorder(function() {\r\n                    self.audioRecorder.initRecorder(function() {\r\n                        // Both recorders are ready to record things accurately\r\n                        self.videoRecorder.startRecording();\r\n                        self.audioRecorder.startRecording();\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.gif) {\r\n            recorderType = null;\r\n            if (typeof mediaType.gif === 'function') {\r\n                recorderType = mediaType.gif;\r\n            }\r\n            this.gifRecorder = new RecordRTC(mediaStream, {\r\n                type: 'gif',\r\n                frameRate: this.frameRate || 200,\r\n                quality: this.quality || 10,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.gif\r\n            });\r\n            this.gifRecorder.startRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method stops recording.\r\n     * @param {function} callback - Callback function is invoked when all encoders finished their jobs.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.stopRecording(function(recording){\r\n     *     var audioBlob = recording.audio;\r\n     *     var videoBlob = recording.video;\r\n     *     var gifBlob   = recording.gif;\r\n     * });\r\n     */\r\n    this.stopRecording = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'audio');\r\n            });\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'video');\r\n            });\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'gif');\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method pauses recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.pauseRecording();\r\n     */\r\n    this.pauseRecording = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.pauseRecording();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.pauseRecording();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.pauseRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.resumeRecording();\r\n     */\r\n    this.resumeRecording = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.resumeRecording();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.resumeRecording();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.resumeRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to manually get all recorded blobs.\r\n     * @param {function} callback - All recorded blobs are passed back to the \"callback\" function.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.getBlob(function(recording){\r\n     *     var audioBlob = recording.audio;\r\n     *     var videoBlob = recording.video;\r\n     *     var gifBlob   = recording.gif;\r\n     * });\r\n     * // or\r\n     * var audioBlob = recorder.getBlob().audio;\r\n     * var videoBlob = recorder.getBlob().video;\r\n     */\r\n    this.getBlob = function(callback) {\r\n        var output = {};\r\n\r\n        if (this.audioRecorder) {\r\n            output.audio = this.audioRecorder.getBlob();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            output.video = this.videoRecorder.getBlob();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            output.gif = this.gifRecorder.getBlob();\r\n        }\r\n\r\n        if (callback) {\r\n            callback(output);\r\n        }\r\n\r\n        return output;\r\n    };\r\n\r\n    /**\r\n     * Destroy all recorder instances.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.destroy();\r\n     */\r\n    this.destroy = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.destroy();\r\n            this.audioRecorder = null;\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.destroy();\r\n            this.videoRecorder = null;\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.destroy();\r\n            this.gifRecorder = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to manually get all recorded blobs' DataURLs.\r\n     * @param {function} callback - All recorded blobs' DataURLs are passed back to the \"callback\" function.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.getDataURL(function(recording){\r\n     *     var audioDataURL = recording.audio;\r\n     *     var videoDataURL = recording.video;\r\n     *     var gifDataURL   = recording.gif;\r\n     * });\r\n     */\r\n    this.getDataURL = function(callback) {\r\n        this.getBlob(function(blob) {\r\n            if (blob.audio && blob.video) {\r\n                getDataURL(blob.audio, function(_audioDataURL) {\r\n                    getDataURL(blob.video, function(_videoDataURL) {\r\n                        callback({\r\n                            audio: _audioDataURL,\r\n                            video: _videoDataURL\r\n                        });\r\n                    });\r\n                });\r\n            } else if (blob.audio) {\r\n                getDataURL(blob.audio, function(_audioDataURL) {\r\n                    callback({\r\n                        audio: _audioDataURL\r\n                    });\r\n                });\r\n            } else if (blob.video) {\r\n                getDataURL(blob.video, function(_videoDataURL) {\r\n                    callback({\r\n                        video: _videoDataURL\r\n                    });\r\n                });\r\n            }\r\n        });\r\n\r\n        function getDataURL(blob, callback00) {\r\n            if (typeof Worker !== 'undefined') {\r\n                var webWorker = processInWebWorker(function readFile(_blob) {\r\n                    postMessage(new FileReaderSync().readAsDataURL(_blob));\r\n                });\r\n\r\n                webWorker.onmessage = function(event) {\r\n                    callback00(event.data);\r\n                };\r\n\r\n                webWorker.postMessage(blob);\r\n            } else {\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(blob);\r\n                reader.onload = function(event) {\r\n                    callback00(event.target.result);\r\n                };\r\n            }\r\n        }\r\n\r\n        function processInWebWorker(_function) {\r\n            var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n            ], {\r\n                type: 'application/javascript'\r\n            }));\r\n\r\n            var worker = new Worker(blob);\r\n            var url;\r\n            if (typeof URL !== 'undefined') {\r\n                url = URL;\r\n            } else if (typeof webkitURL !== 'undefined') {\r\n                url = webkitURL;\r\n            } else {\r\n                throw 'Neither URL nor webkitURL detected.';\r\n            }\r\n            url.revokeObjectURL(blob);\r\n            return worker;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to ask {@link MRecordRTC} to write all recorded blobs into IndexedDB storage.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.writeToDisk();\r\n     */\r\n    this.writeToDisk = function() {\r\n        RecordRTC.writeToDisk({\r\n            audio: this.audioRecorder,\r\n            video: this.videoRecorder,\r\n            gif: this.gifRecorder\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method can be used to invoke a save-as dialog for all recorded blobs.\r\n     * @param {object} args - {audio: 'audio-name', video: 'video-name', gif: 'gif-name'}\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.save({\r\n     *     audio: 'audio-file-name',\r\n     *     video: 'video-file-name',\r\n     *     gif  : 'gif-file-name'\r\n     * });\r\n     */\r\n    this.save = function(args) {\r\n        args = args || {\r\n            audio: true,\r\n            video: true,\r\n            gif: true\r\n        };\r\n\r\n        if (!!args.audio && this.audioRecorder) {\r\n            this.audioRecorder.save(typeof args.audio === 'string' ? args.audio : '');\r\n        }\r\n\r\n        if (!!args.video && this.videoRecorder) {\r\n            this.videoRecorder.save(typeof args.video === 'string' ? args.video : '');\r\n        }\r\n        if (!!args.gif && this.gifRecorder) {\r\n            this.gifRecorder.save(typeof args.gif === 'string' ? args.gif : '');\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * This method can be used to get all recorded blobs from IndexedDB storage.\r\n * @param {string} type - 'all' or 'audio' or 'video' or 'gif'\r\n * @param {function} callback - Callback function to get all stored blobs.\r\n * @method\r\n * @memberof MRecordRTC\r\n * @example\r\n * MRecordRTC.getFromDisk('all', function(dataURL, type){\r\n *     if(type === 'audio') { }\r\n *     if(type === 'video') { }\r\n *     if(type === 'gif')   { }\r\n * });\r\n */\r\nMRecordRTC.getFromDisk = RecordRTC.getFromDisk;\r\n\r\n/**\r\n * This method can be used to store recorded blobs into IndexedDB storage.\r\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\r\n * @method\r\n * @memberof MRecordRTC\r\n * @example\r\n * MRecordRTC.writeToDisk({\r\n *     audio: audioBlob,\r\n *     video: videoBlob,\r\n *     gif  : gifBlob\r\n * });\r\n */\r\nMRecordRTC.writeToDisk = RecordRTC.writeToDisk;\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MRecordRTC = MRecordRTC;\r\n}\n\r\nvar browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n(function(that) {\r\n    if (!that) {\r\n        return;\r\n    }\r\n\r\n    if (typeof window !== 'undefined') {\r\n        return;\r\n    }\r\n\r\n    if (typeof global === 'undefined') {\r\n        return;\r\n    }\r\n\r\n    global.navigator = {\r\n        userAgent: browserFakeUserAgent,\r\n        getUserMedia: function() {}\r\n    };\r\n\r\n    if (!global.console) {\r\n        global.console = {};\r\n    }\r\n\r\n    if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\r\n        global.console.error = global.console.log = global.console.log || function() {\r\n            console.log(arguments);\r\n        };\r\n    }\r\n\r\n    if (typeof document === 'undefined') {\r\n        /*global document:true */\r\n        that.document = {\r\n            documentElement: {\r\n                appendChild: function() {\r\n                    return '';\r\n                }\r\n            }\r\n        };\r\n\r\n        document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n            var obj = {\r\n                getContext: function() {\r\n                    return obj;\r\n                },\r\n                play: function() {},\r\n                pause: function() {},\r\n                drawImage: function() {},\r\n                toDataURL: function() {\r\n                    return '';\r\n                },\r\n                style: {}\r\n            };\r\n            return obj;\r\n        };\r\n\r\n        that.HTMLVideoElement = function() {};\r\n    }\r\n\r\n    if (typeof location === 'undefined') {\r\n        /*global location:true */\r\n        that.location = {\r\n            protocol: 'file:',\r\n            href: '',\r\n            hash: ''\r\n        };\r\n    }\r\n\r\n    if (typeof screen === 'undefined') {\r\n        /*global screen:true */\r\n        that.screen = {\r\n            width: 0,\r\n            height: 0\r\n        };\r\n    }\r\n\r\n    if (typeof URL === 'undefined') {\r\n        /*global screen:true */\r\n        that.URL = {\r\n            createObjectURL: function() {\r\n                return '';\r\n            },\r\n            revokeObjectURL: function() {\r\n                return '';\r\n            }\r\n        };\r\n    }\r\n\r\n    /*global window:true */\r\n    that.window = global;\r\n})(typeof global !== 'undefined' ? global : null);\n\r\n// _____________________________\r\n// Cross-Browser-Declarations.js\r\n\r\n// animation-frame used in WebM recording\r\n\r\n/*jshint -W079 */\r\nvar requestAnimationFrame = window.requestAnimationFrame;\r\nif (typeof requestAnimationFrame === 'undefined') {\r\n    if (typeof webkitRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = webkitRequestAnimationFrame;\r\n    } else if (typeof mozRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = mozRequestAnimationFrame;\r\n    } else if (typeof msRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = msRequestAnimationFrame;\r\n    } else if (typeof requestAnimationFrame === 'undefined') {\r\n        // via: https://gist.github.com/paulirish/1579671\r\n        var lastTime = 0;\r\n\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = function(callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function() {\r\n                callback(currTime + timeToCall);\r\n            }, timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    }\r\n}\r\n\r\n/*jshint -W079 */\r\nvar cancelAnimationFrame = window.cancelAnimationFrame;\r\nif (typeof cancelAnimationFrame === 'undefined') {\r\n    if (typeof webkitCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = webkitCancelAnimationFrame;\r\n    } else if (typeof mozCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = mozCancelAnimationFrame;\r\n    } else if (typeof msCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = msCancelAnimationFrame;\r\n    } else if (typeof cancelAnimationFrame === 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = function(id) {\r\n            clearTimeout(id);\r\n        };\r\n    }\r\n}\r\n\r\n// WebAudio API representer\r\nvar AudioContext = window.AudioContext;\r\n\r\nif (typeof AudioContext === 'undefined') {\r\n    if (typeof webkitAudioContext !== 'undefined') {\r\n        /*global AudioContext:true */\r\n        AudioContext = webkitAudioContext;\r\n    }\r\n\r\n    if (typeof mozAudioContext !== 'undefined') {\r\n        /*global AudioContext:true */\r\n        AudioContext = mozAudioContext;\r\n    }\r\n}\r\n\r\n/*jshint -W079 */\r\nvar URL = window.URL;\r\n\r\nif (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\r\n    /*global URL:true */\r\n    URL = webkitURL;\r\n}\r\n\r\nif (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\r\n    if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n        navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n    }\r\n\r\n    if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n        navigator.getUserMedia = navigator.mozGetUserMedia;\r\n    }\r\n}\r\n\r\nvar isEdge = navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveBlob || !!navigator.msSaveOrOpenBlob);\r\nvar isOpera = !!window.opera || navigator.userAgent.indexOf('OPR/') !== -1;\r\nvar isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1 && ('netscape' in window) && / rv:/.test(navigator.userAgent);\r\nvar isChrome = (!isOpera && !isEdge && !!navigator.webkitGetUserMedia) || isElectron() || navigator.userAgent.toLowerCase().indexOf('chrome/') !== -1;\r\n\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n\r\nif (isSafari && !isChrome && navigator.userAgent.indexOf('CriOS') !== -1) {\r\n    isSafari = false;\r\n    isChrome = true;\r\n}\r\n\r\nvar MediaStream = window.MediaStream;\r\n\r\nif (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n    MediaStream = webkitMediaStream;\r\n}\r\n\r\n/*global MediaStream:true */\r\nif (typeof MediaStream !== 'undefined') {\r\n    // override \"stop\" method for all browsers\r\n    if (typeof MediaStream.prototype.stop === 'undefined') {\r\n        MediaStream.prototype.stop = function() {\r\n            this.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n        };\r\n    }\r\n}\r\n\r\n// below function via: http://goo.gl/B3ae8c\r\n/**\r\n * Return human-readable file size.\r\n * @param {number} bytes - Pass bytes and get formatted string.\r\n * @returns {string} - formatted string\r\n * @example\r\n * bytesToSize(1024*1024*5) === '5 GB'\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction bytesToSize(bytes) {\r\n    var k = 1000;\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes === 0) {\r\n        return '0 Bytes';\r\n    }\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);\r\n    return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\r\n}\r\n\r\n/**\r\n * @param {Blob} file - File or Blob object. This parameter is required.\r\n * @param {string} fileName - Optional file name e.g. \"Recorded-Video.webm\"\r\n * @example\r\n * invokeSaveAsDialog(blob or file, [optional] fileName);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction invokeSaveAsDialog(file, fileName) {\r\n    if (!file) {\r\n        throw 'Blob object is required.';\r\n    }\r\n\r\n    if (!file.type) {\r\n        try {\r\n            file.type = 'video/webm';\r\n        } catch (e) {}\r\n    }\r\n\r\n    var fileExtension = (file.type || 'video/webm').split('/')[1];\r\n    if (fileExtension.indexOf(';') !== -1) {\r\n        // extended mimetype, e.g. 'video/webm;codecs=vp8,opus'\r\n        fileExtension = fileExtension.split(';')[0];\r\n    }\r\n    if (fileName && fileName.indexOf('.') !== -1) {\r\n        var splitted = fileName.split('.');\r\n        fileName = splitted[0];\r\n        fileExtension = splitted[1];\r\n    }\r\n\r\n    var fileFullName = (fileName || (Math.round(Math.random() * 9999999999) + 888888888)) + '.' + fileExtension;\r\n\r\n    if (typeof navigator.msSaveOrOpenBlob !== 'undefined') {\r\n        return navigator.msSaveOrOpenBlob(file, fileFullName);\r\n    } else if (typeof navigator.msSaveBlob !== 'undefined') {\r\n        return navigator.msSaveBlob(file, fileFullName);\r\n    }\r\n\r\n    var hyperlink = document.createElement('a');\r\n    hyperlink.href = URL.createObjectURL(file);\r\n    hyperlink.download = fileFullName;\r\n\r\n    hyperlink.style = 'display:none;opacity:0;color:transparent;';\r\n    (document.body || document.documentElement).appendChild(hyperlink);\r\n\r\n    if (typeof hyperlink.click === 'function') {\r\n        hyperlink.click();\r\n    } else {\r\n        hyperlink.target = '_blank';\r\n        hyperlink.dispatchEvent(new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true\r\n        }));\r\n    }\r\n\r\n    URL.revokeObjectURL(hyperlink.href);\r\n}\r\n\r\n/**\r\n * from: https://github.com/cheton/is-electron/blob/master/index.js\r\n **/\r\nfunction isElectron() {\r\n    // Renderer process\r\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\r\n        return true;\r\n    }\r\n\r\n    // Main process\r\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\r\n        return true;\r\n    }\r\n\r\n    // Detect the user agent when the `nodeIntegration` option is set to true\r\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction getTracks(stream, kind) {\r\n    if (!stream || !stream.getTracks) {\r\n        return [];\r\n    }\r\n\r\n    return stream.getTracks().filter(function(t) {\r\n        return t.kind === (kind || 'audio');\r\n    });\r\n}\r\n\r\nfunction setSrcObject(stream, element) {\r\n    if ('srcObject' in element) {\r\n        element.srcObject = stream;\r\n    } else if ('mozSrcObject' in element) {\r\n        element.mozSrcObject = stream;\r\n    } else {\r\n        element.srcObject = stream;\r\n    }\r\n}\r\n\r\n/**\r\n * @param {Blob} file - File or Blob object.\r\n * @param {function} callback - Callback function.\r\n * @example\r\n * getSeekableBlob(blob or file, callback);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction getSeekableBlob(inputBlob, callback) {\r\n    // EBML.js copyrights goes to: https://github.com/legokichi/ts-ebml\r\n    if (typeof EBML === 'undefined') {\r\n        throw new Error('Please link: https://www.webrtc-experiment.com/EBML.js');\r\n    }\r\n\r\n    var reader = new EBML.Reader();\r\n    var decoder = new EBML.Decoder();\r\n    var tools = EBML.tools;\r\n\r\n    var fileReader = new FileReader();\r\n    fileReader.onload = function(e) {\r\n        var ebmlElms = decoder.decode(this.result);\r\n        ebmlElms.forEach(function(element) {\r\n            reader.read(element);\r\n        });\r\n        reader.stop();\r\n        var refinedMetadataBuf = tools.makeMetadataSeekable(reader.metadatas, reader.duration, reader.cues);\r\n        var body = this.result.slice(reader.metadataSize);\r\n        var newBlob = new Blob([refinedMetadataBuf, body], {\r\n            type: 'video/webm'\r\n        });\r\n\r\n        callback(newBlob);\r\n    };\r\n    fileReader.readAsArrayBuffer(inputBlob);\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.invokeSaveAsDialog = invokeSaveAsDialog;\r\n    RecordRTC.getTracks = getTracks;\r\n    RecordRTC.getSeekableBlob = getSeekableBlob;\r\n    RecordRTC.bytesToSize = bytesToSize;\r\n    RecordRTC.isElectron = isElectron;\r\n}\r\n\r\n// __________ (used to handle stuff like http://goo.gl/xmE5eg) issue #129\r\n// Storage.js\r\n\r\n/**\r\n * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. \"new AudioContext\".\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @example\r\n * Storage.AudioContext === webkitAudioContext\r\n * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\nvar Storage = {};\r\n\r\nif (typeof AudioContext !== 'undefined') {\r\n    Storage.AudioContext = AudioContext;\r\n} else if (typeof webkitAudioContext !== 'undefined') {\r\n    Storage.AudioContext = webkitAudioContext;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.Storage = Storage;\r\n}\n\r\nfunction isMediaRecorderCompatible() {\r\n    if (isFirefox || isSafari || isEdge) {\r\n        return true;\r\n    }\r\n\r\n    var nVer = navigator.appVersion;\r\n    var nAgt = navigator.userAgent;\r\n    var fullVersion = '' + parseFloat(navigator.appVersion);\r\n    var majorVersion = parseInt(navigator.appVersion, 10);\r\n    var nameOffset, verOffset, ix;\r\n\r\n    if (isChrome || isOpera) {\r\n        verOffset = nAgt.indexOf('Chrome');\r\n        fullVersion = nAgt.substring(verOffset + 7);\r\n    }\r\n\r\n    // trim the fullVersion string at semicolon/space if present\r\n    if ((ix = fullVersion.indexOf(';')) !== -1) {\r\n        fullVersion = fullVersion.substring(0, ix);\r\n    }\r\n\r\n    if ((ix = fullVersion.indexOf(' ')) !== -1) {\r\n        fullVersion = fullVersion.substring(0, ix);\r\n    }\r\n\r\n    majorVersion = parseInt('' + fullVersion, 10);\r\n\r\n    if (isNaN(majorVersion)) {\r\n        fullVersion = '' + parseFloat(navigator.appVersion);\r\n        majorVersion = parseInt(navigator.appVersion, 10);\r\n    }\r\n\r\n    return majorVersion >= 49;\r\n}\n\r\n// ______________________\r\n// MediaStreamRecorder.js\r\n\r\n/**\r\n * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.\r\n * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://github.com/muaz-khan|Muaz Khan}\r\n * @typedef MediaStreamRecorder\r\n * @class\r\n * @example\r\n * var config = {\r\n *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis\r\n *     audioBitsPerSecond : 256 * 8 * 1024,\r\n *     videoBitsPerSecond : 256 * 8 * 1024,\r\n *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two\r\n *     checkForInactiveTracks: true,\r\n *     timeSlice: 1000, // concatenate intervals based blobs\r\n *     ondataavailable: function() {} // get intervals based blobs\r\n * }\r\n * var recorder = new MediaStreamRecorder(mediaStream, config);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n *\r\n *     // or\r\n *     var blob = recorder.blob;\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {disableLogs:true, initCallback: function, mimeType: \"video/webm\", timeSlice: 1000}\r\n * @throws Will throw an error if first argument \"MediaStream\" is missing. Also throws error if \"MediaRecorder API\" are not supported by the browser.\r\n */\r\n\r\nfunction MediaStreamRecorder(mediaStream, config) {\r\n    var self = this;\r\n\r\n    if (typeof mediaStream === 'undefined') {\r\n        throw 'First argument \"MediaStream\" is required.';\r\n    }\r\n\r\n    if (typeof MediaRecorder === 'undefined') {\r\n        throw 'Your browser does not support the Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.';\r\n    }\r\n\r\n    config = config || {\r\n        // bitsPerSecond: 256 * 8 * 1024,\r\n        mimeType: 'video/webm'\r\n    };\r\n\r\n    if (config.type === 'audio') {\r\n        if (getTracks(mediaStream, 'video').length && getTracks(mediaStream, 'audio').length) {\r\n            var stream;\r\n            if (!!navigator.mozGetUserMedia) {\r\n                stream = new MediaStream();\r\n                stream.addTrack(getTracks(mediaStream, 'audio')[0]);\r\n            } else {\r\n                // webkitMediaStream\r\n                stream = new MediaStream(getTracks(mediaStream, 'audio'));\r\n            }\r\n            mediaStream = stream;\r\n        }\r\n\r\n        if (!config.mimeType || config.mimeType.toString().toLowerCase().indexOf('audio') === -1) {\r\n            config.mimeType = isChrome ? 'audio/webm' : 'audio/ogg';\r\n        }\r\n\r\n        if (config.mimeType && config.mimeType.toString().toLowerCase() !== 'audio/ogg' && !!navigator.mozGetUserMedia) {\r\n            // forcing better codecs on Firefox (via #166)\r\n            config.mimeType = 'audio/ogg';\r\n        }\r\n    }\r\n\r\n    var arrayOfBlobs = [];\r\n\r\n    /**\r\n     * This method returns array of blobs. Use only with \"timeSlice\". Its useful to preview recording anytime, without using the \"stop\" method.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var arrayOfBlobs = recorder.getArrayOfBlobs();\r\n     * @returns {Array} Returns array of recorded blobs.\r\n     */\r\n    this.getArrayOfBlobs = function() {\r\n        return arrayOfBlobs;\r\n    };\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        // set defaults\r\n        self.blob = null;\r\n        self.clearRecordedData();\r\n        self.timestamps = [];\r\n        allStates = [];\r\n        arrayOfBlobs = [];\r\n\r\n        var recorderHints = config;\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Passing following config over MediaRecorder API.', recorderHints);\r\n        }\r\n\r\n        if (mediaRecorder) {\r\n            // mandatory to make sure Firefox doesn't fails to record streams 3-4 times without reloading the page.\r\n            mediaRecorder = null;\r\n        }\r\n\r\n        if (isChrome && !isMediaRecorderCompatible()) {\r\n            // to support video-only recording on stable\r\n            recorderHints = 'video/vp8';\r\n        }\r\n\r\n        if (typeof MediaRecorder.isTypeSupported === 'function' && recorderHints.mimeType) {\r\n            if (!MediaRecorder.isTypeSupported(recorderHints.mimeType)) {\r\n                if (!config.disableLogs) {\r\n                    console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\r\n                }\r\n\r\n                recorderHints.mimeType = config.type === 'audio' ? 'audio/webm' : 'video/webm';\r\n            }\r\n        }\r\n\r\n        // using MediaRecorder API here\r\n        try {\r\n            mediaRecorder = new MediaRecorder(mediaStream, recorderHints);\r\n\r\n            // reset\r\n            config.mimeType = recorderHints.mimeType;\r\n        } catch (e) {\r\n            // chrome-based fallback\r\n            mediaRecorder = new MediaRecorder(mediaStream);\r\n        }\r\n\r\n        // old hack?\r\n        if (recorderHints.mimeType && !MediaRecorder.isTypeSupported && 'canRecordMimeType' in mediaRecorder && mediaRecorder.canRecordMimeType(recorderHints.mimeType) === false) {\r\n            if (!config.disableLogs) {\r\n                console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\r\n            }\r\n        }\r\n\r\n        // Dispatching OnDataAvailable Handler\r\n        mediaRecorder.ondataavailable = function(e) {\r\n            if (e.data) {\r\n                allStates.push('ondataavailable: ' + bytesToSize(e.data.size));\r\n            }\r\n\r\n            if (typeof config.timeSlice === 'number') {\r\n                if (e.data && e.data.size) {\r\n                    arrayOfBlobs.push(e.data);\r\n                    updateTimeStamp();\r\n\r\n                    if (typeof config.ondataavailable === 'function') {\r\n                        // intervals based blobs\r\n                        var blob = config.getNativeBlob ? e.data : new Blob([e.data], {\r\n                            type: getMimeType(recorderHints)\r\n                        });\r\n                        config.ondataavailable(blob);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (!e.data || !e.data.size || e.data.size < 100 || self.blob) {\r\n                // make sure that stopRecording always getting fired\r\n                // even if there is invalid data\r\n                if (self.recordingCallback) {\r\n                    self.recordingCallback(new Blob([], {\r\n                        type: getMimeType(recorderHints)\r\n                    }));\r\n                    self.recordingCallback = null;\r\n                }\r\n                return;\r\n            }\r\n\r\n            self.blob = config.getNativeBlob ? e.data : new Blob([e.data], {\r\n                type: getMimeType(recorderHints)\r\n            });\r\n\r\n            if (self.recordingCallback) {\r\n                self.recordingCallback(self.blob);\r\n                self.recordingCallback = null;\r\n            }\r\n        };\r\n\r\n        mediaRecorder.onstart = function() {\r\n            allStates.push('started');\r\n        };\r\n\r\n        mediaRecorder.onpause = function() {\r\n            allStates.push('paused');\r\n        };\r\n\r\n        mediaRecorder.onresume = function() {\r\n            allStates.push('resumed');\r\n        };\r\n\r\n        mediaRecorder.onstop = function() {\r\n            allStates.push('stopped');\r\n        };\r\n\r\n        mediaRecorder.onerror = function(error) {\r\n            if (!error) {\r\n                return;\r\n            }\r\n\r\n            if (!error.name) {\r\n                error.name = 'UnknownError';\r\n            }\r\n\r\n            allStates.push('error: ' + error);\r\n\r\n            if (!config.disableLogs) {\r\n                // via: https://w3c.github.io/mediacapture-record/MediaRecorder.html#exception-summary\r\n                if (error.name.toString().toLowerCase().indexOf('invalidstate') !== -1) {\r\n                    console.error('The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.', error);\r\n                } else if (error.name.toString().toLowerCase().indexOf('notsupported') !== -1) {\r\n                    console.error('MIME type (', recorderHints.mimeType, ') is not supported.', error);\r\n                } else if (error.name.toString().toLowerCase().indexOf('security') !== -1) {\r\n                    console.error('MediaRecorder security error', error);\r\n                }\r\n\r\n                // older code below\r\n                else if (error.name === 'OutOfMemory') {\r\n                    console.error('The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'IllegalStreamModification') {\r\n                    console.error('A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'OtherRecordingError') {\r\n                    console.error('Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'GenericError') {\r\n                    console.error('The UA cannot provide the codec or recording option that has been requested.', error);\r\n                } else {\r\n                    console.error('MediaRecorder Error', error);\r\n                }\r\n            }\r\n\r\n            (function(looper) {\r\n                if (!self.manuallyStopped && mediaRecorder && mediaRecorder.state === 'inactive') {\r\n                    delete config.timeslice;\r\n\r\n                    // 10 minutes, enough?\r\n                    mediaRecorder.start(10 * 60 * 1000);\r\n                    return;\r\n                }\r\n\r\n                setTimeout(looper, 1000);\r\n            })();\r\n\r\n            if (mediaRecorder.state !== 'inactive' && mediaRecorder.state !== 'stopped') {\r\n                mediaRecorder.stop();\r\n            }\r\n        };\r\n\r\n        if (typeof config.timeSlice === 'number') {\r\n            updateTimeStamp();\r\n            mediaRecorder.start(config.timeSlice);\r\n        } else {\r\n            // default is 60 minutes; enough?\r\n            // use config => {timeSlice: 1000} otherwise\r\n\r\n            mediaRecorder.start(3.6e+6);\r\n        }\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback(); // old code\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @property {Array} timestamps - Array of time stamps\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * console.log(recorder.timestamps);\r\n     */\r\n    this.timestamps = [];\r\n\r\n    function updateTimeStamp() {\r\n        self.timestamps.push(new Date().getTime());\r\n\r\n        if (typeof config.onTimeStamp === 'function') {\r\n            config.onTimeStamp(self.timestamps[self.timestamps.length - 1], self.timestamps);\r\n        }\r\n    }\r\n\r\n    function getMimeType(secondObject) {\r\n        if (mediaRecorder && mediaRecorder.mimeType) {\r\n            return mediaRecorder.mimeType;\r\n        }\r\n\r\n        return secondObject.mimeType || 'video/webm';\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        self.manuallyStopped = true; // used inside the mediaRecorder.onerror\r\n\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        this.recordingCallback = callback;\r\n\r\n        if (mediaRecorder.state === 'recording') {\r\n            mediaRecorder.stop();\r\n        }\r\n\r\n        if (typeof config.timeSlice === 'number') {\r\n            setTimeout(function() {\r\n                self.blob = new Blob(arrayOfBlobs, {\r\n                    type: getMimeType(config)\r\n                });\r\n\r\n                self.recordingCallback(self.blob);\r\n            }, 100);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        if (mediaRecorder.state === 'recording') {\r\n            mediaRecorder.pause();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        if (mediaRecorder.state === 'paused') {\r\n            mediaRecorder.resume();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (mediaRecorder && mediaRecorder.state === 'recording') {\r\n            self.stop(clearRecordedDataCB);\r\n        }\r\n\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        arrayOfBlobs = [];\r\n        mediaRecorder = null;\r\n        self.timestamps = [];\r\n    }\r\n\r\n    // Reference to \"MediaRecorder\" object\r\n    var mediaRecorder;\r\n\r\n    /**\r\n     * Access to native MediaRecorder API\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @instance\r\n     * @example\r\n     * var internal = recorder.getInternalRecorder();\r\n     * internal.ondataavailable = function() {}; // override\r\n     * internal.stream, internal.onpause, internal.onstop, etc.\r\n     * @returns {Object} Returns internal recording object.\r\n     */\r\n    this.getInternalRecorder = function() {\r\n        return mediaRecorder;\r\n    };\r\n\r\n    function isMediaStreamActive() {\r\n        if ('active' in mediaStream) {\r\n            if (!mediaStream.active) {\r\n                return false;\r\n            }\r\n        } else if ('ended' in mediaStream) { // old hack\r\n            if (mediaStream.ended) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.stop(function() {\r\n     *     var blob = recorder.blob;\r\n     * });\r\n     */\r\n    this.blob = null;\r\n\r\n\r\n    /**\r\n     * Get MediaRecorder readonly state.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var state = recorder.getState();\r\n     * @returns {String} Returns recording state.\r\n     */\r\n    this.getState = function() {\r\n        if (!mediaRecorder) {\r\n            return 'inactive';\r\n        }\r\n\r\n        return mediaRecorder.state || 'inactive';\r\n    };\r\n\r\n    // list of all recording states\r\n    var allStates = [];\r\n\r\n    /**\r\n     * Get MediaRecorder all recording states.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var state = recorder.getAllStates();\r\n     * @returns {Array} Returns all recording states\r\n     */\r\n    this.getAllStates = function() {\r\n        return allStates;\r\n    };\r\n\r\n    // if any Track within the MediaStream is muted or not enabled at any time, \r\n    // the browser will only record black frames \r\n    // or silence since that is the content produced by the Track\r\n    // so we need to stopRecording as soon as any single track ends.\r\n    if (typeof config.checkForInactiveTracks === 'undefined') {\r\n        config.checkForInactiveTracks = false; // disable to minimize CPU usage\r\n    }\r\n\r\n    var self = this;\r\n\r\n    // this method checks if media stream is stopped\r\n    // or if any track is ended.\r\n    (function looper() {\r\n        if (!mediaRecorder || config.checkForInactiveTracks === false) {\r\n            return;\r\n        }\r\n\r\n        if (isMediaStreamActive() === false) {\r\n            if (!config.disableLogs) {\r\n                console.log('MediaStream seems stopped.');\r\n            }\r\n            self.stop();\r\n            return;\r\n        }\r\n\r\n        setTimeout(looper, 1000); // check every second\r\n    })();\r\n\r\n    // for debugging\r\n    this.name = 'MediaStreamRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MediaStreamRecorder = MediaStreamRecorder;\r\n}\r\n\r\n// source code from: http://typedarray.org/wp-content/projects/WebAudioRecorder/script.js\r\n// https://github.com/mattdiamond/Recorderjs#license-mit\r\n// ______________________\r\n// StereoAudioRecorder.js\r\n\r\n/**\r\n * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring \"stereo\" audio-recording in chrome.\r\n * @summary JavaScript standalone object for stereo audio recording.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef StereoAudioRecorder\r\n * @class\r\n * @example\r\n * var recorder = new StereoAudioRecorder(MediaStream, {\r\n *     sampleRate: 44100,\r\n *     bufferSize: 4096\r\n * });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}\r\n */\r\n\r\nfunction StereoAudioRecorder(mediaStream, config) {\r\n    if (!getTracks(mediaStream, 'audio').length) {\r\n        throw 'Your stream has no audio tracks.';\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    var self = this;\r\n\r\n    // variables\r\n    var leftchannel = [];\r\n    var rightchannel = [];\r\n    var recording = false;\r\n    var recordingLength = 0;\r\n    var jsAudioNode;\r\n\r\n    var numberOfAudioChannels = 2;\r\n\r\n    /**\r\n     * Set sample rates such as 8K or 16K. Reference: http://stackoverflow.com/a/28977136/552182\r\n     * @property {number} desiredSampRate - Desired Bits per sample * 1000\r\n     * @memberof StereoAudioRecorder\r\n     * @instance\r\n     * @example\r\n     * var recorder = StereoAudioRecorder(mediaStream, {\r\n     *   desiredSampRate: 16 * 1000 // bits-per-sample * 1000\r\n     * });\r\n     */\r\n    var desiredSampRate = config.desiredSampRate;\r\n\r\n    // backward compatibility\r\n    if (config.leftChannel === true) {\r\n        numberOfAudioChannels = 1;\r\n    }\r\n\r\n    if (config.numberOfAudioChannels === 1) {\r\n        numberOfAudioChannels = 1;\r\n    }\r\n\r\n    if (!numberOfAudioChannels || numberOfAudioChannels < 1) {\r\n        numberOfAudioChannels = 2;\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        console.log('StereoAudioRecorder is set to record number of channels: ' + numberOfAudioChannels);\r\n    }\r\n\r\n    // if any Track within the MediaStream is muted or not enabled at any time, \r\n    // the browser will only record black frames \r\n    // or silence since that is the content produced by the Track\r\n    // so we need to stopRecording as soon as any single track ends.\r\n    if (typeof config.checkForInactiveTracks === 'undefined') {\r\n        config.checkForInactiveTracks = true;\r\n    }\r\n\r\n    function isMediaStreamActive() {\r\n        if (config.checkForInactiveTracks === false) {\r\n            // always return \"true\"\r\n            return true;\r\n        }\r\n\r\n        if ('active' in mediaStream) {\r\n            if (!mediaStream.active) {\r\n                return false;\r\n            }\r\n        } else if ('ended' in mediaStream) { // old hack\r\n            if (mediaStream.ended) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (isMediaStreamActive() === false) {\r\n            throw 'Please make sure MediaStream is active.';\r\n        }\r\n\r\n        resetVariables();\r\n\r\n        isAudioProcessStarted = isPaused = false;\r\n        recording = true;\r\n\r\n        if (typeof config.timeSlice !== 'undefined') {\r\n            looper();\r\n        }\r\n    };\r\n\r\n    function mergeLeftRightBuffers(config, callback) {\r\n        function mergeAudioBuffers(config, cb) {\r\n            var numberOfAudioChannels = config.numberOfAudioChannels;\r\n\r\n            // todo: \"slice(0)\" --- is it causes loop? Should be removed?\r\n            var leftBuffers = config.leftBuffers.slice(0);\r\n            var rightBuffers = config.rightBuffers.slice(0);\r\n            var sampleRate = config.sampleRate;\r\n            var internalInterleavedLength = config.internalInterleavedLength;\r\n            var desiredSampRate = config.desiredSampRate;\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\r\n                rightBuffers = mergeBuffers(rightBuffers, internalInterleavedLength);\r\n\r\n                if (desiredSampRate) {\r\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\r\n                    rightBuffers = interpolateArray(rightBuffers, desiredSampRate, sampleRate);\r\n                }\r\n            }\r\n\r\n            if (numberOfAudioChannels === 1) {\r\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\r\n\r\n                if (desiredSampRate) {\r\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\r\n                }\r\n            }\r\n\r\n            // set sample rate as desired sample rate\r\n            if (desiredSampRate) {\r\n                sampleRate = desiredSampRate;\r\n            }\r\n\r\n            // for changing the sampling rate, reference:\r\n            // http://stackoverflow.com/a/28977136/552182\r\n            function interpolateArray(data, newSampleRate, oldSampleRate) {\r\n                var fitCount = Math.round(data.length * (newSampleRate / oldSampleRate));\r\n                var newData = [];\r\n                var springFactor = Number((data.length - 1) / (fitCount - 1));\r\n                newData[0] = data[0];\r\n                for (var i = 1; i < fitCount - 1; i++) {\r\n                    var tmp = i * springFactor;\r\n                    var before = Number(Math.floor(tmp)).toFixed();\r\n                    var after = Number(Math.ceil(tmp)).toFixed();\r\n                    var atPoint = tmp - before;\r\n                    newData[i] = linearInterpolate(data[before], data[after], atPoint);\r\n                }\r\n                newData[fitCount - 1] = data[data.length - 1];\r\n                return newData;\r\n            }\r\n\r\n            function linearInterpolate(before, after, atPoint) {\r\n                return before + (after - before) * atPoint;\r\n            }\r\n\r\n            function mergeBuffers(channelBuffer, rLength) {\r\n                var result = new Float64Array(rLength);\r\n                var offset = 0;\r\n                var lng = channelBuffer.length;\r\n\r\n                for (var i = 0; i < lng; i++) {\r\n                    var buffer = channelBuffer[i];\r\n                    result.set(buffer, offset);\r\n                    offset += buffer.length;\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            function interleave(leftChannel, rightChannel) {\r\n                var length = leftChannel.length + rightChannel.length;\r\n\r\n                var result = new Float64Array(length);\r\n\r\n                var inputIndex = 0;\r\n\r\n                for (var index = 0; index < length;) {\r\n                    result[index++] = leftChannel[inputIndex];\r\n                    result[index++] = rightChannel[inputIndex];\r\n                    inputIndex++;\r\n                }\r\n                return result;\r\n            }\r\n\r\n            function writeUTFBytes(view, offset, string) {\r\n                var lng = string.length;\r\n                for (var i = 0; i < lng; i++) {\r\n                    view.setUint8(offset + i, string.charCodeAt(i));\r\n                }\r\n            }\r\n\r\n            // interleave both channels together\r\n            var interleaved;\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                interleaved = interleave(leftBuffers, rightBuffers);\r\n            }\r\n\r\n            if (numberOfAudioChannels === 1) {\r\n                interleaved = leftBuffers;\r\n            }\r\n\r\n            var interleavedLength = interleaved.length;\r\n\r\n            // create wav file\r\n            var resultingBufferLength = 44 + interleavedLength * 2;\r\n\r\n            var buffer = new ArrayBuffer(resultingBufferLength);\r\n\r\n            var view = new DataView(buffer);\r\n\r\n            // RIFF chunk descriptor/identifier \r\n            writeUTFBytes(view, 0, 'RIFF');\r\n\r\n            // RIFF chunk length\r\n            // changed \"44\" to \"36\" via #401\r\n            view.setUint32(4, 36 + interleavedLength * 2, true);\r\n\r\n            // RIFF type \r\n            writeUTFBytes(view, 8, 'WAVE');\r\n\r\n            // format chunk identifier \r\n            // FMT sub-chunk\r\n            writeUTFBytes(view, 12, 'fmt ');\r\n\r\n            // format chunk length \r\n            view.setUint32(16, 16, true);\r\n\r\n            // sample format (raw)\r\n            view.setUint16(20, 1, true);\r\n\r\n            // stereo (2 channels)\r\n            view.setUint16(22, numberOfAudioChannels, true);\r\n\r\n            // sample rate \r\n            view.setUint32(24, sampleRate, true);\r\n\r\n            // byte rate (sample rate * block align)\r\n            view.setUint32(28, sampleRate * numberOfAudioChannels * 2, true);\r\n\r\n            // block align (channel count * bytes per sample) \r\n            view.setUint16(32, numberOfAudioChannels * 2, true);\r\n\r\n            // bits per sample \r\n            view.setUint16(34, 16, true);\r\n\r\n            // data sub-chunk\r\n            // data chunk identifier \r\n            writeUTFBytes(view, 36, 'data');\r\n\r\n            // data chunk length \r\n            view.setUint32(40, interleavedLength * 2, true);\r\n\r\n            // write the PCM samples\r\n            var lng = interleavedLength;\r\n            var index = 44;\r\n            var volume = 1;\r\n            for (var i = 0; i < lng; i++) {\r\n                view.setInt16(index, interleaved[i] * (0x7FFF * volume), true);\r\n                index += 2;\r\n            }\r\n\r\n            if (cb) {\r\n                return cb({\r\n                    buffer: buffer,\r\n                    view: view\r\n                });\r\n            }\r\n\r\n            postMessage({\r\n                buffer: buffer,\r\n                view: view\r\n            });\r\n        }\r\n\r\n        if (config.noWorker) {\r\n            mergeAudioBuffers(config, function(data) {\r\n                callback(data.buffer, data.view);\r\n            });\r\n            return;\r\n        }\r\n\r\n\r\n        var webWorker = processInWebWorker(mergeAudioBuffers);\r\n\r\n        webWorker.onmessage = function(event) {\r\n            callback(event.data.buffer, event.data.view);\r\n\r\n            // release memory\r\n            URL.revokeObjectURL(webWorker.workerURL);\r\n\r\n            // kill webworker (or Chrome will kill your page after ~25 calls)\r\n            webWorker.terminate();\r\n        };\r\n\r\n        webWorker.postMessage(config);\r\n    }\r\n\r\n    function processInWebWorker(_function) {\r\n        var workerURL = URL.createObjectURL(new Blob([_function.toString(),\r\n            ';this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n        ], {\r\n            type: 'application/javascript'\r\n        }));\r\n\r\n        var worker = new Worker(workerURL);\r\n        worker.workerURL = workerURL;\r\n        return worker;\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        // stop recording\r\n        recording = false;\r\n\r\n        mergeLeftRightBuffers({\r\n            desiredSampRate: desiredSampRate,\r\n            sampleRate: sampleRate,\r\n            numberOfAudioChannels: numberOfAudioChannels,\r\n            internalInterleavedLength: recordingLength,\r\n            leftBuffers: leftchannel,\r\n            rightBuffers: numberOfAudioChannels === 1 ? [] : rightchannel,\r\n            noWorker: config.noWorker\r\n        }, function(buffer, view) {\r\n            /**\r\n             * @property {Blob} blob - The recorded blob object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var blob = recorder.blob;\r\n             * });\r\n             */\r\n            self.blob = new Blob([view], {\r\n                type: 'audio/wav'\r\n            });\r\n\r\n            /**\r\n             * @property {ArrayBuffer} buffer - The recorded buffer object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var buffer = recorder.buffer;\r\n             * });\r\n             */\r\n            self.buffer = new ArrayBuffer(view.buffer.byteLength);\r\n\r\n            /**\r\n             * @property {DataView} view - The recorded data-view object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var view = recorder.view;\r\n             * });\r\n             */\r\n            self.view = view;\r\n\r\n            self.sampleRate = desiredSampRate || sampleRate;\r\n            self.bufferSize = bufferSize;\r\n\r\n            // recorded audio length\r\n            self.length = recordingLength;\r\n\r\n            isAudioProcessStarted = false;\r\n\r\n            if (callback) {\r\n                callback(self.blob);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (typeof RecordRTC.Storage === 'undefined') {\r\n        RecordRTC.Storage = {\r\n            AudioContextConstructor: null,\r\n            AudioContext: window.AudioContext || window.webkitAudioContext\r\n        };\r\n    }\r\n\r\n    if (!RecordRTC.Storage.AudioContextConstructor || RecordRTC.Storage.AudioContextConstructor.state === 'closed') {\r\n        RecordRTC.Storage.AudioContextConstructor = new RecordRTC.Storage.AudioContext();\r\n    }\r\n\r\n    var context = RecordRTC.Storage.AudioContextConstructor;\r\n\r\n    // creates an audio node from the microphone incoming stream\r\n    var audioInput = context.createMediaStreamSource(mediaStream);\r\n\r\n    var legalBufferValues = [0, 256, 512, 1024, 2048, 4096, 8192, 16384];\r\n\r\n    /**\r\n     * From the spec: This value controls how frequently the audioprocess event is\r\n     * dispatched and how many sample-frames need to be processed each call.\r\n     * Lower values for buffer size will result in a lower (better) latency.\r\n     * Higher values will be necessary to avoid audio breakup and glitches\r\n     * The size of the buffer (in sample-frames) which needs to\r\n     * be processed each time onprocessaudio is called.\r\n     * Legal values are (256, 512, 1024, 2048, 4096, 8192, 16384).\r\n     * @property {number} bufferSize - Buffer-size for how frequently the audioprocess event is dispatched.\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder = new StereoAudioRecorder(mediaStream, {\r\n     *     bufferSize: 4096\r\n     * });\r\n     */\r\n\r\n    // \"0\" means, let chrome decide the most accurate buffer-size for current platform.\r\n    var bufferSize = typeof config.bufferSize === 'undefined' ? 4096 : config.bufferSize;\r\n\r\n    if (legalBufferValues.indexOf(bufferSize) === -1) {\r\n        if (!config.disableLogs) {\r\n            console.log('Legal values for buffer-size are ' + JSON.stringify(legalBufferValues, null, '\\t'));\r\n        }\r\n    }\r\n\r\n    if (context.createJavaScriptNode) {\r\n        jsAudioNode = context.createJavaScriptNode(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\r\n    } else if (context.createScriptProcessor) {\r\n        jsAudioNode = context.createScriptProcessor(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\r\n    } else {\r\n        throw 'WebAudio API has no support on this browser.';\r\n    }\r\n\r\n    // connect the stream to the script processor\r\n    audioInput.connect(jsAudioNode);\r\n\r\n    if (!config.bufferSize) {\r\n        bufferSize = jsAudioNode.bufferSize; // device buffer-size\r\n    }\r\n\r\n    /**\r\n     * The sample rate (in sample-frames per second) at which the\r\n     * AudioContext handles audio. It is assumed that all AudioNodes\r\n     * in the context run at this rate. In making this assumption,\r\n     * sample-rate converters or \"varispeed\" processors are not supported\r\n     * in real-time processing.\r\n     * The sampleRate parameter describes the sample-rate of the\r\n     * linear PCM audio data in the buffer in sample-frames per second.\r\n     * An implementation must support sample-rates in at least\r\n     * the range 22050 to 96000.\r\n     * @property {number} sampleRate - Buffer-size for how frequently the audioprocess event is dispatched.\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder = new StereoAudioRecorder(mediaStream, {\r\n     *     sampleRate: 44100\r\n     * });\r\n     */\r\n    var sampleRate = typeof config.sampleRate !== 'undefined' ? config.sampleRate : context.sampleRate || 44100;\r\n\r\n    if (sampleRate < 22050 || sampleRate > 96000) {\r\n        // Ref: http://stackoverflow.com/a/26303918/552182\r\n        if (!config.disableLogs) {\r\n            console.log('sample-rate must be under range 22050 and 96000.');\r\n        }\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        if (config.desiredSampRate) {\r\n            console.log('Desired sample-rate: ' + config.desiredSampRate);\r\n        }\r\n    }\r\n\r\n    var isPaused = false;\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPaused = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (isMediaStreamActive() === false) {\r\n            throw 'Please make sure MediaStream is active.';\r\n        }\r\n\r\n        if (!recording) {\r\n            if (!config.disableLogs) {\r\n                console.log('Seems recording has been restarted.');\r\n            }\r\n            this.record();\r\n            return;\r\n        }\r\n\r\n        isPaused = false;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        config.checkForInactiveTracks = false;\r\n\r\n        if (recording) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function resetVariables() {\r\n        leftchannel = [];\r\n        rightchannel = [];\r\n        recordingLength = 0;\r\n        isAudioProcessStarted = false;\r\n        recording = false;\r\n        isPaused = false;\r\n        context = null;\r\n\r\n        self.leftchannel = leftchannel;\r\n        self.rightchannel = rightchannel;\r\n        self.numberOfAudioChannels = numberOfAudioChannels;\r\n        self.desiredSampRate = desiredSampRate;\r\n        self.sampleRate = sampleRate;\r\n        self.recordingLength = recordingLength;\r\n\r\n        intervalsBasedBuffers = {\r\n            left: [],\r\n            right: [],\r\n            recordingLength: 0\r\n        };\r\n    }\r\n\r\n    function clearRecordedDataCB() {\r\n        if (jsAudioNode) {\r\n            jsAudioNode.onaudioprocess = null;\r\n            jsAudioNode.disconnect();\r\n            jsAudioNode = null;\r\n        }\r\n\r\n        if (audioInput) {\r\n            audioInput.disconnect();\r\n            audioInput = null;\r\n        }\r\n\r\n        resetVariables();\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'StereoAudioRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var isAudioProcessStarted = false;\r\n\r\n    function onAudioProcessDataAvailable(e) {\r\n        if (isPaused) {\r\n            return;\r\n        }\r\n\r\n        if (isMediaStreamActive() === false) {\r\n            if (!config.disableLogs) {\r\n                console.log('MediaStream seems stopped.');\r\n            }\r\n            jsAudioNode.disconnect();\r\n            recording = false;\r\n        }\r\n\r\n        if (!recording) {\r\n            if (audioInput) {\r\n                audioInput.disconnect();\r\n                audioInput = null;\r\n            }\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * This method is called on \"onaudioprocess\" event's first invocation.\r\n         * @method {function} onAudioProcessStarted\r\n         * @memberof StereoAudioRecorder\r\n         * @example\r\n         * recorder.onAudioProcessStarted: function() { };\r\n         */\r\n        if (!isAudioProcessStarted) {\r\n            isAudioProcessStarted = true;\r\n            if (config.onAudioProcessStarted) {\r\n                config.onAudioProcessStarted();\r\n            }\r\n\r\n            if (config.initCallback) {\r\n                config.initCallback();\r\n            }\r\n        }\r\n\r\n        var left = e.inputBuffer.getChannelData(0);\r\n\r\n        // we clone the samples\r\n        var chLeft = new Float32Array(left);\r\n        leftchannel.push(chLeft);\r\n\r\n        if (numberOfAudioChannels === 2) {\r\n            var right = e.inputBuffer.getChannelData(1);\r\n            var chRight = new Float32Array(right);\r\n            rightchannel.push(chRight);\r\n        }\r\n\r\n        recordingLength += bufferSize;\r\n\r\n        // export raw PCM\r\n        self.recordingLength = recordingLength;\r\n\r\n        if (typeof config.timeSlice !== 'undefined') {\r\n            intervalsBasedBuffers.recordingLength += bufferSize;\r\n            intervalsBasedBuffers.left.push(chLeft);\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                intervalsBasedBuffers.right.push(chRight);\r\n            }\r\n        }\r\n    }\r\n\r\n    jsAudioNode.onaudioprocess = onAudioProcessDataAvailable;\r\n\r\n    // to prevent self audio to be connected with speakers\r\n    if (context.createMediaStreamDestination) {\r\n        jsAudioNode.connect(context.createMediaStreamDestination());\r\n    } else {\r\n        jsAudioNode.connect(context.destination);\r\n    }\r\n\r\n    // export raw PCM\r\n    this.leftchannel = leftchannel;\r\n    this.rightchannel = rightchannel;\r\n    this.numberOfAudioChannels = numberOfAudioChannels;\r\n    this.desiredSampRate = desiredSampRate;\r\n    this.sampleRate = sampleRate;\r\n    self.recordingLength = recordingLength;\r\n\r\n    // helper for intervals based blobs\r\n    var intervalsBasedBuffers = {\r\n        left: [],\r\n        right: [],\r\n        recordingLength: 0\r\n    };\r\n\r\n    // this looper is used to support intervals based blobs (via timeSlice+ondataavailable)\r\n    function looper() {\r\n        if (!recording || typeof config.ondataavailable !== 'function' || typeof config.timeSlice === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (intervalsBasedBuffers.left.length) {\r\n            mergeLeftRightBuffers({\r\n                desiredSampRate: desiredSampRate,\r\n                sampleRate: sampleRate,\r\n                numberOfAudioChannels: numberOfAudioChannels,\r\n                internalInterleavedLength: intervalsBasedBuffers.recordingLength,\r\n                leftBuffers: intervalsBasedBuffers.left,\r\n                rightBuffers: numberOfAudioChannels === 1 ? [] : intervalsBasedBuffers.right\r\n            }, function(buffer, view) {\r\n                var blob = new Blob([view], {\r\n                    type: 'audio/wav'\r\n                });\r\n                config.ondataavailable(blob);\r\n\r\n                setTimeout(looper, config.timeSlice);\r\n            });\r\n\r\n            intervalsBasedBuffers = {\r\n                left: [],\r\n                right: [],\r\n                recordingLength: 0\r\n            };\r\n        } else {\r\n            setTimeout(looper, config.timeSlice);\r\n        }\r\n    }\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.StereoAudioRecorder = StereoAudioRecorder;\r\n}\r\n\r\n// _________________\r\n// CanvasRecorder.js\r\n\r\n/**\r\n * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.\r\n * @summary HTML2Canvas recording into video WebM.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef CanvasRecorder\r\n * @class\r\n * @example\r\n * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true, useWhammyRecorder: true });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.\r\n * @param {object} config - {disableLogs:true, initCallback: function}\r\n */\r\n\r\nfunction CanvasRecorder(htmlElement, config) {\r\n    if (typeof html2canvas === 'undefined') {\r\n        throw 'Please link: https://www.webrtc-experiment.com/screenshot.js';\r\n    }\r\n\r\n    config = config || {};\r\n    if (!config.frameInterval) {\r\n        config.frameInterval = 10;\r\n    }\r\n\r\n    // via DetectRTC.js\r\n    var isCanvasSupportsStreamCapturing = false;\r\n    ['captureStream', 'mozCaptureStream', 'webkitCaptureStream'].forEach(function(item) {\r\n        if (item in document.createElement('canvas')) {\r\n            isCanvasSupportsStreamCapturing = true;\r\n        }\r\n    });\r\n\r\n    var _isChrome = (!!window.webkitRTCPeerConnection || !!window.webkitGetUserMedia) && !!window.chrome;\r\n\r\n    var chromeVersion = 50;\r\n    var matchArray = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\r\n    if (_isChrome && matchArray && matchArray[2]) {\r\n        chromeVersion = parseInt(matchArray[2], 10);\r\n    }\r\n\r\n    if (_isChrome && chromeVersion < 52) {\r\n        isCanvasSupportsStreamCapturing = false;\r\n    }\r\n\r\n    if (config.useWhammyRecorder) {\r\n        isCanvasSupportsStreamCapturing = false;\r\n    }\r\n\r\n    var globalCanvas, mediaStreamRecorder;\r\n\r\n    if (isCanvasSupportsStreamCapturing) {\r\n        if (!config.disableLogs) {\r\n            console.log('Your browser supports both MediRecorder API and canvas.captureStream!');\r\n        }\r\n\r\n        if (htmlElement instanceof HTMLCanvasElement) {\r\n            globalCanvas = htmlElement;\r\n        } else if (htmlElement instanceof CanvasRenderingContext2D) {\r\n            globalCanvas = htmlElement.canvas;\r\n        } else {\r\n            throw 'Please pass either HTMLCanvasElement or CanvasRenderingContext2D.';\r\n        }\r\n    } else if (!!navigator.mozGetUserMedia) {\r\n        if (!config.disableLogs) {\r\n            console.error('Canvas recording is NOT supported in Firefox.');\r\n        }\r\n    }\r\n\r\n    var isRecording;\r\n\r\n    /**\r\n     * This method records Canvas.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        isRecording = true;\r\n\r\n        if (isCanvasSupportsStreamCapturing && !config.useWhammyRecorder) {\r\n            // CanvasCaptureMediaStream\r\n            var canvasMediaStream;\r\n            if ('captureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.captureStream(25); // 25 FPS\r\n            } else if ('mozCaptureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.mozCaptureStream(25);\r\n            } else if ('webkitCaptureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.webkitCaptureStream(25);\r\n            }\r\n\r\n            try {\r\n                var mdStream = new MediaStream();\r\n                mdStream.addTrack(getTracks(canvasMediaStream, 'video')[0]);\r\n                canvasMediaStream = mdStream;\r\n            } catch (e) {}\r\n\r\n            if (!canvasMediaStream) {\r\n                throw 'captureStream API are NOT available.';\r\n            }\r\n\r\n            // Note: Jan 18, 2016 status is that, \r\n            // Firefox MediaRecorder API can't record CanvasCaptureMediaStream object.\r\n            mediaStreamRecorder = new MediaStreamRecorder(canvasMediaStream, {\r\n                mimeType: config.mimeType || 'video/webm'\r\n            });\r\n            mediaStreamRecorder.record();\r\n        } else {\r\n            whammy.frames = [];\r\n            lastTime = new Date().getTime();\r\n            drawCanvasFrame();\r\n        }\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    this.getWebPImages = function(callback) {\r\n        if (htmlElement.nodeName.toLowerCase() !== 'canvas') {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        var framesLength = whammy.frames.length;\r\n        whammy.frames.forEach(function(frame, idx) {\r\n            var framesRemaining = framesLength - idx;\r\n            if (!config.disableLogs) {\r\n                console.log(framesRemaining + '/' + framesLength + ' frames remaining');\r\n            }\r\n\r\n            if (config.onEncodingCallback) {\r\n                config.onEncodingCallback(framesRemaining, framesLength);\r\n            }\r\n\r\n            var webp = frame.image.toDataURL('image/webp', 1);\r\n            whammy.frames[idx].image = webp;\r\n        });\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Generating WebM');\r\n        }\r\n\r\n        callback();\r\n    };\r\n\r\n    /**\r\n     * This method stops recording Canvas.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        isRecording = false;\r\n\r\n        var that = this;\r\n\r\n        if (isCanvasSupportsStreamCapturing && mediaStreamRecorder) {\r\n            mediaStreamRecorder.stop(callback);\r\n            return;\r\n        }\r\n\r\n        this.getWebPImages(function() {\r\n            /**\r\n             * @property {Blob} blob - Recorded frames in video/webm blob.\r\n             * @memberof CanvasRecorder\r\n             * @example\r\n             * recorder.stop(function() {\r\n             *     var blob = recorder.blob;\r\n             * });\r\n             */\r\n            whammy.compile(function(blob) {\r\n                if (!config.disableLogs) {\r\n                    console.log('Recording finished!');\r\n                }\r\n\r\n                that.blob = blob;\r\n\r\n                if (that.blob.forEach) {\r\n                    that.blob = new Blob([], {\r\n                        type: 'video/webm'\r\n                    });\r\n                }\r\n\r\n                if (callback) {\r\n                    callback(that.blob);\r\n                }\r\n\r\n                whammy.frames = [];\r\n            });\r\n        });\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n\r\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\r\n            mediaStreamRecorder.pause();\r\n            return;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n\r\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\r\n            mediaStreamRecorder.resume();\r\n            return;\r\n        }\r\n\r\n        if (!isRecording) {\r\n            this.record();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (isRecording) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        whammy.frames = [];\r\n        isRecording = false;\r\n        isPausedRecording = false;\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'CanvasRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    function cloneCanvas() {\r\n        //create a new canvas\r\n        var newCanvas = document.createElement('canvas');\r\n        var context = newCanvas.getContext('2d');\r\n\r\n        //set dimensions\r\n        newCanvas.width = htmlElement.width;\r\n        newCanvas.height = htmlElement.height;\r\n\r\n        //apply the old canvas to the new one\r\n        context.drawImage(htmlElement, 0, 0);\r\n\r\n        //return the new canvas\r\n        return newCanvas;\r\n    }\r\n\r\n    function drawCanvasFrame() {\r\n        if (isPausedRecording) {\r\n            lastTime = new Date().getTime();\r\n            return setTimeout(drawCanvasFrame, 500);\r\n        }\r\n\r\n        if (htmlElement.nodeName.toLowerCase() === 'canvas') {\r\n            var duration = new Date().getTime() - lastTime;\r\n            // via #206, by Jack i.e. @Seymourr\r\n            lastTime = new Date().getTime();\r\n\r\n            whammy.frames.push({\r\n                image: cloneCanvas(),\r\n                duration: duration\r\n            });\r\n\r\n            if (isRecording) {\r\n                setTimeout(drawCanvasFrame, config.frameInterval);\r\n            }\r\n            return;\r\n        }\r\n\r\n        html2canvas(htmlElement, {\r\n            grabMouse: typeof config.showMousePointer === 'undefined' || config.showMousePointer,\r\n            onrendered: function(canvas) {\r\n                var duration = new Date().getTime() - lastTime;\r\n                if (!duration) {\r\n                    return setTimeout(drawCanvasFrame, config.frameInterval);\r\n                }\r\n\r\n                // via #206, by Jack i.e. @Seymourr\r\n                lastTime = new Date().getTime();\r\n\r\n                whammy.frames.push({\r\n                    image: canvas.toDataURL('image/webp', 1),\r\n                    duration: duration\r\n                });\r\n\r\n                if (isRecording) {\r\n                    setTimeout(drawCanvasFrame, config.frameInterval);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    var lastTime = new Date().getTime();\r\n\r\n    var whammy = new Whammy.Video(100);\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.CanvasRecorder = CanvasRecorder;\r\n}\n\r\n// _________________\r\n// WhammyRecorder.js\r\n\r\n/**\r\n * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.\r\n * @summary Video recording feature in Chrome.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef WhammyRecorder\r\n * @class\r\n * @example\r\n * var recorder = new WhammyRecorder(mediaStream);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction WhammyRecorder(mediaStream, config) {\r\n\r\n    config = config || {};\r\n\r\n    if (!config.frameInterval) {\r\n        config.frameInterval = 10;\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        console.log('Using frames-interval:', config.frameInterval);\r\n    }\r\n\r\n    /**\r\n     * This method records video.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (!config.width) {\r\n            config.width = 320;\r\n        }\r\n\r\n        if (!config.height) {\r\n            config.height = 240;\r\n        }\r\n\r\n        if (!config.video) {\r\n            config.video = {\r\n                width: config.width,\r\n                height: config.height\r\n            };\r\n        }\r\n\r\n        if (!config.canvas) {\r\n            config.canvas = {\r\n                width: config.width,\r\n                height: config.height\r\n            };\r\n        }\r\n\r\n        canvas.width = config.canvas.width || 320;\r\n        canvas.height = config.canvas.height || 240;\r\n\r\n        context = canvas.getContext('2d');\r\n\r\n        // setting defaults\r\n        if (config.video && config.video instanceof HTMLVideoElement) {\r\n            video = config.video.cloneNode();\r\n\r\n            if (config.initCallback) {\r\n                config.initCallback();\r\n            }\r\n        } else {\r\n            video = document.createElement('video');\r\n\r\n            setSrcObject(mediaStream, video);\r\n\r\n            video.onloadedmetadata = function() { // \"onloadedmetadata\" may NOT work in FF?\r\n                if (config.initCallback) {\r\n                    config.initCallback();\r\n                }\r\n            };\r\n\r\n            video.width = config.video.width;\r\n            video.height = config.video.height;\r\n        }\r\n\r\n        video.muted = true;\r\n        video.play();\r\n\r\n        lastTime = new Date().getTime();\r\n        whammy = new Whammy.Video();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('canvas resolutions', canvas.width, '*', canvas.height);\r\n            console.log('video width/height', video.width || canvas.width, '*', video.height || canvas.height);\r\n        }\r\n\r\n        drawFrames(config.frameInterval);\r\n    };\r\n\r\n    /**\r\n     * Draw and push frames to Whammy\r\n     * @param {integer} frameInterval - set minimum interval (in milliseconds) between each time we push a frame to Whammy\r\n     */\r\n    function drawFrames(frameInterval) {\r\n        frameInterval = typeof frameInterval !== 'undefined' ? frameInterval : 10;\r\n\r\n        var duration = new Date().getTime() - lastTime;\r\n        if (!duration) {\r\n            return setTimeout(drawFrames, frameInterval, frameInterval);\r\n        }\r\n\r\n        if (isPausedRecording) {\r\n            lastTime = new Date().getTime();\r\n            return setTimeout(drawFrames, 100);\r\n        }\r\n\r\n        // via #206, by Jack i.e. @Seymourr\r\n        lastTime = new Date().getTime();\r\n\r\n        if (video.paused) {\r\n            // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\r\n            // Tweak for Android Chrome\r\n            video.play();\r\n        }\r\n\r\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        whammy.frames.push({\r\n            duration: duration,\r\n            image: canvas.toDataURL('image/webp')\r\n        });\r\n\r\n        if (!isStopDrawing) {\r\n            setTimeout(drawFrames, frameInterval, frameInterval);\r\n        }\r\n    }\r\n\r\n    function asyncLoop(o) {\r\n        var i = -1,\r\n            length = o.length;\r\n\r\n        (function loop() {\r\n            i++;\r\n            if (i === length) {\r\n                o.callback();\r\n                return;\r\n            }\r\n\r\n            // \"setTimeout\" added by Jim McLeod\r\n            setTimeout(function() {\r\n                o.functionToLoop(loop, i);\r\n            }, 1);\r\n        })();\r\n    }\r\n\r\n\r\n    /**\r\n     * remove black frames from the beginning to the specified frame\r\n     * @param {Array} _frames - array of frames to be checked\r\n     * @param {number} _framesToCheck - number of frame until check will be executed (-1 - will drop all frames until frame not matched will be found)\r\n     * @param {number} _pixTolerance - 0 - very strict (only black pixel color) ; 1 - all\r\n     * @param {number} _frameTolerance - 0 - very strict (only black frame color) ; 1 - all\r\n     * @returns {Array} - array of frames\r\n     */\r\n    // pull#293 by @volodalexey\r\n    function dropBlackFrames(_frames, _framesToCheck, _pixTolerance, _frameTolerance, callback) {\r\n        var localCanvas = document.createElement('canvas');\r\n        localCanvas.width = canvas.width;\r\n        localCanvas.height = canvas.height;\r\n        var context2d = localCanvas.getContext('2d');\r\n        var resultFrames = [];\r\n\r\n        var checkUntilNotBlack = _framesToCheck === -1;\r\n        var endCheckFrame = (_framesToCheck && _framesToCheck > 0 && _framesToCheck <= _frames.length) ?\r\n            _framesToCheck : _frames.length;\r\n        var sampleColor = {\r\n            r: 0,\r\n            g: 0,\r\n            b: 0\r\n        };\r\n        var maxColorDifference = Math.sqrt(\r\n            Math.pow(255, 2) +\r\n            Math.pow(255, 2) +\r\n            Math.pow(255, 2)\r\n        );\r\n        var pixTolerance = _pixTolerance && _pixTolerance >= 0 && _pixTolerance <= 1 ? _pixTolerance : 0;\r\n        var frameTolerance = _frameTolerance && _frameTolerance >= 0 && _frameTolerance <= 1 ? _frameTolerance : 0;\r\n        var doNotCheckNext = false;\r\n\r\n        asyncLoop({\r\n            length: endCheckFrame,\r\n            functionToLoop: function(loop, f) {\r\n                var matchPixCount, endPixCheck, maxPixCount;\r\n\r\n                var finishImage = function() {\r\n                    if (!doNotCheckNext && maxPixCount - matchPixCount <= maxPixCount * frameTolerance) {\r\n                        // console.log('removed black frame : ' + f + ' ; frame duration ' + _frames[f].duration);\r\n                    } else {\r\n                        // console.log('frame is passed : ' + f);\r\n                        if (checkUntilNotBlack) {\r\n                            doNotCheckNext = true;\r\n                        }\r\n                        resultFrames.push(_frames[f]);\r\n                    }\r\n                    loop();\r\n                };\r\n\r\n                if (!doNotCheckNext) {\r\n                    var image = new Image();\r\n                    image.onload = function() {\r\n                        context2d.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n                        var imageData = context2d.getImageData(0, 0, canvas.width, canvas.height);\r\n                        matchPixCount = 0;\r\n                        endPixCheck = imageData.data.length;\r\n                        maxPixCount = imageData.data.length / 4;\r\n\r\n                        for (var pix = 0; pix < endPixCheck; pix += 4) {\r\n                            var currentColor = {\r\n                                r: imageData.data[pix],\r\n                                g: imageData.data[pix + 1],\r\n                                b: imageData.data[pix + 2]\r\n                            };\r\n                            var colorDifference = Math.sqrt(\r\n                                Math.pow(currentColor.r - sampleColor.r, 2) +\r\n                                Math.pow(currentColor.g - sampleColor.g, 2) +\r\n                                Math.pow(currentColor.b - sampleColor.b, 2)\r\n                            );\r\n                            // difference in color it is difference in color vectors (r1,g1,b1) <=> (r2,g2,b2)\r\n                            if (colorDifference <= maxColorDifference * pixTolerance) {\r\n                                matchPixCount++;\r\n                            }\r\n                        }\r\n                        finishImage();\r\n                    };\r\n                    image.src = _frames[f].image;\r\n                } else {\r\n                    finishImage();\r\n                }\r\n            },\r\n            callback: function() {\r\n                resultFrames = resultFrames.concat(_frames.slice(endCheckFrame));\r\n\r\n                if (resultFrames.length <= 0) {\r\n                    // at least one last frame should be available for next manipulation\r\n                    // if total duration of all frames will be < 1000 than ffmpeg doesn't work well...\r\n                    resultFrames.push(_frames[_frames.length - 1]);\r\n                }\r\n                callback(resultFrames);\r\n            }\r\n        });\r\n    }\r\n\r\n    var isStopDrawing = false;\r\n\r\n    /**\r\n     * This method stops recording video.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        isStopDrawing = true;\r\n\r\n        var _this = this;\r\n        // analyse of all frames takes some time!\r\n        setTimeout(function() {\r\n            // e.g. dropBlackFrames(frames, 10, 1, 1) - will cut all 10 frames\r\n            // e.g. dropBlackFrames(frames, 10, 0.5, 0.5) - will analyse 10 frames\r\n            // e.g. dropBlackFrames(frames, 10) === dropBlackFrames(frames, 10, 0, 0) - will analyse 10 frames with strict black color\r\n            dropBlackFrames(whammy.frames, -1, null, null, function(frames) {\r\n                whammy.frames = frames;\r\n\r\n                // to display advertisement images!\r\n                if (config.advertisement && config.advertisement.length) {\r\n                    whammy.frames = config.advertisement.concat(whammy.frames);\r\n                }\r\n\r\n                /**\r\n                 * @property {Blob} blob - Recorded frames in video/webm blob.\r\n                 * @memberof WhammyRecorder\r\n                 * @example\r\n                 * recorder.stop(function() {\r\n                 *     var blob = recorder.blob;\r\n                 * });\r\n                 */\r\n                whammy.compile(function(blob) {\r\n                    _this.blob = blob;\r\n\r\n                    if (_this.blob.forEach) {\r\n                        _this.blob = new Blob([], {\r\n                            type: 'video/webm'\r\n                        });\r\n                    }\r\n\r\n                    if (callback) {\r\n                        callback(_this.blob);\r\n                    }\r\n                });\r\n            });\r\n        }, 10);\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n\r\n        if (isStopDrawing) {\r\n            this.record();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (!isStopDrawing) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        whammy.frames = [];\r\n        isStopDrawing = true;\r\n        isPausedRecording = false;\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'WhammyRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n\r\n    var video;\r\n    var lastTime;\r\n    var whammy;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.WhammyRecorder = WhammyRecorder;\r\n}\n\r\n// https://github.com/antimatter15/whammy/blob/master/LICENSE\r\n// _________\r\n// Whammy.js\r\n\r\n// todo: Firefox now supports webp for webm containers!\r\n// their MediaRecorder implementation works well!\r\n// should we provide an option to record via Whammy.js or MediaRecorder API is a better solution?\r\n\r\n/**\r\n * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}\r\n * @summary A real time javascript webm encoder based on a canvas hack.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef Whammy\r\n * @class\r\n * @example\r\n * var recorder = new Whammy().Video(15);\r\n * recorder.add(context || canvas || dataURL);\r\n * var output = recorder.compile();\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\nvar Whammy = (function() {\r\n    // a more abstract-ish API\r\n\r\n    function WhammyVideo(duration) {\r\n        this.frames = [];\r\n        this.duration = duration || 1;\r\n        this.quality = 0.8;\r\n    }\r\n\r\n    /**\r\n     * Pass Canvas or Context or image/webp(string) to {@link Whammy} encoder.\r\n     * @method\r\n     * @memberof Whammy\r\n     * @example\r\n     * recorder = new Whammy().Video(0.8, 100);\r\n     * recorder.add(canvas || context || 'image/webp');\r\n     * @param {string} frame - Canvas || Context || image/webp\r\n     * @param {number} duration - Stick a duration (in milliseconds)\r\n     */\r\n    WhammyVideo.prototype.add = function(frame, duration) {\r\n        if ('canvas' in frame) { //CanvasRenderingContext2D\r\n            frame = frame.canvas;\r\n        }\r\n\r\n        if ('toDataURL' in frame) {\r\n            frame = frame.toDataURL('image/webp', this.quality);\r\n        }\r\n\r\n        if (!(/^data:image\\/webp;base64,/ig).test(frame)) {\r\n            throw 'Input must be formatted properly as a base64 encoded DataURI of type image/webp';\r\n        }\r\n        this.frames.push({\r\n            image: frame,\r\n            duration: duration || this.duration\r\n        });\r\n    };\r\n\r\n    function processInWebWorker(_function) {\r\n        var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n            'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n        ], {\r\n            type: 'application/javascript'\r\n        }));\r\n\r\n        var worker = new Worker(blob);\r\n        URL.revokeObjectURL(blob);\r\n        return worker;\r\n    }\r\n\r\n    function whammyInWebWorker(frames) {\r\n        function ArrayToWebM(frames) {\r\n            var info = checkFrames(frames);\r\n            if (!info) {\r\n                return [];\r\n            }\r\n\r\n            var clusterMaxDuration = 30000;\r\n\r\n            var EBML = [{\r\n                'id': 0x1a45dfa3, // EBML\r\n                'data': [{\r\n                    'data': 1,\r\n                    'id': 0x4286 // EBMLVersion\r\n                }, {\r\n                    'data': 1,\r\n                    'id': 0x42f7 // EBMLReadVersion\r\n                }, {\r\n                    'data': 4,\r\n                    'id': 0x42f2 // EBMLMaxIDLength\r\n                }, {\r\n                    'data': 8,\r\n                    'id': 0x42f3 // EBMLMaxSizeLength\r\n                }, {\r\n                    'data': 'webm',\r\n                    'id': 0x4282 // DocType\r\n                }, {\r\n                    'data': 2,\r\n                    'id': 0x4287 // DocTypeVersion\r\n                }, {\r\n                    'data': 2,\r\n                    'id': 0x4285 // DocTypeReadVersion\r\n                }]\r\n            }, {\r\n                'id': 0x18538067, // Segment\r\n                'data': [{\r\n                    'id': 0x1549a966, // Info\r\n                    'data': [{\r\n                        'data': 1e6, //do things in millisecs (num of nanosecs for duration scale)\r\n                        'id': 0x2ad7b1 // TimecodeScale\r\n                    }, {\r\n                        'data': 'whammy',\r\n                        'id': 0x4d80 // MuxingApp\r\n                    }, {\r\n                        'data': 'whammy',\r\n                        'id': 0x5741 // WritingApp\r\n                    }, {\r\n                        'data': doubleToString(info.duration),\r\n                        'id': 0x4489 // Duration\r\n                    }]\r\n                }, {\r\n                    'id': 0x1654ae6b, // Tracks\r\n                    'data': [{\r\n                        'id': 0xae, // TrackEntry\r\n                        'data': [{\r\n                            'data': 1,\r\n                            'id': 0xd7 // TrackNumber\r\n                        }, {\r\n                            'data': 1,\r\n                            'id': 0x73c5 // TrackUID\r\n                        }, {\r\n                            'data': 0,\r\n                            'id': 0x9c // FlagLacing\r\n                        }, {\r\n                            'data': 'und',\r\n                            'id': 0x22b59c // Language\r\n                        }, {\r\n                            'data': 'V_VP8',\r\n                            'id': 0x86 // CodecID\r\n                        }, {\r\n                            'data': 'VP8',\r\n                            'id': 0x258688 // CodecName\r\n                        }, {\r\n                            'data': 1,\r\n                            'id': 0x83 // TrackType\r\n                        }, {\r\n                            'id': 0xe0, // Video\r\n                            'data': [{\r\n                                'data': info.width,\r\n                                'id': 0xb0 // PixelWidth\r\n                            }, {\r\n                                'data': info.height,\r\n                                'id': 0xba // PixelHeight\r\n                            }]\r\n                        }]\r\n                    }]\r\n                }]\r\n            }];\r\n\r\n            //Generate clusters (max duration)\r\n            var frameNumber = 0;\r\n            var clusterTimecode = 0;\r\n            while (frameNumber < frames.length) {\r\n\r\n                var clusterFrames = [];\r\n                var clusterDuration = 0;\r\n                do {\r\n                    clusterFrames.push(frames[frameNumber]);\r\n                    clusterDuration += frames[frameNumber].duration;\r\n                    frameNumber++;\r\n                } while (frameNumber < frames.length && clusterDuration < clusterMaxDuration);\r\n\r\n                var clusterCounter = 0;\r\n                var cluster = {\r\n                    'id': 0x1f43b675, // Cluster\r\n                    'data': getClusterData(clusterTimecode, clusterCounter, clusterFrames)\r\n                }; //Add cluster to segment\r\n                EBML[1].data.push(cluster);\r\n                clusterTimecode += clusterDuration;\r\n            }\r\n\r\n            return generateEBML(EBML);\r\n        }\r\n\r\n        function getClusterData(clusterTimecode, clusterCounter, clusterFrames) {\r\n            return [{\r\n                'data': clusterTimecode,\r\n                'id': 0xe7 // Timecode\r\n            }].concat(clusterFrames.map(function(webp) {\r\n                var block = makeSimpleBlock({\r\n                    discardable: 0,\r\n                    frame: webp.data.slice(4),\r\n                    invisible: 0,\r\n                    keyframe: 1,\r\n                    lacing: 0,\r\n                    trackNum: 1,\r\n                    timecode: Math.round(clusterCounter)\r\n                });\r\n                clusterCounter += webp.duration;\r\n                return {\r\n                    data: block,\r\n                    id: 0xa3\r\n                };\r\n            }));\r\n        }\r\n\r\n        // sums the lengths of all the frames and gets the duration\r\n\r\n        function checkFrames(frames) {\r\n            if (!frames[0]) {\r\n                postMessage({\r\n                    error: 'Something went wrong. Maybe WebP format is not supported in the current browser.'\r\n                });\r\n                return;\r\n            }\r\n\r\n            var width = frames[0].width,\r\n                height = frames[0].height,\r\n                duration = frames[0].duration;\r\n\r\n            for (var i = 1; i < frames.length; i++) {\r\n                duration += frames[i].duration;\r\n            }\r\n            return {\r\n                duration: duration,\r\n                width: width,\r\n                height: height\r\n            };\r\n        }\r\n\r\n        function numToBuffer(num) {\r\n            var parts = [];\r\n            while (num > 0) {\r\n                parts.push(num & 0xff);\r\n                num = num >> 8;\r\n            }\r\n            return new Uint8Array(parts.reverse());\r\n        }\r\n\r\n        function strToBuffer(str) {\r\n            return new Uint8Array(str.split('').map(function(e) {\r\n                return e.charCodeAt(0);\r\n            }));\r\n        }\r\n\r\n        function bitsToBuffer(bits) {\r\n            var data = [];\r\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\r\n            bits = pad + bits;\r\n            for (var i = 0; i < bits.length; i += 8) {\r\n                data.push(parseInt(bits.substr(i, 8), 2));\r\n            }\r\n            return new Uint8Array(data);\r\n        }\r\n\r\n        function generateEBML(json) {\r\n            var ebml = [];\r\n            for (var i = 0; i < json.length; i++) {\r\n                var data = json[i].data;\r\n\r\n                if (typeof data === 'object') {\r\n                    data = generateEBML(data);\r\n                }\r\n\r\n                if (typeof data === 'number') {\r\n                    data = bitsToBuffer(data.toString(2));\r\n                }\r\n\r\n                if (typeof data === 'string') {\r\n                    data = strToBuffer(data);\r\n                }\r\n\r\n                var len = data.size || data.byteLength || data.length;\r\n                var zeroes = Math.ceil(Math.ceil(Math.log(len) / Math.log(2)) / 8);\r\n                var sizeToString = len.toString(2);\r\n                var padded = (new Array((zeroes * 7 + 7 + 1) - sizeToString.length)).join('0') + sizeToString;\r\n                var size = (new Array(zeroes)).join('0') + '1' + padded;\r\n\r\n                ebml.push(numToBuffer(json[i].id));\r\n                ebml.push(bitsToBuffer(size));\r\n                ebml.push(data);\r\n            }\r\n\r\n            return new Blob(ebml, {\r\n                type: 'video/webm'\r\n            });\r\n        }\r\n\r\n        function toBinStrOld(bits) {\r\n            var data = '';\r\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\r\n            bits = pad + bits;\r\n            for (var i = 0; i < bits.length; i += 8) {\r\n                data += String.fromCharCode(parseInt(bits.substr(i, 8), 2));\r\n            }\r\n            return data;\r\n        }\r\n\r\n        function makeSimpleBlock(data) {\r\n            var flags = 0;\r\n\r\n            if (data.keyframe) {\r\n                flags |= 128;\r\n            }\r\n\r\n            if (data.invisible) {\r\n                flags |= 8;\r\n            }\r\n\r\n            if (data.lacing) {\r\n                flags |= (data.lacing << 1);\r\n            }\r\n\r\n            if (data.discardable) {\r\n                flags |= 1;\r\n            }\r\n\r\n            if (data.trackNum > 127) {\r\n                throw 'TrackNumber > 127 not supported';\r\n            }\r\n\r\n            var out = [data.trackNum | 0x80, data.timecode >> 8, data.timecode & 0xff, flags].map(function(e) {\r\n                return String.fromCharCode(e);\r\n            }).join('') + data.frame;\r\n\r\n            return out;\r\n        }\r\n\r\n        function parseWebP(riff) {\r\n            var VP8 = riff.RIFF[0].WEBP[0];\r\n\r\n            var frameStart = VP8.indexOf('\\x9d\\x01\\x2a'); // A VP8 keyframe starts with the 0x9d012a header\r\n            for (var i = 0, c = []; i < 4; i++) {\r\n                c[i] = VP8.charCodeAt(frameStart + 3 + i);\r\n            }\r\n\r\n            var width, height, tmp;\r\n\r\n            //the code below is literally copied verbatim from the bitstream spec\r\n            tmp = (c[1] << 8) | c[0];\r\n            width = tmp & 0x3FFF;\r\n            tmp = (c[3] << 8) | c[2];\r\n            height = tmp & 0x3FFF;\r\n            return {\r\n                width: width,\r\n                height: height,\r\n                data: VP8,\r\n                riff: riff\r\n            };\r\n        }\r\n\r\n        function getStrLength(string, offset) {\r\n            return parseInt(string.substr(offset + 4, 4).split('').map(function(i) {\r\n                var unpadded = i.charCodeAt(0).toString(2);\r\n                return (new Array(8 - unpadded.length + 1)).join('0') + unpadded;\r\n            }).join(''), 2);\r\n        }\r\n\r\n        function parseRIFF(string) {\r\n            var offset = 0;\r\n            var chunks = {};\r\n\r\n            while (offset < string.length) {\r\n                var id = string.substr(offset, 4);\r\n                var len = getStrLength(string, offset);\r\n                var data = string.substr(offset + 4 + 4, len);\r\n                offset += 4 + 4 + len;\r\n                chunks[id] = chunks[id] || [];\r\n\r\n                if (id === 'RIFF' || id === 'LIST') {\r\n                    chunks[id].push(parseRIFF(data));\r\n                } else {\r\n                    chunks[id].push(data);\r\n                }\r\n            }\r\n            return chunks;\r\n        }\r\n\r\n        function doubleToString(num) {\r\n            return [].slice.call(\r\n                new Uint8Array((new Float64Array([num])).buffer), 0).map(function(e) {\r\n                return String.fromCharCode(e);\r\n            }).reverse().join('');\r\n        }\r\n\r\n        var webm = new ArrayToWebM(frames.map(function(frame) {\r\n            var webp = parseWebP(parseRIFF(atob(frame.image.slice(23))));\r\n            webp.duration = frame.duration;\r\n            return webp;\r\n        }));\r\n\r\n        postMessage(webm);\r\n    }\r\n\r\n    /**\r\n     * Encodes frames in WebM container. It uses WebWorkinvoke to invoke 'ArrayToWebM' method.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof Whammy\r\n     * @example\r\n     * recorder = new Whammy().Video(0.8, 100);\r\n     * recorder.compile(function(blob) {\r\n     *    // blob.size - blob.type\r\n     * });\r\n     */\r\n    WhammyVideo.prototype.compile = function(callback) {\r\n        var webWorker = processInWebWorker(whammyInWebWorker);\r\n\r\n        webWorker.onmessage = function(event) {\r\n            if (event.data.error) {\r\n                console.error(event.data.error);\r\n                return;\r\n            }\r\n            callback(event.data);\r\n        };\r\n\r\n        webWorker.postMessage(this.frames);\r\n    };\r\n\r\n    return {\r\n        /**\r\n         * A more abstract-ish API.\r\n         * @method\r\n         * @memberof Whammy\r\n         * @example\r\n         * recorder = new Whammy().Video(0.8, 100);\r\n         * @param {?number} speed - 0.8\r\n         * @param {?number} quality - 100\r\n         */\r\n        Video: WhammyVideo\r\n    };\r\n})();\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.Whammy = Whammy;\r\n}\n\r\n// ______________ (indexed-db)\r\n// DiskStorage.js\r\n\r\n/**\r\n * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.\r\n * @summary Writing blobs into IndexedDB.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @example\r\n * DiskStorage.Store({\r\n *     audioBlob: yourAudioBlob,\r\n *     videoBlob: yourVideoBlob,\r\n *     gifBlob  : yourGifBlob\r\n * });\r\n * DiskStorage.Fetch(function(dataURL, type) {\r\n *     if(type === 'audioBlob') { }\r\n *     if(type === 'videoBlob') { }\r\n *     if(type === 'gifBlob')   { }\r\n * });\r\n * // DiskStorage.dataStoreName = 'recordRTC';\r\n * // DiskStorage.onError = function(error) { };\r\n * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\r\n * @property {function} Fetch - This method fetches stored blobs from IndexedDB.\r\n * @property {function} Store - This method stores blobs in IndexedDB.\r\n * @property {function} onError - This function is invoked for any known/unknown error.\r\n * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\n\r\nvar DiskStorage = {\r\n    /**\r\n     * This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.init();\r\n     */\r\n    init: function() {\r\n        var self = this;\r\n\r\n        if (typeof indexedDB === 'undefined' || typeof indexedDB.open === 'undefined') {\r\n            console.error('IndexedDB API are not available in this browser.');\r\n            return;\r\n        }\r\n\r\n        var dbVersion = 1;\r\n        var dbName = this.dbName || location.href.replace(/\\/|:|#|%|\\.|\\[|\\]/g, ''),\r\n            db;\r\n        var request = indexedDB.open(dbName, dbVersion);\r\n\r\n        function createObjectStore(dataBase) {\r\n            dataBase.createObjectStore(self.dataStoreName);\r\n        }\r\n\r\n        function putInDB() {\r\n            var transaction = db.transaction([self.dataStoreName], 'readwrite');\r\n\r\n            if (self.videoBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.videoBlob, 'videoBlob');\r\n            }\r\n\r\n            if (self.gifBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.gifBlob, 'gifBlob');\r\n            }\r\n\r\n            if (self.audioBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.audioBlob, 'audioBlob');\r\n            }\r\n\r\n            function getFromStore(portionName) {\r\n                transaction.objectStore(self.dataStoreName).get(portionName).onsuccess = function(event) {\r\n                    if (self.callback) {\r\n                        self.callback(event.target.result, portionName);\r\n                    }\r\n                };\r\n            }\r\n\r\n            getFromStore('audioBlob');\r\n            getFromStore('videoBlob');\r\n            getFromStore('gifBlob');\r\n        }\r\n\r\n        request.onerror = self.onError;\r\n\r\n        request.onsuccess = function() {\r\n            db = request.result;\r\n            db.onerror = self.onError;\r\n\r\n            if (db.setVersion) {\r\n                if (db.version !== dbVersion) {\r\n                    var setVersion = db.setVersion(dbVersion);\r\n                    setVersion.onsuccess = function() {\r\n                        createObjectStore(db);\r\n                        putInDB();\r\n                    };\r\n                } else {\r\n                    putInDB();\r\n                }\r\n            } else {\r\n                putInDB();\r\n            }\r\n        };\r\n        request.onupgradeneeded = function(event) {\r\n            createObjectStore(event.target.result);\r\n        };\r\n    },\r\n    /**\r\n     * This method fetches stored blobs from IndexedDB.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.Fetch(function(dataURL, type) {\r\n     *     if(type === 'audioBlob') { }\r\n     *     if(type === 'videoBlob') { }\r\n     *     if(type === 'gifBlob')   { }\r\n     * });\r\n     */\r\n    Fetch: function(callback) {\r\n        this.callback = callback;\r\n        this.init();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * This method stores blobs in IndexedDB.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.Store({\r\n     *     audioBlob: yourAudioBlob,\r\n     *     videoBlob: yourVideoBlob,\r\n     *     gifBlob  : yourGifBlob\r\n     * });\r\n     */\r\n    Store: function(config) {\r\n        this.audioBlob = config.audioBlob;\r\n        this.videoBlob = config.videoBlob;\r\n        this.gifBlob = config.gifBlob;\r\n\r\n        this.init();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * This function is invoked for any known/unknown error.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.onError = function(error){\r\n     *     alerot( JSON.stringify(error) );\r\n     * };\r\n     */\r\n    onError: function(error) {\r\n        console.error(JSON.stringify(error, null, '\\t'));\r\n    },\r\n\r\n    /**\r\n     * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.dataStoreName = 'recordRTC';\r\n     */\r\n    dataStoreName: 'recordRTC',\r\n    dbName: null\r\n};\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.DiskStorage = DiskStorage;\r\n}\n\r\n// ______________\r\n// GifRecorder.js\r\n\r\n/**\r\n * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef GifRecorder\r\n * @class\r\n * @example\r\n * var recorder = new GifRecorder(mediaStream || canvas || context, { onGifPreview: function, onGifRecordingStarted: function, width: 1280, height: 720, frameRate: 200, quality: 10 });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     img.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.\r\n * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}\r\n */\r\n\r\nfunction GifRecorder(mediaStream, config) {\r\n    if (typeof GIFEncoder === 'undefined') {\r\n        var script = document.createElement('script');\r\n        script.src = 'https://www.webrtc-experiment.com/gif-recorder.js';\r\n        (document.body || document.documentElement).appendChild(script);\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    var isHTMLObject = mediaStream instanceof CanvasRenderingContext2D || mediaStream instanceof HTMLCanvasElement;\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (typeof GIFEncoder === 'undefined') {\r\n            setTimeout(self.record, 1000);\r\n            return;\r\n        }\r\n\r\n        if (!isLoadedMetaData) {\r\n            setTimeout(self.record, 1000);\r\n            return;\r\n        }\r\n\r\n        if (!isHTMLObject) {\r\n            if (!config.width) {\r\n                config.width = video.offsetWidth || 320;\r\n            }\r\n\r\n            if (!config.height) {\r\n                config.height = video.offsetHeight || 240;\r\n            }\r\n\r\n            if (!config.video) {\r\n                config.video = {\r\n                    width: config.width,\r\n                    height: config.height\r\n                };\r\n            }\r\n\r\n            if (!config.canvas) {\r\n                config.canvas = {\r\n                    width: config.width,\r\n                    height: config.height\r\n                };\r\n            }\r\n\r\n            canvas.width = config.canvas.width || 320;\r\n            canvas.height = config.canvas.height || 240;\r\n\r\n            video.width = config.video.width || 320;\r\n            video.height = config.video.height || 240;\r\n        }\r\n\r\n        // external library to record as GIF images\r\n        gifEncoder = new GIFEncoder();\r\n\r\n        // void setRepeat(int iter) \r\n        // Sets the number of times the set of GIF frames should be played. \r\n        // Default is 1; 0 means play indefinitely.\r\n        gifEncoder.setRepeat(0);\r\n\r\n        // void setFrameRate(Number fps) \r\n        // Sets frame rate in frames per second. \r\n        // Equivalent to setDelay(1000/fps).\r\n        // Using \"setDelay\" instead of \"setFrameRate\"\r\n        gifEncoder.setDelay(config.frameRate || 200);\r\n\r\n        // void setQuality(int quality) \r\n        // Sets quality of color quantization (conversion of images to the \r\n        // maximum 256 colors allowed by the GIF specification). \r\n        // Lower values (minimum = 1) produce better colors, \r\n        // but slow processing significantly. 10 is the default, \r\n        // and produces good color mapping at reasonable speeds. \r\n        // Values greater than 20 do not yield significant improvements in speed.\r\n        gifEncoder.setQuality(config.quality || 10);\r\n\r\n        // Boolean start() \r\n        // This writes the GIF Header and returns false if it fails.\r\n        gifEncoder.start();\r\n\r\n        if (typeof config.onGifRecordingStarted === 'function') {\r\n            config.onGifRecordingStarted();\r\n        }\r\n\r\n        startTime = Date.now();\r\n\r\n        function drawVideoFrame(time) {\r\n            if (self.clearedRecordedData === true) {\r\n                return;\r\n            }\r\n\r\n            if (isPausedRecording) {\r\n                return setTimeout(function() {\r\n                    drawVideoFrame(time);\r\n                }, 100);\r\n            }\r\n\r\n            lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\r\n\r\n            if (typeof lastFrameTime === undefined) {\r\n                lastFrameTime = time;\r\n            }\r\n\r\n            // ~10 fps\r\n            if (time - lastFrameTime < 90) {\r\n                return;\r\n            }\r\n\r\n            if (!isHTMLObject && video.paused) {\r\n                // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\r\n                // Tweak for Android Chrome\r\n                video.play();\r\n            }\r\n\r\n            if (!isHTMLObject) {\r\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            }\r\n\r\n            if (config.onGifPreview) {\r\n                config.onGifPreview(canvas.toDataURL('image/png'));\r\n            }\r\n\r\n            gifEncoder.addFrame(context);\r\n            lastFrameTime = time;\r\n        }\r\n\r\n        lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     img.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (lastAnimationFrame) {\r\n            cancelAnimationFrame(lastAnimationFrame);\r\n        }\r\n\r\n        endTime = Date.now();\r\n\r\n        /**\r\n         * @property {Blob} blob - The recorded blob object.\r\n         * @memberof GifRecorder\r\n         * @example\r\n         * recorder.stop(function(){\r\n         *     var blob = recorder.blob;\r\n         * });\r\n         */\r\n        this.blob = new Blob([new Uint8Array(gifEncoder.stream().bin)], {\r\n            type: 'image/gif'\r\n        });\r\n\r\n        callback(this.blob);\r\n\r\n        // bug: find a way to clear old recorded blobs\r\n        gifEncoder.stream().bin = [];\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        self.clearedRecordedData = true;\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        if (gifEncoder) {\r\n            gifEncoder.stream().bin = [];\r\n        }\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'GifRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n\r\n    if (isHTMLObject) {\r\n        if (mediaStream instanceof CanvasRenderingContext2D) {\r\n            context = mediaStream;\r\n            canvas = context.canvas;\r\n        } else if (mediaStream instanceof HTMLCanvasElement) {\r\n            context = mediaStream.getContext('2d');\r\n            canvas = mediaStream;\r\n        }\r\n    }\r\n\r\n    var isLoadedMetaData = true;\r\n\r\n    if (!isHTMLObject) {\r\n        var video = document.createElement('video');\r\n        video.muted = true;\r\n        video.autoplay = true;\r\n        video.playsInline = true;\r\n\r\n        isLoadedMetaData = false;\r\n        video.onloadedmetadata = function() {\r\n            isLoadedMetaData = true;\r\n        };\r\n\r\n        setSrcObject(mediaStream, video);\r\n\r\n        video.play();\r\n    }\r\n\r\n    var lastAnimationFrame = null;\r\n    var startTime, endTime, lastFrameTime;\r\n\r\n    var gifEncoder;\r\n\r\n    var self = this;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.GifRecorder = GifRecorder;\r\n}\n\r\n// Last time updated: 2019-06-21 4:09:42 AM UTC\r\n\r\n// ________________________\r\n// MultiStreamsMixer v1.2.2\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/MultiStreamsMixer\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\nfunction MultiStreamsMixer(arrayOfMediaStreams, elementClass) {\r\n\r\n    var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n    (function(that) {\r\n        if (typeof RecordRTC !== 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (!that) {\r\n            return;\r\n        }\r\n\r\n        if (typeof window !== 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (typeof global === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        global.navigator = {\r\n            userAgent: browserFakeUserAgent,\r\n            getUserMedia: function() {}\r\n        };\r\n\r\n        if (!global.console) {\r\n            global.console = {};\r\n        }\r\n\r\n        if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\r\n            global.console.error = global.console.log = global.console.log || function() {\r\n                console.log(arguments);\r\n            };\r\n        }\r\n\r\n        if (typeof document === 'undefined') {\r\n            /*global document:true */\r\n            that.document = {\r\n                documentElement: {\r\n                    appendChild: function() {\r\n                        return '';\r\n                    }\r\n                }\r\n            };\r\n\r\n            document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n                var obj = {\r\n                    getContext: function() {\r\n                        return obj;\r\n                    },\r\n                    play: function() {},\r\n                    pause: function() {},\r\n                    drawImage: function() {},\r\n                    toDataURL: function() {\r\n                        return '';\r\n                    },\r\n                    style: {}\r\n                };\r\n                return obj;\r\n            };\r\n\r\n            that.HTMLVideoElement = function() {};\r\n        }\r\n\r\n        if (typeof location === 'undefined') {\r\n            /*global location:true */\r\n            that.location = {\r\n                protocol: 'file:',\r\n                href: '',\r\n                hash: ''\r\n            };\r\n        }\r\n\r\n        if (typeof screen === 'undefined') {\r\n            /*global screen:true */\r\n            that.screen = {\r\n                width: 0,\r\n                height: 0\r\n            };\r\n        }\r\n\r\n        if (typeof URL === 'undefined') {\r\n            /*global screen:true */\r\n            that.URL = {\r\n                createObjectURL: function() {\r\n                    return '';\r\n                },\r\n                revokeObjectURL: function() {\r\n                    return '';\r\n                }\r\n            };\r\n        }\r\n\r\n        /*global window:true */\r\n        that.window = global;\r\n    })(typeof global !== 'undefined' ? global : null);\r\n\r\n    // requires: chrome://flags/#enable-experimental-web-platform-features\r\n\r\n    elementClass = elementClass || 'multi-streams-mixer';\r\n\r\n    var videos = [];\r\n    var isStopDrawingFrames = false;\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n    canvas.style.opacity = 0;\r\n    canvas.style.position = 'absolute';\r\n    canvas.style.zIndex = -1;\r\n    canvas.style.top = '-1000em';\r\n    canvas.style.left = '-1000em';\r\n    canvas.className = elementClass;\r\n    (document.body || document.documentElement).appendChild(canvas);\r\n\r\n    this.disableLogs = false;\r\n    this.frameInterval = 10;\r\n\r\n    this.width = 360;\r\n    this.height = 240;\r\n\r\n    // use gain node to prevent echo\r\n    this.useGainNode = true;\r\n\r\n    var self = this;\r\n\r\n    // _____________________________\r\n    // Cross-Browser-Declarations.js\r\n\r\n    // WebAudio API representer\r\n    var AudioContext = window.AudioContext;\r\n\r\n    if (typeof AudioContext === 'undefined') {\r\n        if (typeof webkitAudioContext !== 'undefined') {\r\n            /*global AudioContext:true */\r\n            AudioContext = webkitAudioContext;\r\n        }\r\n\r\n        if (typeof mozAudioContext !== 'undefined') {\r\n            /*global AudioContext:true */\r\n            AudioContext = mozAudioContext;\r\n        }\r\n    }\r\n\r\n    /*jshint -W079 */\r\n    var URL = window.URL;\r\n\r\n    if (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\r\n        /*global URL:true */\r\n        URL = webkitURL;\r\n    }\r\n\r\n    if (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\r\n        if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n            navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n        }\r\n\r\n        if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n            navigator.getUserMedia = navigator.mozGetUserMedia;\r\n        }\r\n    }\r\n\r\n    var MediaStream = window.MediaStream;\r\n\r\n    if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n        MediaStream = webkitMediaStream;\r\n    }\r\n\r\n    /*global MediaStream:true */\r\n    if (typeof MediaStream !== 'undefined') {\r\n        // override \"stop\" method for all browsers\r\n        if (typeof MediaStream.prototype.stop === 'undefined') {\r\n            MediaStream.prototype.stop = function() {\r\n                this.getTracks().forEach(function(track) {\r\n                    track.stop();\r\n                });\r\n            };\r\n        }\r\n    }\r\n\r\n    var Storage = {};\r\n\r\n    if (typeof AudioContext !== 'undefined') {\r\n        Storage.AudioContext = AudioContext;\r\n    } else if (typeof webkitAudioContext !== 'undefined') {\r\n        Storage.AudioContext = webkitAudioContext;\r\n    }\r\n\r\n    function setSrcObject(stream, element) {\r\n        if ('srcObject' in element) {\r\n            element.srcObject = stream;\r\n        } else if ('mozSrcObject' in element) {\r\n            element.mozSrcObject = stream;\r\n        } else {\r\n            element.srcObject = stream;\r\n        }\r\n    }\r\n\r\n    this.startDrawingFrames = function() {\r\n        drawVideosToCanvas();\r\n    };\r\n\r\n    function drawVideosToCanvas() {\r\n        if (isStopDrawingFrames) {\r\n            return;\r\n        }\r\n\r\n        var videosLength = videos.length;\r\n\r\n        var fullcanvas = false;\r\n        var remaining = [];\r\n        videos.forEach(function(video) {\r\n            if (!video.stream) {\r\n                video.stream = {};\r\n            }\r\n\r\n            if (video.stream.fullcanvas) {\r\n                fullcanvas = video;\r\n            } else {\r\n                // todo: video.stream.active or video.stream.live to fix blank frames issues?\r\n                remaining.push(video);\r\n            }\r\n        });\r\n\r\n        if (fullcanvas) {\r\n            canvas.width = fullcanvas.stream.width;\r\n            canvas.height = fullcanvas.stream.height;\r\n        } else if (remaining.length) {\r\n            canvas.width = videosLength > 1 ? remaining[0].width * 2 : remaining[0].width;\r\n\r\n            var height = 1;\r\n            if (videosLength === 3 || videosLength === 4) {\r\n                height = 2;\r\n            }\r\n            if (videosLength === 5 || videosLength === 6) {\r\n                height = 3;\r\n            }\r\n            if (videosLength === 7 || videosLength === 8) {\r\n                height = 4;\r\n            }\r\n            if (videosLength === 9 || videosLength === 10) {\r\n                height = 5;\r\n            }\r\n            canvas.height = remaining[0].height * height;\r\n        } else {\r\n            canvas.width = self.width || 360;\r\n            canvas.height = self.height || 240;\r\n        }\r\n\r\n        if (fullcanvas && fullcanvas instanceof HTMLVideoElement) {\r\n            drawImage(fullcanvas);\r\n        }\r\n\r\n        remaining.forEach(function(video, idx) {\r\n            drawImage(video, idx);\r\n        });\r\n\r\n        setTimeout(drawVideosToCanvas, self.frameInterval);\r\n    }\r\n\r\n    function drawImage(video, idx) {\r\n        if (isStopDrawingFrames) {\r\n            return;\r\n        }\r\n\r\n        var x = 0;\r\n        var y = 0;\r\n        var width = video.width;\r\n        var height = video.height;\r\n\r\n        if (idx === 1) {\r\n            x = video.width;\r\n        }\r\n\r\n        if (idx === 2) {\r\n            y = video.height;\r\n        }\r\n\r\n        if (idx === 3) {\r\n            x = video.width;\r\n            y = video.height;\r\n        }\r\n\r\n        if (idx === 4) {\r\n            y = video.height * 2;\r\n        }\r\n\r\n        if (idx === 5) {\r\n            x = video.width;\r\n            y = video.height * 2;\r\n        }\r\n\r\n        if (idx === 6) {\r\n            y = video.height * 3;\r\n        }\r\n\r\n        if (idx === 7) {\r\n            x = video.width;\r\n            y = video.height * 3;\r\n        }\r\n\r\n        if (typeof video.stream.left !== 'undefined') {\r\n            x = video.stream.left;\r\n        }\r\n\r\n        if (typeof video.stream.top !== 'undefined') {\r\n            y = video.stream.top;\r\n        }\r\n\r\n        if (typeof video.stream.width !== 'undefined') {\r\n            width = video.stream.width;\r\n        }\r\n\r\n        if (typeof video.stream.height !== 'undefined') {\r\n            height = video.stream.height;\r\n        }\r\n\r\n        context.drawImage(video, x, y, width, height);\r\n\r\n        if (typeof video.stream.onRender === 'function') {\r\n            video.stream.onRender(context, x, y, width, height, idx);\r\n        }\r\n    }\r\n\r\n    function getMixedStream() {\r\n        isStopDrawingFrames = false;\r\n        var mixedVideoStream = getMixedVideoStream();\r\n\r\n        var mixedAudioStream = getMixedAudioStream();\r\n        if (mixedAudioStream) {\r\n            mixedAudioStream.getTracks().filter(function(t) {\r\n                return t.kind === 'audio';\r\n            }).forEach(function(track) {\r\n                mixedVideoStream.addTrack(track);\r\n            });\r\n        }\r\n\r\n        var fullcanvas;\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            if (stream.fullcanvas) {\r\n                fullcanvas = true;\r\n            }\r\n        });\r\n\r\n        // mixedVideoStream.prototype.appendStreams = appendStreams;\r\n        // mixedVideoStream.prototype.resetVideoStreams = resetVideoStreams;\r\n        // mixedVideoStream.prototype.clearRecordedData = clearRecordedData;\r\n\r\n        return mixedVideoStream;\r\n    }\r\n\r\n    function getMixedVideoStream() {\r\n        resetVideoStreams();\r\n\r\n        var capturedStream;\r\n\r\n        if ('captureStream' in canvas) {\r\n            capturedStream = canvas.captureStream();\r\n        } else if ('mozCaptureStream' in canvas) {\r\n            capturedStream = canvas.mozCaptureStream();\r\n        } else if (!self.disableLogs) {\r\n            console.error('Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features');\r\n        }\r\n\r\n        var videoStream = new MediaStream();\r\n\r\n        capturedStream.getTracks().filter(function(t) {\r\n            return t.kind === 'video';\r\n        }).forEach(function(track) {\r\n            videoStream.addTrack(track);\r\n        });\r\n\r\n        canvas.stream = videoStream;\r\n\r\n        return videoStream;\r\n    }\r\n\r\n    function getMixedAudioStream() {\r\n        // via: @pehrsons\r\n        if (!Storage.AudioContextConstructor) {\r\n            Storage.AudioContextConstructor = new Storage.AudioContext();\r\n        }\r\n\r\n        self.audioContext = Storage.AudioContextConstructor;\r\n\r\n        self.audioSources = [];\r\n\r\n        if (self.useGainNode === true) {\r\n            self.gainNode = self.audioContext.createGain();\r\n            self.gainNode.connect(self.audioContext.destination);\r\n            self.gainNode.gain.value = 0; // don't hear self\r\n        }\r\n\r\n        var audioTracksLength = 0;\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            if (!stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                }).length) {\r\n                return;\r\n            }\r\n\r\n            audioTracksLength++;\r\n\r\n            var audioSource = self.audioContext.createMediaStreamSource(stream);\r\n\r\n            if (self.useGainNode === true) {\r\n                audioSource.connect(self.gainNode);\r\n            }\r\n\r\n            self.audioSources.push(audioSource);\r\n        });\r\n\r\n        if (!audioTracksLength) {\r\n            // because \"self.audioContext\" is not initialized\r\n            // that's why we've to ignore rest of the code\r\n            return;\r\n        }\r\n\r\n        self.audioDestination = self.audioContext.createMediaStreamDestination();\r\n        self.audioSources.forEach(function(audioSource) {\r\n            audioSource.connect(self.audioDestination);\r\n        });\r\n        return self.audioDestination.stream;\r\n    }\r\n\r\n    function getVideo(stream) {\r\n        var video = document.createElement('video');\r\n\r\n        setSrcObject(stream, video);\r\n\r\n        video.className = elementClass;\r\n\r\n        video.muted = true;\r\n        video.volume = 0;\r\n\r\n        video.width = stream.width || self.width || 360;\r\n        video.height = stream.height || self.height || 240;\r\n\r\n        video.play();\r\n\r\n        return video;\r\n    }\r\n\r\n    this.appendStreams = function(streams) {\r\n        if (!streams) {\r\n            throw 'First parameter is required.';\r\n        }\r\n\r\n        if (!(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        streams.forEach(function(stream) {\r\n            var newStream = new MediaStream();\r\n\r\n            if (stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                }).length) {\r\n                var video = getVideo(stream);\r\n                video.stream = stream;\r\n                videos.push(video);\r\n\r\n                newStream.addTrack(stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                })[0]);\r\n            }\r\n\r\n            if (stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                }).length) {\r\n                var audioSource = self.audioContext.createMediaStreamSource(stream);\r\n                self.audioDestination = self.audioContext.createMediaStreamDestination();\r\n                audioSource.connect(self.audioDestination);\r\n\r\n                newStream.addTrack(self.audioDestination.stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                })[0]);\r\n            }\r\n\r\n            arrayOfMediaStreams.push(newStream);\r\n        });\r\n    };\r\n\r\n    this.releaseStreams = function() {\r\n        videos = [];\r\n        isStopDrawingFrames = true;\r\n\r\n        if (self.gainNode) {\r\n            self.gainNode.disconnect();\r\n            self.gainNode = null;\r\n        }\r\n\r\n        if (self.audioSources.length) {\r\n            self.audioSources.forEach(function(source) {\r\n                source.disconnect();\r\n            });\r\n            self.audioSources = [];\r\n        }\r\n\r\n        if (self.audioDestination) {\r\n            self.audioDestination.disconnect();\r\n            self.audioDestination = null;\r\n        }\r\n\r\n        if (self.audioContext) {\r\n            self.audioContext.close();\r\n        }\r\n\r\n        self.audioContext = null;\r\n\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        if (canvas.stream) {\r\n            canvas.stream.stop();\r\n            canvas.stream = null;\r\n        }\r\n    };\r\n\r\n    this.resetVideoStreams = function(streams) {\r\n        if (streams && !(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        resetVideoStreams(streams);\r\n    };\r\n\r\n    function resetVideoStreams(streams) {\r\n        videos = [];\r\n        streams = streams || arrayOfMediaStreams;\r\n\r\n        // via: @adrian-ber\r\n        streams.forEach(function(stream) {\r\n            if (!stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                }).length) {\r\n                return;\r\n            }\r\n\r\n            var video = getVideo(stream);\r\n            video.stream = stream;\r\n            videos.push(video);\r\n        });\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'MultiStreamsMixer';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    this.getMixedStream = getMixedStream;\r\n\r\n}\r\n\r\nif (typeof RecordRTC === 'undefined') {\r\n    if (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n        module.exports = MultiStreamsMixer;\r\n    }\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('MultiStreamsMixer', [], function() {\r\n            return MultiStreamsMixer;\r\n        });\r\n    }\r\n}\n\r\n// ______________________\r\n// MultiStreamRecorder.js\r\n\r\n/*\r\n * Video conference recording, using captureStream API along with WebAudio and Canvas2D API.\r\n */\r\n\r\n/**\r\n * MultiStreamRecorder can record multiple videos in single container.\r\n * @summary Multi-videos recorder.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef MultiStreamRecorder\r\n * @class\r\n * @example\r\n * var options = {\r\n *     mimeType: 'video/webm'\r\n * }\r\n * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n *\r\n *     // or\r\n *     var blob = recorder.blob;\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStreams} mediaStreams - Array of MediaStreams.\r\n * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: \"video/webm\"}\r\n */\r\n\r\nfunction MultiStreamRecorder(arrayOfMediaStreams, options) {\r\n    arrayOfMediaStreams = arrayOfMediaStreams || [];\r\n    var self = this;\r\n\r\n    var mixer;\r\n    var mediaRecorder;\r\n\r\n    options = options || {\r\n        elementClass: 'multi-streams-mixer',\r\n        mimeType: 'video/webm',\r\n        video: {\r\n            width: 360,\r\n            height: 240\r\n        }\r\n    };\r\n\r\n    if (!options.frameInterval) {\r\n        options.frameInterval = 10;\r\n    }\r\n\r\n    if (!options.video) {\r\n        options.video = {};\r\n    }\r\n\r\n    if (!options.video.width) {\r\n        options.video.width = 360;\r\n    }\r\n\r\n    if (!options.video.height) {\r\n        options.video.height = 240;\r\n    }\r\n\r\n    /**\r\n     * This method records all MediaStreams.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        // github/muaz-khan/MultiStreamsMixer\r\n        mixer = new MultiStreamsMixer(arrayOfMediaStreams, options.elementClass || 'multi-streams-mixer');\r\n\r\n        if (getAllVideoTracks().length) {\r\n            mixer.frameInterval = options.frameInterval || 10;\r\n            mixer.width = options.video.width || 360;\r\n            mixer.height = options.video.height || 240;\r\n            mixer.startDrawingFrames();\r\n        }\r\n\r\n        if (options.previewStream && typeof options.previewStream === 'function') {\r\n            options.previewStream(mixer.getMixedStream());\r\n        }\r\n\r\n        // record using MediaRecorder API\r\n        mediaRecorder = new MediaStreamRecorder(mixer.getMixedStream(), options);\r\n        mediaRecorder.record();\r\n    };\r\n\r\n    function getAllVideoTracks() {\r\n        var tracks = [];\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            getTracks(stream, 'video').forEach(function(track) {\r\n                tracks.push(track);\r\n            });\r\n        });\r\n        return tracks;\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        mediaRecorder.stop(function(blob) {\r\n            self.blob = blob;\r\n\r\n            callback(blob);\r\n\r\n            self.clearRecordedData();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.pause();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.resume();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.clearRecordedData();\r\n            mediaRecorder = null;\r\n        }\r\n\r\n        if (mixer) {\r\n            mixer.releaseStreams();\r\n            mixer = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Add extra media-streams to existing recordings.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\r\n     * @example\r\n     * recorder.addStreams([newAudioStream, newVideoStream]);\r\n     */\r\n    this.addStreams = function(streams) {\r\n        if (!streams) {\r\n            throw 'First parameter is required.';\r\n        }\r\n\r\n        if (!(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        arrayOfMediaStreams.concat(streams);\r\n\r\n        if (!mediaRecorder || !mixer) {\r\n            return;\r\n        }\r\n\r\n        mixer.appendStreams(streams);\r\n\r\n        if (options.previewStream && typeof options.previewStream === 'function') {\r\n            options.previewStream(mixer.getMixedStream());\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Reset videos during live recording. Replace old videos e.g. replace cameras with full-screen.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\r\n     * @example\r\n     * recorder.resetVideoStreams([newVideo1, newVideo2]);\r\n     */\r\n    this.resetVideoStreams = function(streams) {\r\n        if (!mixer) {\r\n            return;\r\n        }\r\n\r\n        if (streams && !(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        mixer.resetVideoStreams(streams);\r\n    };\r\n\r\n    /**\r\n     * Returns MultiStreamsMixer\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * let mixer = recorder.getMixer();\r\n     * mixer.appendStreams([newStream]);\r\n     */\r\n    this.getMixer = function() {\r\n        return mixer;\r\n    };\r\n\r\n    // for debugging\r\n    this.name = 'MultiStreamRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MultiStreamRecorder = MultiStreamRecorder;\r\n}\n\r\n// _____________________\r\n// RecordRTC.promises.js\r\n\r\n/**\r\n * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}\r\n * @summary Promises for {@link RecordRTC}\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTCPromisesHandler\r\n * @class\r\n * @example\r\n * var recorder = new RecordRTCPromisesHandler(mediaStream, options);\r\n * recorder.startRecording()\r\n *         .then(successCB)\r\n *         .catch(errorCB);\r\n * // Note: You can access all RecordRTC API using \"recorder.recordRTC\" e.g. \r\n * recorder.recordRTC.onStateChanged = function(state) {};\r\n * recorder.recordRTC.setRecordingDuration(5000);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\r\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\r\n * @throws Will throw an error if \"new\" keyword is not used to initiate \"RecordRTCPromisesHandler\". Also throws error if first argument \"MediaStream\" is missing.\r\n * @requires {@link RecordRTC}\r\n */\r\n\r\nfunction RecordRTCPromisesHandler(mediaStream, options) {\r\n    if (!this) {\r\n        throw 'Use \"new RecordRTCPromisesHandler()\"';\r\n    }\r\n\r\n    if (typeof mediaStream === 'undefined') {\r\n        throw 'First argument \"MediaStream\" is required.';\r\n    }\r\n\r\n    var self = this;\r\n\r\n    /**\r\n     * @property {Blob} blob - Access/reach the native {@link RecordRTC} object.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let internal = recorder.recordRTC.getInternalRecorder();\r\n     * alert(internal instanceof MediaStreamRecorder);\r\n     * recorder.recordRTC.onStateChanged = function(state) {};\r\n     */\r\n    self.recordRTC = new RecordRTC(mediaStream, options);\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.startRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.startRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.startRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method stops the recording.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     var blob = recorder.getBlob();\r\n     * }).catch(errorCB);\r\n     */\r\n    this.stopRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.stopRecording(function(url) {\r\n                    self.blob = self.recordRTC.getBlob();\r\n\r\n                    if (!self.blob || !self.blob.size) {\r\n                        reject('Empty blob.', self.blob);\r\n                        return;\r\n                    }\r\n\r\n                    resolve(url);\r\n                });\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.pauseRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.pauseRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.pauseRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.resumeRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.resumeRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.resumeRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns data-url for the recorded blob.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     recorder.getDataURL().then(function(dataURL) {\r\n     *         window.open(dataURL);\r\n     *     }).catch(errorCB);;\r\n     * }).catch(errorCB);\r\n     */\r\n    this.getDataURL = function(callback) {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.getDataURL(function(dataURL) {\r\n                    resolve(dataURL);\r\n                });\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns the recorded blob.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     recorder.getBlob().then(function(blob) {})\r\n     * }).catch(errorCB);\r\n     */\r\n    this.getBlob = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getBlob());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns the internal recording object.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let internalRecorder = await recorder.getInternalRecorder();\r\n     * if(internalRecorder instanceof MultiStreamRecorder) {\r\n     *     internalRecorder.addStreams([newAudioStream]);\r\n     *     internalRecorder.resetVideoStreams([screenStream]);\r\n     * }\r\n     * @returns {Object} \r\n     */\r\n    this.getInternalRecorder = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getInternalRecorder());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method resets the recorder. So that you can reuse single recorder instance many times.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * await recorder.reset();\r\n     * recorder.startRecording(); // record again\r\n     */\r\n    this.reset = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.reset());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Destroy RecordRTC instance. Clear all recorders and objects.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.destroy().then(successCB).catch(errorCB);\r\n     */\r\n    this.destroy = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.destroy());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Get recorder's readonly state.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let state = await recorder.getState();\r\n     * // or\r\n     * recorder.getState().then(state => { console.log(state); })\r\n     * @returns {String} Returns recording state.\r\n     */\r\n    this.getState = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getState());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * await recorder.stopRecording();\r\n     * let blob = recorder.getBlob(); // or \"recorder.recordRTC.blob\"\r\n     * invokeSaveAsDialog(blob);\r\n     */\r\n    this.blob = null;\r\n\r\n    /**\r\n     * RecordRTC version number\r\n     * @property {String} version - Release version number.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @static\r\n     * @readonly\r\n     * @example\r\n     * alert(recorder.version);\r\n     */\r\n    this.version = '5.6.2';\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.RecordRTCPromisesHandler = RecordRTCPromisesHandler;\r\n}\n\r\n// ______________________\r\n// WebAssemblyRecorder.js\r\n\r\n/**\r\n * WebAssemblyRecorder lets you create webm videos in JavaScript via WebAssembly. The library consumes raw RGBA32 buffers (4 bytes per pixel) and turns them into a webm video with the given framerate and quality. This makes it compatible out-of-the-box with ImageData from a CANVAS. With realtime mode you can also use webm-wasm for streaming webm videos.\r\n * @summary Video recording feature in Chrome, Firefox and maybe Edge.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef WebAssemblyRecorder\r\n * @class\r\n * @example\r\n * var recorder = new WebAssemblyRecorder(mediaStream);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {webAssemblyPath:'webm-wasm.wasm',workerPath: 'webm-worker.js', frameRate: 30, width: 1920, height: 1080, bitrate: 1024, realtime: true}\r\n */\r\nfunction WebAssemblyRecorder(stream, config) {\r\n    // based on: github.com/GoogleChromeLabs/webm-wasm\r\n\r\n    if (typeof ReadableStream === 'undefined' || typeof WritableStream === 'undefined') {\r\n        // because it fixes readable/writable streams issues\r\n        console.error('Following polyfill is strongly recommended: https://unpkg.com/@mattiasbuelens/web-streams-polyfill/dist/polyfill.min.js');\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    config.width = config.width || 640;\r\n    config.height = config.height || 480;\r\n    config.frameRate = config.frameRate || 30;\r\n    config.bitrate = config.bitrate || 1200;\r\n    config.realtime = config.realtime || true;\r\n\r\n    function createBufferURL(buffer, type) {\r\n        return URL.createObjectURL(new Blob([buffer], {\r\n            type: type || ''\r\n        }));\r\n    }\r\n\r\n    var finished;\r\n\r\n    function cameraStream() {\r\n        return new ReadableStream({\r\n            start: function(controller) {\r\n                var cvs = document.createElement('canvas');\r\n                var video = document.createElement('video');\r\n                var first = true;\r\n                video.srcObject = stream;\r\n                video.muted = true;\r\n                video.height = config.height;\r\n                video.width = config.width;\r\n                video.volume = 0;\r\n                video.onplaying = function() {\r\n                    cvs.width = config.width;\r\n                    cvs.height = config.height;\r\n                    var ctx = cvs.getContext('2d');\r\n                    var frameTimeout = 1000 / config.frameRate;\r\n                    var cameraTimer = setInterval(function f() {\r\n                        if (finished) {\r\n                            clearInterval(cameraTimer);\r\n                            controller.close();\r\n                        }\r\n\r\n                        if (first) {\r\n                            first = false;\r\n                            if (config.onVideoProcessStarted) {\r\n                                config.onVideoProcessStarted();\r\n                            }\r\n                        }\r\n\r\n                        ctx.drawImage(video, 0, 0);\r\n                        if (controller._controlledReadableStream.state !== 'closed') {\r\n                            try {\r\n                                controller.enqueue(\r\n                                    ctx.getImageData(0, 0, config.width, config.height)\r\n                                );\r\n                            } catch (e) {}\r\n                        }\r\n                    }, frameTimeout);\r\n                };\r\n                video.play();\r\n            }\r\n        });\r\n    }\r\n\r\n    var worker;\r\n\r\n    function startRecording(stream, buffer) {\r\n        if (!config.workerPath && !buffer) {\r\n            finished = false;\r\n\r\n            // is it safe to use @latest ?\r\n\r\n            fetch(\r\n                'https://unpkg.com/webm-wasm@latest/dist/webm-worker.js'\r\n            ).then(function(r) {\r\n                r.arrayBuffer().then(function(buffer) {\r\n                    startRecording(stream, buffer);\r\n                });\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!config.workerPath && buffer instanceof ArrayBuffer) {\r\n            var blob = new Blob([buffer], {\r\n                type: 'text/javascript'\r\n            });\r\n            config.workerPath = URL.createObjectURL(blob);\r\n        }\r\n\r\n        if (!config.workerPath) {\r\n            console.error('workerPath parameter is missing.');\r\n        }\r\n\r\n        worker = new Worker(config.workerPath);\r\n\r\n        worker.postMessage(config.webAssemblyPath || 'https://unpkg.com/webm-wasm@latest/dist/webm-wasm.wasm');\r\n        worker.addEventListener('message', function(event) {\r\n            if (event.data === 'READY') {\r\n                worker.postMessage({\r\n                    width: config.width,\r\n                    height: config.height,\r\n                    bitrate: config.bitrate || 1200,\r\n                    timebaseDen: config.frameRate || 30,\r\n                    realtime: config.realtime\r\n                });\r\n\r\n                cameraStream().pipeTo(new WritableStream({\r\n                    write: function(image) {\r\n                        if (finished) {\r\n                            console.error('Got image, but recorder is finished!');\r\n                            return;\r\n                        }\r\n\r\n                        worker.postMessage(image.data.buffer, [image.data.buffer]);\r\n                    }\r\n                }));\r\n            } else if (!!event.data) {\r\n                if (!isPaused) {\r\n                    arrayOfBuffers.push(event.data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method records video.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        arrayOfBuffers = [];\r\n        isPaused = false;\r\n        this.blob = null;\r\n        startRecording(stream);\r\n\r\n        if (typeof config.initCallback === 'function') {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    var isPaused;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPaused = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPaused = false;\r\n    };\r\n\r\n    function terminate(callback) {\r\n        if (!worker) {\r\n            if (callback) {\r\n                callback();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        // Wait for null event data to indicate that the encoding is complete\r\n        worker.addEventListener('message', function(event) {\r\n            if (event.data === null) {\r\n                worker.terminate();\r\n                worker = null;\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            }\r\n        });\r\n\r\n        worker.postMessage(null);\r\n    }\r\n\r\n    var arrayOfBuffers = [];\r\n\r\n    /**\r\n     * This method stops recording video.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        finished = true;\r\n\r\n        var recorder = this;\r\n\r\n        terminate(function() {\r\n            recorder.blob = new Blob(arrayOfBuffers, {\r\n                type: 'video/webm'\r\n            });\r\n\r\n            callback(recorder.blob);\r\n        });\r\n    };\r\n\r\n    // for debugging\r\n    this.name = 'WebAssemblyRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        arrayOfBuffers = [];\r\n        isPaused = false;\r\n        this.blob = null;\r\n\r\n        // todo: if recording-ON then STOP it first\r\n    };\r\n\r\n    /**\r\n     * @property {Blob} blob - The recorded blob object.\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.stop(function(){\r\n     *     var blob = recorder.blob;\r\n     * });\r\n     */\r\n    this.blob = null;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.WebAssemblyRecorder = WebAssemblyRecorder;\r\n}\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { IconButton, useToast, Spinner, Input, Button, Popover, PopoverTrigger, PopoverContent, PopoverBody, VStack, Box, Menu, MenuButton, MenuList, MenuItem, Badge, Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton } from \"@chakra-ui/react\";\nimport { ArrowBackIcon, AttachmentIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport { FaPaperPlane, FaMicrophone, FaStop } from \"react-icons/fa\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { format, isToday, isYesterday, isThisWeek, parseISO, isSameDay } from \"date-fns\";\nimport api from \"../api\";\nimport { useSocket } from \"../contexts/SocketContext\";\nimport styled from \"styled-components\";\nimport { MoreVertical } from 'lucide-react';\nimport RecordRTC from 'recordrtc';\nimport { Text as ChakraText } from \"@chakra-ui/react\";\n\nconst ChatContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #f7f7f7;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Header = styled.header`\n  background-color: #000000;\n  color: white;\n  padding: 1rem;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1;\n`;\n\nconst Avatar = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n`;\n\nconst Username = styled.span`\n  font-weight: bold;\n  margin-left: 10px;\n`;\n\nconst MessageContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst MessageBubble = styled.div`\n  max-width: 70%;\n  padding: 10px;\n  border-radius: 20px;\n  background-color: ${(props) => (props.$isSentByCurrentUser ? \"rgb(192, 132, 237)\" : \"#ffffff\")};\n  color: ${(props) => (props.$isSentByCurrentUser ? \"#ffffff\" : \"#000000\")};\n  align-self: ${(props) => (props.$isSentByCurrentUser ? \"flex-end\" : \"flex-start\")};\n  margin-bottom: 10px;\n  position: relative;\n`;\n\nconst MessageContent = styled.p`\n  margin: 0;\n  white-space: pre-wrap;\n`;\n\nconst MessageTime = styled.span`\n  font-size: 0.8em;\n  color: #666;\n  display: block;\n  text-align: right;\n  margin-top: 5px;\n`;\n\nconst InputContainer = styled.div`\n  padding: 1rem;\n  background-color: white;\n  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.05);\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledInput = styled(Input)`\n  flex: 1;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 20px;\n  margin-right: 10px;\n`;\n\nconst TypingIndicator = styled.div`\n  font-size: 0.8em;\n  color: #666;\n  padding: 5px 10px;\n  position: absolute;\n  bottom: 60px;\n  left: 20px;\n`;\n\nconst MessageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: ${(props) => (props.$isSentByCurrentUser ? \"flex-end\" : \"flex-start\")};\n  margin-bottom: 10px;\n`;\n\nconst DeletedMessageBubble = styled(MessageBubble)`\n  background-color: #f0f0f0;\n  color: #000000;\n  font-style: italic;\n`;\n\nconst EditedTag = styled.span`\n  color: #999999;\n  font-size: 0.8em;\n  margin-left: 5px;\n`;\n\nconst OptionsContainer = styled(VStack)`\n  background-color: #1a5f7a;\n  border-radius: 8px;\n  padding: 8px;\n`;\n\nconst OptionButton = styled(Button)`\n  width: 100%;\n  justify-content: flex-start;\n  color: white;\n  &.edit {\n    background-color: #f5f6ff;\n  }\n  &.delete {\n    background-color: #fb4444;\n  }\n`;\n\nconst MessageStatus = styled.div`\n  font-size: 0.7em;\n  color: #999;\n  text-align: right;\n  margin-top: 2px;\n`;\n\nconst SeenIndicator = styled.img`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  margin-left: 5px;\n`;\n\nconst DateSeparator = styled.div`\n  text-align: center;\n  margin: 10px 0;\n  color: #999;\n  font-size: 0.9em;\n`;\n\nconst VoiceMessageContainer = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: #f0f0f0;\n  border-radius: 20px;\n  padding: 5px 10px;\n`;\n\nconst VoicePreview = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: #f0f0f0;\n  border-radius: 20px;\n  padding: 10px;\n  margin-top: 10px;\n`;\n\nconst MenuOption = styled(MenuItem)`\n  color: ${props => props.color || 'inherit'};\n`;\n\nconst UnreadBadge = styled(Badge)`\n  position: absolute;\n  top: 0;\n  left: -10px;\n  background-color: red;\n  color: white;\n  border-radius: 50%;\n  padding: 4px 8px;\n  font-size: 12px;\n`;\n\nconst MAX_RECORDING_TIME = 60000;\n\nconst Chat = ({ currentUser, otherUser, isOpen, onClose }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [file, setFile] = useState(null);\n  const [isTyping, setIsTyping] = useState(false);\n  const [editingMessageId, setEditingMessageId] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [isBlockModalOpen, setIsBlockModalOpen] = useState(false);\n  const [isBlocked, setIsBlocked] = useState(false);\n  const [isBlockedBy, setIsBlockedBy] = useState(false);\n  const toast = useToast();\n  const messageContainerRef = useRef(null);\n  const inputRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const socket = useSocket();\n  const typingTimeoutRef = useRef(null);\n  const recordingTimeoutRef = useRef(null);\n  const [recorder, setRecorder] = useState(null);\n\n  const fetchMessages = useCallback(async (pageNum = 1) => {\n    if (!currentUser || !otherUser) {\n      console.error(\"Current user or other user is not defined\");\n      return;\n    }\n    try {\n      setIsLoading(true);\n      const response = await api.get(`/api/messages/${otherUser._id}`, {\n        params: { page: pageNum, limit: 15 },\n      });\n      if (response.data && Array.isArray(response.data.messages)) {\n        const { messages: newMessages, hasMore, isBlocked } = response.data;\n        setMessages((prevMessages) => {\n          const updatedMessages = Array.isArray(newMessages)\n            ? newMessages.filter(msg => msg && msg.createdAt && !isNaN(new Date(msg.createdAt).getTime()))\n            : [];\n          return pageNum === 1 ? updatedMessages : [...prevMessages, ...updatedMessages];\n        });\n        setHasMore(hasMore);\n        setPage((prevPage) => prevPage + 1);\n        setIsBlocked(isBlocked);\n      } else {\n        setMessages([]);\n        setHasMore(false);\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        console.log(\"No existing conversation found. Ready to start a new one.\");\n        setMessages([]);\n        setHasMore(false);\n      } else {\n        console.error(\"Error fetching messages:\", error);\n        toast({\n          title: \"Error\",\n          description: \"Failed to load messages. Please try again.\",\n          status: \"error\",\n          duration: 3000,\n          isClosable: true,\n        });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, [currentUser, otherUser, toast]);\n\n  const checkBlockStatus = useCallback(async () => {\n    try {\n      const response = await api.get(`/api/users/blockStatus/${otherUser._id}`);\n      const { isBlocked, isBlockedBy } = response.data;\n      setIsBlocked(isBlocked);\n      setIsBlockedBy(isBlockedBy);\n    } catch (error) {\n      console.error('Error checking block status:', error);\n    }\n  }, [otherUser._id]);\n\n  useEffect(() => {\n    checkBlockStatus();\n  }, [checkBlockStatus]);\n\n  useEffect(() => {\n    if (isOpen && currentUser && otherUser) {\n      setMessages([]);\n      setPage(1);\n      setHasMore(true);\n      fetchMessages(1);\n    }\n    setNewMessage(\"\");\n  }, [isOpen, currentUser, otherUser, fetchMessages]);\n\n  useEffect(() => {\n    if (socket) {\n      const handleNewMessage = (message) => {\n        if (message.sender._id === otherUser._id || message.sender._id === currentUser.id) {\n          setMessages(prevMessages => [...prevMessages, message]);\n          scrollToBottom();\n          if (message.sender._id === otherUser._id) {\n            setUnreadCount(prev => prev + 1);\n          }\n        }\n      };\n      const handleEditedMessage = (editedMessage) => {\n        setMessages(prevMessages => \n          prevMessages.map(msg => \n            msg._id === editedMessage._id ? editedMessage : msg\n          )\n        );\n      };\n      const handleDeletedMessage = (deletedMessage) => {\n        setMessages(prevMessages => \n          prevMessages.map(msg => \n            msg._id === deletedMessage._id ? deletedMessage : msg\n          )\n        );\n      };\n      socket.on('new message', handleNewMessage);\n      socket.on('message edited', handleEditedMessage);\n      socket.on('message deleted', handleDeletedMessage);\n      return () => {\n        socket.off('new message', handleNewMessage);\n        socket.off('message edited', handleEditedMessage);\n        socket.off('message deleted', handleDeletedMessage);\n      };\n    }\n  }, [socket, currentUser.id, otherUser._id]);\n\n  const scrollToBottom = () => {\n    if (messageContainerRef.current) {\n      messageContainerRef.current.scrollTop = messageContainerRef.current.scrollHeight;\n    }\n  };\n\n  useEffect(() => {\n    if (messages.length > 0 && socket && socket.connected) {\n      const unseenMessages = messages\n        .filter(msg => msg.recipient === currentUser.id && !msg.seen)\n        .map(msg => msg._id);\n      if (unseenMessages.length > 0) {\n        socket.emit('mark as seen', unseenMessages, (error, updatedCount) => {\n          if (error) {\n            console.error('Error marking messages as seen:', error);\n          } else {\n            console.log(`${updatedCount} messages marked as seen`);\n            setUnreadCount(0);\n          }\n        });\n      }\n    }\n  }, [messages, currentUser.id, socket]);\n\n  useEffect(() => {\n    if (socket) {\n      socket.on(\"user typing\", (userId) => {\n        if (userId === otherUser._id) {\n          setIsTyping(true);\n        }\n      });\n      socket.on(\"user stop typing\", (userId) => {\n        if (userId === otherUser._id) {\n          setIsTyping(false);\n        }\n      });\n      return () => {\n        socket.off(\"user typing\");\n        socket.off(\"user stop typing\");\n      };\n    }\n  }, [socket, otherUser._id]);\n\n  const handleSendMessage = useCallback(async () => {\n    if (isBlocked) {\n      toast({\n        title: \"Error\",\n        description: \"You cannot send messages in a blocked conversation.\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n      return;\n    }\n  \n    if (!newMessage.trim() && !file && !audioBlob) return;\n    if (!socket || !socket.connected) {\n      toast({\n        title: \"Error\",\n        description: \"Not connected to chat server. Please try again.\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n      return;\n    }\n    try {\n      let mediaUrl = null;\n      let messageType = \"text\";\n      if (file) {\n        if (file.type.startsWith(\"image/\")) {\n          const formData = new FormData();\n          formData.append(\"file\", file);\n          const response = await api.post(\"/api/messages/upload\", formData);\n          mediaUrl = response.data.url;\n          messageType = \"image\";\n        } else {\n          toast({\n            title: \"Error\",\n            description: \"Only photos are allowed.\",\n            status: \"error\",\n            duration: 3000,\n            isClosable: true,\n          });\n          return;\n        }\n      } else if (audioBlob) {\n        const formData = new FormData();\n        formData.append(\"file\", audioBlob, \"voice_message.webm\");\n        const response = await api.post(\"/api/messages/upload\", formData);\n        mediaUrl = response.data.url;\n        messageType = \"voice\";\n      }\n      const messageData = {\n        sender: currentUser.id,\n        recipient: otherUser._id,\n        content: newMessage.trim(),\n        media: mediaUrl,\n        type: messageType,\n      };\n      socket.emit(\"private message\", messageData, (error, sentMessage) => {\n        if (error) {\n          console.error(\"Error sending message:\", error);\n          toast({\n            title: \"Error\",\n            description: error.message || \"Failed to send message. Please try again.\",\n            status: \"error\",\n            duration: 3000,\n            isClosable: true,\n          });\n        } else {\n          setMessages((prevMessages) => [...prevMessages, sentMessage]);\n          setNewMessage(\"\");\n          setFile(null);\n          setAudioBlob(null);\n          setAudioUrl(null);\n          scrollToBottom();\n        }\n      });\n    } catch (error) {\n      console.error(\"Error handling message:\", error);\n      toast({\n        title: \"Error\",\n        description: \"An unexpected error occurred. Please try again.\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  }, [isBlocked, newMessage, file, audioBlob, otherUser._id, currentUser.id, socket, toast, scrollToBottom]);\n\n  const handleInputChange = (e) => {\n    setNewMessage(e.target.value);\n    if (socket && socket.connected) {\n      socket.emit(\"typing\", { recipientId: otherUser._id });\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      typingTimeoutRef.current = setTimeout(() => {\n        socket.emit(\"stop typing\", { recipientId: otherUser._id });\n      }, 3000);\n    }\n  };\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const handleDeleteMessage = async (messageId) => {\n    try {\n      if (!socket || !socket.connected) {\n        throw new Error(\"Socket connection not established\");\n      }\n      socket.emit(\"delete message\", messageId, (error, deletedMessage) => {\n        if (error) {\n          console.error(\"Error deleting message:\", error);\n          toast({\n            title: \"Error\",\n            description: \"Failed to unsend message. Please try again.\",\n            status: \"error\",\n            duration: 3000,\n            isClosable: true,\n          });\n        } else {\n          setMessages((prevMessages) =>\n            prevMessages.map((msg) =>\n              msg._id === deletedMessage._id ? deletedMessage : msg\n            )\n          );\n          toast({\n            title: \"Message unsent\",\n            status: \"success\",\n            duration: 3000,\n            isClosable: true,\n          });\n        }\n      });\n    } catch (error) {\n      console.error(\"Error deleting message:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to unsend message. Please try again.\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  const handleEditMessage = (messageId, content) => {\n    setEditingMessageId(messageId);\n    setNewMessage(content);\n    inputRef.current.focus();\n  };\n\n  const formatMessageTime = useCallback((timestamp) => {\n    if (!timestamp) {\n      console.warn(\"Empty timestamp provided to formatMessageTime\");\n      return '';\n    }\n    try {\n      const messageDate = parseISO(timestamp);\n      if (isNaN(messageDate.getTime())) {\n        console.warn('Invalid date:', timestamp);\n        return '';\n      }\n      if (isToday(messageDate)) {\n        return format(messageDate, \"h:mm a\");\n      } else if (isYesterday(messageDate)) {\n        return `Yesterday ${format(messageDate, \"h:mm a\")}`;\n      } else if (isThisWeek(messageDate)) {\n        return format(messageDate, \"EEEE h:mm a\");\n      } else {\n        return format(messageDate, \"dd.MM.yyyy h:mm a\");\n      }\n    } catch (error) {\n      console.error('Error formatting message time:', error);\n      return '';\n    }\n  }, []);\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const newRecorder = RecordRTC(stream, {\n        type: 'audio',\n        mimeType: 'audio/webm',\n        sampleRate: 44100,\n        desiredSampRate: 16000,\n        recorderType: RecordRTC.StereoAudioRecorder,\n        numberOfAudioChannels: 1\n      });\n      newRecorder.startRecording();\n      setRecorder(newRecorder);\n      setIsRecording(true);\n      recordingTimeoutRef.current = setTimeout(() => {\n        if (isRecording) {\n          stopRecording();\n        }\n      }, MAX_RECORDING_TIME);\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to start recording. Please check your microphone permissions.\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  const stopRecording = () => {\n    if (recorder) {\n      recorder.stopRecording(() => {\n        const blob = recorder.getBlob();\n        setAudioBlob(blob);\n        setAudioUrl(URL.createObjectURL(blob));\n        setIsRecording(false);\n      });\n    }\n    if (recordingTimeoutRef.current) {\n      clearTimeout(recordingTimeoutRef.current);\n    }\n  };\n\n  const cancelRecording = () => {\n    setAudioBlob(null);\n    setAudioUrl(null);\n  };\n\n  const sendVoiceMessage = async () => {\n    if (!audioBlob) return;\n\n    try {\n      const formData = new FormData();\n      formData.append(\"audio\", audioBlob, \"voice_message.webm\");\n      formData.append(\"recipient\", otherUser._id);\n\n      const response = await api.post(\"/api/messages/voice\", formData, {\n        headers: { \n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      const sentMessage = response.data;\n      setMessages((prevMessages) => [...prevMessages, sentMessage]);\n      setAudioBlob(null);\n      setAudioUrl(null);\n      scrollToBottom();\n    } catch (error) {\n      console.error(\"Error sending voice message:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to send voice message. Please try again.\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  const handleDeleteConversation = async () => {\n    try {\n      const conversationResponse = await api.get(`/api/messages/conversations`);\n      const conversations = conversationResponse.data;\n      const conversation = conversations.find(conv => \n        conv.participants.some(p => p._id === otherUser._id)\n      );\n\n      if (!conversation) {\n        throw new Error(\"Conversation not found\");\n      }\n\n      await api.delete(`/api/messages/conversations/${conversation._id}`);\n\n      toast({\n        title: \"Conversation deleted\",\n        description: \"The conversation has been successfully deleted.\",\n        status: \"success\",\n        duration: 3000,\n        isClosable: true,\n      });\n\n      onClose();\n    } catch (error) {\n      console.error('Error deleting conversation:', error);\n      toast({\n        title: \"Error\",\n        description: error.response?.data?.message || \"Failed to delete conversation. Please try again.\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  };\n\n  const handleBlockUser = async () => {\n    setIsBlockModalOpen(true);\n  };\n\n  const confirmBlockUser = async () => {\n    try {\n      await api.post(`/api/users/block/${otherUser._id}`);\n      toast({\n        title: \"User blocked\",\n        description: `${otherUser.username} has been blocked successfully.`,\n        status: \"success\",\n        duration: 3000,\n        isClosable: true,\n      });\n      setIsBlockModalOpen(false);\n      onClose();\n    } catch (error) {\n      console.error('Error blocking user:', error);\n      toast({\n        title: \"Error\",\n        description: error.response?.data?.message || \"Failed to block user. Please try again.\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  const handleReportConversation = async () => {\n    try {\n      await api.post(`/api/reports/create`, {\n        reportedUserId: otherUser._id,\n        conversationId: messages[0]?.conversationId,\n        reason: \"Inappropriate content\",\n      });\n      toast({\n        title: \"Conversation reported\",\n        status: \"success\",\n        duration: 3000,\n        isClosable: true,\n      });\n    } catch (error) {\n      console.error('Error reporting conversation:', error);\n      toast({\n        title: \"Error\",\n        description: error.response?.data?.message || \"Failed to report conversation. Please try again.\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  \n\n  const renderMessages = () => {\n    let lastDate = null;\n    return messages.slice().reverse().map((msg, index) => {\n      if (!msg || !msg.createdAt) {\n        console.warn(\"Invalid message or missing createdAt:\", msg);\n        return null;\n      }\n      let currentDate;\n      try {\n        currentDate = parseISO(msg.createdAt);\n        if (isNaN(currentDate.getTime())) {\n          console.warn(\"Invalid date:\", msg.createdAt);\n          return null;\n        }\n      } catch (error) {\n        console.error(\"Error parsing date:\", error);\n        return null;\n      }\n      const showDateSeparator = !lastDate || !isSameDay(currentDate, lastDate);\n      lastDate = currentDate;\n      const isSentByCurrentUser = msg.sender._id === currentUser.id;\n      return (\n        <React.Fragment key={`${msg._id}-${index}`}>\n          {showDateSeparator && (\n            <DateSeparator>\n              {format(currentDate, 'MMMM d, yyyy')}\n            </DateSeparator>\n          )}\n          <MessageWrapper $isSentByCurrentUser={isSentByCurrentUser}>\n            {msg.deleted ? (\n              <DeletedMessageBubble>\n                <MessageContent>This message was unsent.</MessageContent>\n                <MessageTime>\n                  {msg.createdAt ? formatMessageTime(msg.createdAt) : ''}\n                </MessageTime>\n              </DeletedMessageBubble>\n            ) : (\n              <Popover placement=\"top\" trigger=\"click\">\n                <PopoverTrigger>\n                  <MessageBubble $isSentByCurrentUser={isSentByCurrentUser}>\n                    {msg.type === \"image\" && (\n                      <img\n                        src={msg.media}\n                        alt=\"Uploaded media\"\n                        style={{\n                          maxWidth: \"100%\",\n                          marginBottom: \"10px\",\n                          borderRadius: \"10px\",\n                        }}\n                      />\n                    )}\n                    {msg.type === \"voice\" && (\n                      <VoiceMessageContainer>\n                        <audio controls src={msg.media} />\n                      </VoiceMessageContainer>\n                    )}\n                    <MessageContent>{msg.content}</MessageContent>\n                    {msg.edited && <EditedTag>edited</EditedTag>}\n                    <MessageTime>{msg.createdAt ? formatMessageTime(msg.createdAt) : ''}</MessageTime>\n                    <MessageStatus>\n                      {isSentByCurrentUser && (msg.seen ? \"Seen\" : \"Sent\")}\n                      {msg.seen && isSentByCurrentUser && (\n                        <SeenIndicator src={otherUser.photo} alt={otherUser.username} />\n                      )}\n                    </MessageStatus>\n                  </MessageBubble>\n                </PopoverTrigger>\n                {isSentByCurrentUser && (\n                  <PopoverContent>\n                    <PopoverBody>\n                      <OptionsContainer>\n                        {msg.type !== \"voice\" && (\n                          <OptionButton className=\"edit\" onClick={() => handleEditMessage(msg._id, msg.content)}>\n                            Edit\n                          </OptionButton>\n                        )}\n                        <OptionButton className=\"delete\" onClick={() => handleDeleteMessage(msg._id)}>\n                          Delete\n                        </OptionButton>\n                      </OptionsContainer>\n                    </PopoverBody>\n                  </PopoverContent>\n                )}\n              </Popover>\n            )}\n          </MessageWrapper>\n        </React.Fragment>\n      );\n    }).filter(Boolean);\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <ChatContainer>\n      <Header>\n        <UserInfo>\n          <IconButton\n            icon={<ArrowBackIcon />}\n            aria-label=\"Back\"\n            onClick={onClose}\n            variant=\"ghost\"\n            colorScheme=\"whiteAlpha\"\n          />\n          <Avatar src={otherUser.photo} alt={otherUser.username} />\n          <Username>{otherUser.username}</Username>\n          {unreadCount > 0 && <UnreadBadge>{unreadCount}</UnreadBadge>}\n        </UserInfo>\n        <Menu>\n          <MenuButton\n            as={IconButton}\n            aria-label=\"Options\"\n            icon={<MoreVertical />}\n            variant=\"ghost\"\n            colorScheme=\"whiteAlpha\"\n          />\n          <MenuList>\n            <MenuOption onClick={handleDeleteConversation} color=\"red.500\">Delete Conversation</MenuOption>\n            <MenuOption onClick={handleBlockUser} color=\"orange.500\">Block User</MenuOption>\n            <MenuOption onClick={handleReportConversation} color=\"yellow.500\">Report Conversation</MenuOption>\n          </MenuList>\n        </Menu>\n      </Header>\n      <MessageContainer ref={messageContainerRef} id=\"scrollableDiv\">\n        <InfiniteScroll\n          dataLength={messages.length}\n          next={() => fetchMessages(page)}\n          hasMore={hasMore}\n          loader={<Spinner />}\n          scrollableTarget=\"scrollableDiv\"\n          inverse={true}\n          style={{ display: \"flex\", flexDirection: \"column-reverse\" }}\n        >\n          {renderMessages()}\n        </InfiniteScroll>\n        {isTyping && <TypingIndicator>Typing...</TypingIndicator>}\n      </MessageContainer>\n      <InputContainer>\n  {isBlocked ? (\n    <Box\n      width=\"100%\"\n      textAlign=\"center\"\n      py={4}\n      bg=\"gray.100\"\n      borderRadius=\"md\"\n    >\n      <ChakraText fontWeight=\"bold\">\n        {isBlocked ? \"This conversation is blocked.\" : \"The user has blocked you.\"} You can't send new messages.\n      </ChakraText>\n    </Box>\n  ) : (\n    <>\n      {audioUrl ? (\n        <VoicePreview>\n          <audio controls src={audioUrl} />\n          <IconButton\n            icon={<CloseIcon />}\n            onClick={cancelRecording}\n            variant=\"ghost\"\n            aria-label=\"Cancel recording\"\n          />\n          <IconButton\n            icon={<FaPaperPlane />}\n            onClick={sendVoiceMessage}\n            colorScheme=\"blue\"\n            aria-label=\"Send voice message\"\n          />\n        </VoicePreview>\n      ) : (\n        <>\n          <StyledInput\n            placeholder={editingMessageId ? \"Edit message...\" : \"Type a message...\"}\n            value={newMessage}\n            onChange={handleInputChange}\n            onKeyDown={handleKeyDown}\n            ref={inputRef}\n          />\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            style={{ display: \"none\" }}\n            ref={fileInputRef}\n            onChange={handleFileChange}\n          />\n          <IconButton\n            icon={<AttachmentIcon />}\n            onClick={() => fileInputRef.current.click()}\n            variant=\"ghost\"\n            aria-label=\"Attach file\"\n          />\n          <IconButton\n            icon={isRecording ? <FaStop /> : <FaMicrophone />}\n            onClick={isRecording ? stopRecording : startRecording}\n            variant=\"ghost\"\n            aria-label={isRecording ? \"Stop recording\" : \"Start recording\"}\n            colorScheme={isRecording ? \"red\" : \"gray\"}\n          />\n          <IconButton\n            icon={<FaPaperPlane />}\n            colorScheme=\"purple\"\n            onClick={handleSendMessage}\n            aria-label=\"Send message\"\n          />\n        </>\n      )}\n    </>\n  )}\n</InputContainer>\n      <Modal isOpen={isBlockModalOpen} onClose={() => setIsBlockModalOpen(false)}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Block User</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            Are you sure you want to block {otherUser.username} forever? This action cannot be undone.\n          </ModalBody>\n          <ModalFooter>\n            <Button colorScheme=\"red\" mr={3} onClick={confirmBlockUser}>\n              Yes, Block User\n            </Button>\n            <Button variant=\"ghost\" onClick={() => setIsBlockModalOpen(false)}>\n              No, Cancel\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </ChatContainer>\n  );\n};\n\nexport default Chat;"],"names":["CloseIcon","createIcon","AttachmentIcon","ArrowBackIcon","extendStatics","d","b","p","__extends","__","__assign","t","s","i","n","throttle","delay","noTrailing","callback","debounceMode","timeoutID","cancelled","lastExec","clearExistingTimeout","cancel","wrapper","self","elapsed","args","exec","clear","ThresholdUnits","defaultThreshold","parseThreshold","scrollThreshold","InfiniteScroll","_super","props","_this","evt","event","target","atBottom","prevProps","nextProps","prevState","dataLengthChanged","clientHeight","threshold","style","hasChildren","outerDivStyle","React","infScroll","pullDown","Component","toKebabCase","string","mergeClasses","classes","className","index","array","defaultAttributes","Icon","forwardRef","color","size","strokeWidth","absoluteStrokeWidth","children","iconNode","rest","ref","createElement","tag","attrs","createLucideIcon","iconName","EllipsisVertical","RecordRTC","mediaStream","config","RecordRTCConfiguration","startRecording","config2","mediaRecorder","setState","handleRecordingDuration","initRecorder","initCallback","Recorder","GetRecorderType","stopRecording","warningLog","_callback","__blob","key","blob","bytesToSize","url","URL","getDataURL","dataURL","parameter","DiskStorage","pauseRecording","resumeRecording","readFile","_blob","_mediaRecorder","webWorker","processInWebWorker","reader","_function","worker","counter","state","WARNING","returnObject","recordingDuration","fileName","invokeSaveAsDialog","arrayOfWebPImages","length","disableLogsCache","Storage","prop","module","type","_type","options","audioDataURL","videoDataURL","gifDataURL","WhammyRecorder","CanvasRecorder","WebAssemblyRecorder","GifRecorder","StereoAudioRecorder","MediaStreamRecorder","getTracks","recorder","isChrome","isEdge","isOpera","isMediaRecorderCompatible","MultiStreamRecorder","isSafari","MRecordRTC","_mediaStream","mediaType","recorderType","mimeType","newStream","videoTrack","isFirefox","MediaStream","isSingleRecorder","blobURL","output","_audioDataURL","_videoDataURL","callback00","browserFakeUserAgent","that","global","obj","requestAnimationFrame","lastTime","element","currTime","timeToCall","id","cancelAnimationFrame","AudioContext","isElectron","track","bytes","k","sizes","file","fileExtension","splitted","fileFullName","hyperlink","stream","kind","setSrcObject","getSeekableBlob","inputBlob","decoder","tools","fileReader","e","ebmlElms","refinedMetadataBuf","body","newBlob","nAgt","fullVersion","majorVersion","verOffset","ix","arrayOfBlobs","allStates","recorderHints","updateTimeStamp","getMimeType","error","looper","secondObject","clearRecordedDataCB","isMediaStreamActive","leftchannel","rightchannel","recording","recordingLength","jsAudioNode","numberOfAudioChannels","desiredSampRate","resetVariables","isAudioProcessStarted","isPaused","mergeLeftRightBuffers","mergeAudioBuffers","cb","leftBuffers","rightBuffers","sampleRate","internalInterleavedLength","mergeBuffers","interpolateArray","data","newSampleRate","oldSampleRate","fitCount","newData","springFactor","tmp","before","after","atPoint","linearInterpolate","channelBuffer","rLength","result","offset","lng","buffer","interleave","leftChannel","rightChannel","inputIndex","writeUTFBytes","view","interleaved","interleavedLength","resultingBufferLength","volume","workerURL","bufferSize","context","audioInput","legalBufferValues","intervalsBasedBuffers","onAudioProcessDataAvailable","left","chLeft","right","chRight","htmlElement","isCanvasSupportsStreamCapturing","item","_isChrome","chromeVersion","matchArray","globalCanvas","mediaStreamRecorder","isRecording","canvasMediaStream","mdStream","whammy","drawCanvasFrame","framesLength","frame","idx","framesRemaining","webp","isPausedRecording","cloneCanvas","newCanvas","duration","canvas","Whammy","video","drawFrames","frameInterval","isStopDrawing","asyncLoop","o","loop","dropBlackFrames","_frames","_framesToCheck","_pixTolerance","_frameTolerance","localCanvas","context2d","resultFrames","endCheckFrame","sampleColor","maxColorDifference","pixTolerance","frameTolerance","doNotCheckNext","f","matchPixCount","endPixCheck","maxPixCount","finishImage","image","imageData","pix","currentColor","colorDifference","frames","WhammyVideo","whammyInWebWorker","ArrayToWebM","info","checkFrames","clusterMaxDuration","EBML","doubleToString","frameNumber","clusterTimecode","clusterFrames","clusterDuration","clusterCounter","cluster","getClusterData","generateEBML","block","makeSimpleBlock","width","height","numToBuffer","num","parts","strToBuffer","str","bitsToBuffer","bits","pad","json","ebml","len","zeroes","sizeToString","padded","flags","out","parseWebP","riff","VP8","frameStart","getStrLength","unpadded","parseRIFF","chunks","webm","dbVersion","dbName","db","request","createObjectStore","dataBase","putInDB","transaction","getFromStore","portionName","setVersion","script","isHTMLObject","isLoadedMetaData","gifEncoder","drawVideoFrame","time","lastAnimationFrame","lastFrameTime","MultiStreamsMixer","arrayOfMediaStreams","elementClass","videos","isStopDrawingFrames","drawVideosToCanvas","videosLength","fullcanvas","remaining","drawImage","x","y","getMixedStream","mixedVideoStream","getMixedVideoStream","mixedAudioStream","getMixedAudioStream","resetVideoStreams","capturedStream","videoStream","audioTracksLength","audioSource","getVideo","streams","source","mixer","getAllVideoTracks","tracks","RecordRTCPromisesHandler","resolve","reject","finished","cameraStream","controller","cvs","first","ctx","frameTimeout","cameraTimer","r","arrayOfBuffers","terminate","ChatContainer","styled","Header","UserInfo","Avatar","Username","MessageContainer","MessageBubble","MessageContent","MessageTime","InputContainer","StyledInput","Input","TypingIndicator","MessageWrapper","DeletedMessageBubble","EditedTag","OptionsContainer","VStack","OptionButton","Button","MessageStatus","SeenIndicator","DateSeparator","VoiceMessageContainer","VoicePreview","MenuOption","MenuItem","UnreadBadge","Badge","MAX_RECORDING_TIME","Chat","currentUser","otherUser","isOpen","onClose","messages","setMessages","useState","newMessage","setNewMessage","isLoading","setIsLoading","page","setPage","hasMore","setHasMore","setFile","isTyping","setIsTyping","editingMessageId","setEditingMessageId","setIsRecording","audioBlob","setAudioBlob","audioUrl","setAudioUrl","unreadCount","setUnreadCount","isBlockModalOpen","setIsBlockModalOpen","isBlocked","setIsBlocked","isBlockedBy","setIsBlockedBy","toast","useToast","messageContainerRef","useRef","inputRef","fileInputRef","socket","useSocket","typingTimeoutRef","recordingTimeoutRef","setRecorder","fetchMessages","useCallback","pageNum","response","api","newMessages","prevMessages","updatedMessages","msg","prevPage","checkBlockStatus","useEffect","handleNewMessage","message","scrollToBottom","prev","handleEditedMessage","editedMessage","handleDeletedMessage","deletedMessage","unseenMessages","updatedCount","userId","handleSendMessage","mediaUrl","messageType","formData","messageData","sentMessage","handleInputChange","handleFileChange","handleKeyDown","handleDeleteMessage","messageId","handleEditMessage","content","formatMessageTime","timestamp","messageDate","parseISO","isToday","format","isYesterday","isThisWeek","newRecorder","cancelRecording","sendVoiceMessage","handleDeleteConversation","conversation","conv","_b","_a","handleBlockUser","confirmBlockUser","handleReportConversation","_c","renderMessages","lastDate","currentDate","showDateSeparator","isSameDay","isSentByCurrentUser","jsxs","jsx","Popover","PopoverTrigger","PopoverContent","PopoverBody","IconButton","Menu","MenuButton","MoreVertical","MenuList","Spinner","Box","ChakraText","Fragment","FaPaperPlane","FaStop","FaMicrophone","Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","ModalFooter"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}