import{r as $e,u as mt,j as x,s as Te,M as gt,t as vt,v as bt,S as yt,B as wt,T as Rt,w as xt,x as St,y as Ct,z as Tt,D as kt,E as Lt,G as Mt,a as Ye,J as At,K as Dt,L as Bt,N as Et,d as jt,V as Ft,O as It,p as Ut}from"./ui-NZYliEti.js";import{b as Ee,r as U,c as W,g as Pt}from"./vendor-_1ZOfwzY.js";import{d as V,u as Ot,f as ge,g as Ze,h as Nt,i as _t}from"./index-B-zzZdsT.js";import{p as Qe,i as zt,f as Be,b as Wt,c as Vt,d as Gt}from"./utils-VUVtOQ0U.js";var Ht=$e({displayName:"CloseIcon",d:"M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"}),Yt=$e({displayName:"AttachmentIcon",d:"M21.843,3.455a6.961,6.961,0,0,0-9.846,0L1.619,13.832a5.128,5.128,0,0,0,7.252,7.252L17.3,12.653A3.293,3.293,0,1,0,12.646,8L7.457,13.184A1,1,0,1,0,8.871,14.6L14.06,9.409a1.294,1.294,0,0,1,1.829,1.83L7.457,19.67a3.128,3.128,0,0,1-4.424-4.424L13.411,4.869a4.962,4.962,0,1,1,7.018,7.018L12.646,19.67a1,1,0,1,0,1.414,1.414L21.843,13.3a6.96,6.96,0,0,0,0-9.846Z"}),qt=$e({d:"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z",displayName:"ArrowBackIcon"});/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */var qe=function(L,l){return qe=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(T,a){T.__proto__=a}||function(T,a){for(var B in a)a.hasOwnProperty(B)&&(T[B]=a[B])},qe(L,l)};function $t(L,l){qe(L,l);function T(){this.constructor=L}L.prototype=l===null?Object.create(l):(T.prototype=l.prototype,new T)}var je=function(){return je=Object.assign||function(l){for(var T,a=1,B=arguments.length;a<B;a++){T=arguments[a];for(var E in T)Object.prototype.hasOwnProperty.call(T,E)&&(l[E]=T[E])}return l},je.apply(this,arguments)};function Kt(L,l,T,a){var B,E=!1,z=0;function te(){B&&clearTimeout(B)}function re(){te(),E=!0}typeof l!="boolean"&&(a=T,T=l,l=void 0);function X(){var G=this,he=Date.now()-z,ve=arguments;if(E)return;function se(){z=Date.now(),T.apply(G,ve)}function K(){B=void 0}a&&!B&&se(),te(),a===void 0&&he>L?se():l!==!0&&(B=setTimeout(a?K:se,a===void 0?L-he:L))}return X.cancel=re,X}var Me={Pixel:"Pixel",Percent:"Percent"},Xe={unit:Me.Percent,value:.8};function et(L){return typeof L=="number"?{unit:Me.Percent,value:L*100}:typeof L=="string"?L.match(/^(\d*(\.\d+)?)px$/)?{unit:Me.Pixel,value:parseFloat(L)}:L.match(/^(\d*(\.\d+)?)%$/)?{unit:Me.Percent,value:parseFloat(L)}:(console.warn('scrollThreshold format is invalid. Valid formats: "120px", "50%"...'),Xe):(console.warn("scrollThreshold should be string or number"),Xe)}var Jt=function(L){$t(l,L);function l(T){var a=L.call(this,T)||this;return a.lastScrollTop=0,a.actionTriggered=!1,a.startY=0,a.currentY=0,a.dragging=!1,a.maxPullDownDistance=0,a.getScrollableTarget=function(){return a.props.scrollableTarget instanceof HTMLElement?a.props.scrollableTarget:typeof a.props.scrollableTarget=="string"?document.getElementById(a.props.scrollableTarget):(a.props.scrollableTarget===null&&console.warn(`You are trying to pass scrollableTarget but it is null. This might
        happen because the element may not have been added to DOM yet.
        See https://github.com/ankeetmaini/react-infinite-scroll-component/issues/59 for more info.
      `),null)},a.onStart=function(B){a.lastScrollTop||(a.dragging=!0,B instanceof MouseEvent?a.startY=B.pageY:B instanceof TouchEvent&&(a.startY=B.touches[0].pageY),a.currentY=a.startY,a._infScroll&&(a._infScroll.style.willChange="transform",a._infScroll.style.transition="transform 0.2s cubic-bezier(0,0,0.31,1)"))},a.onMove=function(B){a.dragging&&(B instanceof MouseEvent?a.currentY=B.pageY:B instanceof TouchEvent&&(a.currentY=B.touches[0].pageY),!(a.currentY<a.startY)&&(a.currentY-a.startY>=Number(a.props.pullDownToRefreshThreshold)&&a.setState({pullToRefreshThresholdBreached:!0}),!(a.currentY-a.startY>a.maxPullDownDistance*1.5)&&a._infScroll&&(a._infScroll.style.overflow="visible",a._infScroll.style.transform="translate3d(0px, "+(a.currentY-a.startY)+"px, 0px)")))},a.onEnd=function(){a.startY=0,a.currentY=0,a.dragging=!1,a.state.pullToRefreshThresholdBreached&&(a.props.refreshFunction&&a.props.refreshFunction(),a.setState({pullToRefreshThresholdBreached:!1})),requestAnimationFrame(function(){a._infScroll&&(a._infScroll.style.overflow="auto",a._infScroll.style.transform="none",a._infScroll.style.willChange="unset")})},a.onScrollListener=function(B){typeof a.props.onScroll=="function"&&setTimeout(function(){return a.props.onScroll&&a.props.onScroll(B)},0);var E=a.props.height||a._scrollableNode?B.target:document.documentElement.scrollTop?document.documentElement:document.body;if(!a.actionTriggered){var z=a.props.inverse?a.isElementAtTop(E,a.props.scrollThreshold):a.isElementAtBottom(E,a.props.scrollThreshold);z&&a.props.hasMore&&(a.actionTriggered=!0,a.setState({showLoader:!0}),a.props.next&&a.props.next()),a.lastScrollTop=E.scrollTop}},a.state={showLoader:!1,pullToRefreshThresholdBreached:!1,prevDataLength:T.dataLength},a.throttledOnScrollListener=Kt(150,a.onScrollListener).bind(a),a.onStart=a.onStart.bind(a),a.onMove=a.onMove.bind(a),a.onEnd=a.onEnd.bind(a),a}return l.prototype.componentDidMount=function(){if(typeof this.props.dataLength>"u")throw new Error('mandatory prop "dataLength" is missing. The prop is needed when loading more content. Check README.md for usage');if(this._scrollableNode=this.getScrollableTarget(),this.el=this.props.height?this._infScroll:this._scrollableNode||window,this.el&&this.el.addEventListener("scroll",this.throttledOnScrollListener),typeof this.props.initialScrollY=="number"&&this.el&&this.el instanceof HTMLElement&&this.el.scrollHeight>this.props.initialScrollY&&this.el.scrollTo(0,this.props.initialScrollY),this.props.pullDownToRefresh&&this.el&&(this.el.addEventListener("touchstart",this.onStart),this.el.addEventListener("touchmove",this.onMove),this.el.addEventListener("touchend",this.onEnd),this.el.addEventListener("mousedown",this.onStart),this.el.addEventListener("mousemove",this.onMove),this.el.addEventListener("mouseup",this.onEnd),this.maxPullDownDistance=this._pullDown&&this._pullDown.firstChild&&this._pullDown.firstChild.getBoundingClientRect().height||0,this.forceUpdate(),typeof this.props.refreshFunction!="function"))throw new Error(`Mandatory prop "refreshFunction" missing.
          Pull Down To Refresh functionality will not work
          as expected. Check README.md for usage'`)},l.prototype.componentWillUnmount=function(){this.el&&(this.el.removeEventListener("scroll",this.throttledOnScrollListener),this.props.pullDownToRefresh&&(this.el.removeEventListener("touchstart",this.onStart),this.el.removeEventListener("touchmove",this.onMove),this.el.removeEventListener("touchend",this.onEnd),this.el.removeEventListener("mousedown",this.onStart),this.el.removeEventListener("mousemove",this.onMove),this.el.removeEventListener("mouseup",this.onEnd)))},l.prototype.componentDidUpdate=function(T){this.props.dataLength!==T.dataLength&&(this.actionTriggered=!1,this.setState({showLoader:!1}))},l.getDerivedStateFromProps=function(T,a){var B=T.dataLength!==a.prevDataLength;return B?je(je({},a),{prevDataLength:T.dataLength}):null},l.prototype.isElementAtTop=function(T,a){a===void 0&&(a=.8);var B=T===document.body||T===document.documentElement?window.screen.availHeight:T.clientHeight,E=et(a);return E.unit===Me.Pixel?T.scrollTop<=E.value+B-T.scrollHeight+1:T.scrollTop<=E.value/100+B-T.scrollHeight+1},l.prototype.isElementAtBottom=function(T,a){a===void 0&&(a=.8);var B=T===document.body||T===document.documentElement?window.screen.availHeight:T.clientHeight,E=et(a);return E.unit===Me.Pixel?T.scrollTop+B>=T.scrollHeight-E.value:T.scrollTop+B>=E.value/100*T.scrollHeight},l.prototype.render=function(){var T=this,a=je({height:this.props.height||"auto",overflow:"auto",WebkitOverflowScrolling:"touch"},this.props.style),B=this.props.hasChildren||!!(this.props.children&&this.props.children instanceof Array&&this.props.children.length),E=this.props.pullDownToRefresh&&this.props.height?{overflow:"auto"}:{};return Ee.createElement("div",{style:E,className:"infinite-scroll-component__outerdiv"},Ee.createElement("div",{className:"infinite-scroll-component "+(this.props.className||""),ref:function(z){return T._infScroll=z},style:a},this.props.pullDownToRefresh&&Ee.createElement("div",{style:{position:"relative"},ref:function(z){return T._pullDown=z}},Ee.createElement("div",{style:{position:"absolute",left:0,right:0,top:-1*this.maxPullDownDistance}},this.state.pullToRefreshThresholdBreached?this.props.releaseToRefreshContent:this.props.pullDownToRefreshContent)),this.props.children,!this.state.showLoader&&!B&&this.props.hasMore&&this.props.loader,this.state.showLoader&&this.props.hasMore&&this.props.loader,!this.props.hasMore&&this.props.endMessage))},l}(U.Component);/**
 * @license lucide-react v0.429.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Zt=L=>L.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase(),ot=(...L)=>L.filter((l,T,a)=>!!l&&a.indexOf(l)===T).join(" ");/**
 * @license lucide-react v0.429.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */var Qt={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};/**
 * @license lucide-react v0.429.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Xt=U.forwardRef(({color:L="currentColor",size:l=24,strokeWidth:T=2,absoluteStrokeWidth:a,className:B="",children:E,iconNode:z,...te},re)=>U.createElement("svg",{ref:re,...Qt,width:l,height:l,stroke:L,strokeWidth:a?Number(T)*24/Number(l):T,className:ot("lucide",B),...te},[...z.map(([X,G])=>U.createElement(X,G)),...Array.isArray(E)?E:[E]]));/**
 * @license lucide-react v0.429.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const er=(L,l)=>{const T=U.forwardRef(({className:a,...B},E)=>U.createElement(Xt,{ref:E,iconNode:l,className:ot(`lucide-${Zt(L)}`,a),...B}));return T.displayName=`${L}`,T};/**
 * @license lucide-react v0.429.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const tr=er("EllipsisVertical",[["circle",{cx:"12",cy:"12",r:"1",key:"41hilf"}],["circle",{cx:"12",cy:"5",r:"1",key:"gxeob9"}],["circle",{cx:"12",cy:"19",r:"1",key:"lyex9k"}]]);var at={exports:{}};(function(L){/**
 * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows. 
 * @summary Record audio, video or screen inside the browser.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef RecordRTC
 * @class
 * @example
 * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {
 *     type: 'video', // audio or video or gif or canvas
 *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc
 * });
 * recorder.startRecording();
 * @see For further information:
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.
 * @param {object} config - {type:"video", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}
 */function l(r,e){if(!r)throw"First parameter is required.";e=e||{type:"video"},e=new T(r,e);var t=this;function s(o){return e.disableLogs||console.log("RecordRTC version: ",t.version),o&&(e=new T(r,o)),e.disableLogs||console.log("started recording "+e.type+" stream."),m?(m.clearRecordedData(),m.record(),S("recording"),t.recordingDuration&&p(),t):(u(function(){t.recordingDuration&&p()}),t)}function u(o){o&&(e.initCallback=function(){o(),o=e.initCallback=null});var w=new a(r,e);m=new w(r,e),m.record(),S("recording"),e.disableLogs||console.log("Initialized recorderType:",m.constructor.name,"for output-type:",e.type)}function d(o){if(o=o||function(){},!m){y();return}if(t.state==="paused"){t.resumeRecording(),setTimeout(function(){d(o)},1);return}t.state!=="recording"&&!e.disableLogs&&console.warn('Recording state should be: "recording", however current state is: ',t.state),e.disableLogs||console.log("Stopped recording "+e.type+" stream."),e.type!=="gif"?m.stop(w):(m.stop(),w()),S("stopped");function w(A){if(!m){typeof o.call=="function"?o.call(t,""):o("");return}Object.keys(m).forEach(function(C){typeof m[C]!="function"&&(t[C]=m[C])});var n=m.blob;if(!n)if(A)m.blob=n=A;else throw"Recording failed.";if(n&&!e.disableLogs&&console.log(n.type,"->",ke(n.size)),o){var c;try{c=G.createObjectURL(n)}catch{}typeof o.call=="function"?o.call(t,c):o(c)}e.autoWriteToDisk&&R(function(C){var M={};M[e.type+"Blob"]=C,Z.Store(M)})}}function h(){if(!m){y();return}if(t.state!=="recording"){e.disableLogs||console.warn("Unable to pause the recording. Recording state: ",t.state);return}S("paused"),m.pause(),e.disableLogs||console.log("Paused recording.")}function i(){if(!m){y();return}if(t.state!=="paused"){e.disableLogs||console.warn("Unable to resume the recording. Recording state: ",t.state);return}S("recording"),m.resume(),e.disableLogs||console.log("Resumed recording.")}function v(o){postMessage(new FileReaderSync().readAsDataURL(o))}function R(o,w){if(!o)throw"Pass a callback function over getDataURL.";var A=w?w.blob:(m||{}).blob;if(!A){e.disableLogs||console.warn("Blob encoder did not finish its job yet."),setTimeout(function(){R(o,w)},1e3);return}if(typeof Worker<"u"&&!navigator.mozGetUserMedia){var n=C(v);n.onmessage=function(M){o(M.data)},n.postMessage(A)}else{var c=new FileReader;c.readAsDataURL(A),c.onload=function(M){o(M.target.result)}}function C(M){try{var P=G.createObjectURL(new Blob([M.toString(),"this.onmessage =  function (eee) {"+M.name+"(eee.data);}"],{type:"application/javascript"})),F=new Worker(P);return G.revokeObjectURL(P),F}catch{}}}function p(o){if(o=o||0,t.state==="paused"){setTimeout(function(){p(o)},1e3);return}if(t.state!=="stopped"){if(o>=t.recordingDuration){d(t.onRecordingStopped);return}o+=1e3,setTimeout(function(){p(o)},1e3)}}function S(o){t&&(t.state=o,typeof t.onStateChanged.call=="function"?t.onStateChanged.call(t,o):t.onStateChanged(o))}var b='It seems that recorder is destroyed or "startRecording" is not invoked for '+e.type+" recorder.";function y(){e.disableLogs!==!0&&console.warn(b)}var m,D={startRecording:s,stopRecording:d,pauseRecording:h,resumeRecording:i,initRecorder:u,setRecordingDuration:function(o,w){if(typeof o>"u")throw"recordingDuration is required.";if(typeof o!="number")throw"recordingDuration must be a number.";return t.recordingDuration=o,t.onRecordingStopped=w||function(){},{onRecordingStopped:function(A){t.onRecordingStopped=A}}},clearRecordedData:function(){if(!m){y();return}m.clearRecordedData(),e.disableLogs||console.log("Cleared old recorded data.")},getBlob:function(){if(!m){y();return}return m.blob},getDataURL:R,toURL:function(){if(!m){y();return}return G.createObjectURL(m.blob)},getInternalRecorder:function(){return m},save:function(o){if(!m){y();return}Fe(m.blob,o)},getFromDisk:function(o){if(!m){y();return}l.getFromDisk(e.type,o)},setAdvertisementArray:function(o){e.advertisement=[];for(var w=o.length,A=0;A<w;A++)e.advertisement.push({duration:A,image:o[A]})},blob:null,bufferSize:0,sampleRate:0,buffer:null,reset:function(){t.state==="recording"&&!e.disableLogs&&console.warn("Stop an active recorder."),m&&typeof m.clearRecordedData=="function"&&m.clearRecordedData(),m=null,S("inactive"),t.blob=null},onStateChanged:function(o){e.disableLogs||console.log("Recorder state changed:",o)},state:"inactive",getState:function(){return t.state},destroy:function(){var o=e.disableLogs;e={disableLogs:!0},t.reset(),S("destroyed"),D=t=null,de.AudioContextConstructor&&(de.AudioContextConstructor.close(),de.AudioContextConstructor=null),e.disableLogs=o,e.disableLogs||console.log("RecordRTC is destroyed.")},version:"5.6.2"};if(!this)return t=D,D;for(var j in D)this[j]=D[j];return t=this,D}l.version="5.6.2",L.exports=l,l.getFromDisk=function(r,e){if(!e)throw"callback is mandatory.";console.log("Getting recorded "+(r==="all"?"blobs":r+" blob ")+" from disk!"),Z.Fetch(function(t,s){r!=="all"&&s===r+"Blob"&&e&&e(t),r==="all"&&e&&e(t,s.replace("Blob",""))})},l.writeToDisk=function(r){console.log("Writing recorded blob(s) to disk!"),r=r||{},r.audio&&r.video&&r.gif?r.audio.getDataURL(function(e){r.video.getDataURL(function(t){r.gif.getDataURL(function(s){Z.Store({audioBlob:e,videoBlob:t,gifBlob:s})})})}):r.audio&&r.video?r.audio.getDataURL(function(e){r.video.getDataURL(function(t){Z.Store({audioBlob:e,videoBlob:t})})}):r.audio&&r.gif?r.audio.getDataURL(function(e){r.gif.getDataURL(function(t){Z.Store({audioBlob:e,gifBlob:t})})}):r.video&&r.gif?r.video.getDataURL(function(e){r.gif.getDataURL(function(t){Z.Store({videoBlob:e,gifBlob:t})})}):r.audio?r.audio.getDataURL(function(e){Z.Store({audioBlob:e})}):r.video?r.video.getDataURL(function(e){Z.Store({videoBlob:e})}):r.gif&&r.gif.getDataURL(function(e){Z.Store({gifBlob:e})})};/**
 * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.
 * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid "config" object.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef RecordRTCConfiguration
 * @class
 * @example
 * var options = RecordRTCConfiguration(mediaStream, options);
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {type:"video", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}
 */function T(r,e){return!e.recorderType&&!e.type&&(e.audio&&e.video?e.type="video":e.audio&&!e.video&&(e.type="audio")),e.recorderType&&!e.type&&(e.recorderType===Le||e.recorderType===xe||typeof ce<"u"&&e.recorderType===ce?e.type="video":e.recorderType===Se?e.type="gif":e.recorderType===Re?e.type="audio":e.recorderType===$&&(_(r,"audio").length&&_(r,"video").length||!_(r,"audio").length&&_(r,"video").length?e.type="video":_(r,"audio").length&&!_(r,"video").length&&(e.type="audio"))),typeof $<"u"&&typeof MediaRecorder<"u"&&"requestData"in MediaRecorder.prototype&&(e.mimeType||(e.mimeType="video/webm"),e.type||(e.type=e.mimeType.split("/")[0]),e.bitsPerSecond),e.type||(e.mimeType&&(e.type=e.mimeType.split("/")[0]),e.type||(e.type="audio")),e}/**
 * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.
 * @summary It returns best recorder-type available for your browser.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef GetRecorderType
 * @class
 * @example
 * var RecorderType = GetRecorderType(options);
 * var recorder = new RecorderType(options);
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {type:"video", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}
 */function a(r,e){var t;return(K||he||ve)&&(t=Re),typeof MediaRecorder<"u"&&"requestData"in MediaRecorder.prototype&&!K&&(t=$),e.type==="video"&&(K||ve)&&(t=Le,typeof ce<"u"&&typeof ReadableStream<"u"&&(t=ce)),e.type==="gif"&&(t=Se),e.type==="canvas"&&(t=xe),le()&&t!==xe&&t!==Se&&typeof MediaRecorder<"u"&&"requestData"in MediaRecorder.prototype&&(_(r,"video").length||_(r,"audio").length)&&(e.type==="audio"?typeof MediaRecorder.isTypeSupported=="function"&&MediaRecorder.isTypeSupported("audio/webm")&&(t=$):typeof MediaRecorder.isTypeSupported=="function"&&MediaRecorder.isTypeSupported("video/webm")&&(t=$)),r instanceof Array&&r.length&&(t=Ue),e.recorderType&&(t=e.recorderType),!e.disableLogs&&t&&t.name&&console.log("Using recorderType:",t.name||t.constructor.name),!t&&we&&(t=$),t}/**
 * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.
 * @summary MRecordRTC stands for "Multiple-RecordRTC".
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef MRecordRTC
 * @class
 * @example
 * var recorder = new MRecordRTC();
 * recorder.addStream(MediaStream);
 * recorder.mediaType = {
 *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder
 *     video: true, // or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder
 *     gif: true    // or GifRecorder
 * };
 * // mimeType is optional and should be set only in advance cases.
 * recorder.mimeType = {
 *     audio: 'audio/wav',
 *     video: 'video/webm',
 *     gif:   'image/gif'
 * };
 * recorder.startRecording();
 * @see For further information:
 * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @requires {@link RecordRTC}
 */function B(r){this.addStream=function(e){e&&(r=e)},this.mediaType={audio:!0,video:!0},this.startRecording=function(){var e=this.mediaType,t,s=this.mimeType||{audio:null,video:null,gif:null};if(typeof e.audio!="function"&&le()&&!_(r,"audio").length&&(e.audio=!1),typeof e.video!="function"&&le()&&!_(r,"video").length&&(e.video=!1),typeof e.gif!="function"&&le()&&!_(r,"video").length&&(e.gif=!1),!e.audio&&!e.video&&!e.gif)throw"MediaStream must have either audio or video tracks.";if(e.audio&&(t=null,typeof e.audio=="function"&&(t=e.audio),this.audioRecorder=new l(r,{type:"audio",bufferSize:this.bufferSize,sampleRate:this.sampleRate,numberOfAudioChannels:this.numberOfAudioChannels||2,disableLogs:this.disableLogs,recorderType:t,mimeType:s.audio,timeSlice:this.timeSlice,onTimeStamp:this.onTimeStamp}),e.video||this.audioRecorder.startRecording()),e.video){t=null,typeof e.video=="function"&&(t=e.video);var u=r;if(le()&&e.audio&&typeof e.audio=="function"){var d=_(r,"video")[0];se?(u=new ie,u.addTrack(d),t&&t===Le&&(t=$)):(u=new ie,u.addTrack(d))}this.videoRecorder=new l(u,{type:"video",video:this.video,canvas:this.canvas,frameInterval:this.frameInterval||10,disableLogs:this.disableLogs,recorderType:t,mimeType:s.video,timeSlice:this.timeSlice,onTimeStamp:this.onTimeStamp,workerPath:this.workerPath,webAssemblyPath:this.webAssemblyPath,frameRate:this.frameRate,bitrate:this.bitrate}),e.audio||this.videoRecorder.startRecording()}if(e.audio&&e.video){var h=this,i=le()===!0;(e.audio instanceof Re&&e.video||e.audio!==!0&&e.video!==!0&&e.audio!==e.video)&&(i=!1),i===!0?(h.audioRecorder=null,h.videoRecorder.startRecording()):h.videoRecorder.initRecorder(function(){h.audioRecorder.initRecorder(function(){h.videoRecorder.startRecording(),h.audioRecorder.startRecording()})})}e.gif&&(t=null,typeof e.gif=="function"&&(t=e.gif),this.gifRecorder=new l(r,{type:"gif",frameRate:this.frameRate||200,quality:this.quality||10,disableLogs:this.disableLogs,recorderType:t,mimeType:s.gif}),this.gifRecorder.startRecording())},this.stopRecording=function(e){e=e||function(){},this.audioRecorder&&this.audioRecorder.stopRecording(function(t){e(t,"audio")}),this.videoRecorder&&this.videoRecorder.stopRecording(function(t){e(t,"video")}),this.gifRecorder&&this.gifRecorder.stopRecording(function(t){e(t,"gif")})},this.pauseRecording=function(){this.audioRecorder&&this.audioRecorder.pauseRecording(),this.videoRecorder&&this.videoRecorder.pauseRecording(),this.gifRecorder&&this.gifRecorder.pauseRecording()},this.resumeRecording=function(){this.audioRecorder&&this.audioRecorder.resumeRecording(),this.videoRecorder&&this.videoRecorder.resumeRecording(),this.gifRecorder&&this.gifRecorder.resumeRecording()},this.getBlob=function(e){var t={};return this.audioRecorder&&(t.audio=this.audioRecorder.getBlob()),this.videoRecorder&&(t.video=this.videoRecorder.getBlob()),this.gifRecorder&&(t.gif=this.gifRecorder.getBlob()),e&&e(t),t},this.destroy=function(){this.audioRecorder&&(this.audioRecorder.destroy(),this.audioRecorder=null),this.videoRecorder&&(this.videoRecorder.destroy(),this.videoRecorder=null),this.gifRecorder&&(this.gifRecorder.destroy(),this.gifRecorder=null)},this.getDataURL=function(e){this.getBlob(function(u){u.audio&&u.video?t(u.audio,function(d){t(u.video,function(h){e({audio:d,video:h})})}):u.audio?t(u.audio,function(d){e({audio:d})}):u.video&&t(u.video,function(d){e({video:d})})});function t(u,d){if(typeof Worker<"u"){var h=s(function(R){postMessage(new FileReaderSync().readAsDataURL(R))});h.onmessage=function(v){d(v.data)},h.postMessage(u)}else{var i=new FileReader;i.readAsDataURL(u),i.onload=function(v){d(v.target.result)}}}function s(u){var d=G.createObjectURL(new Blob([u.toString(),"this.onmessage =  function (eee) {"+u.name+"(eee.data);}"],{type:"application/javascript"})),h=new Worker(d),i;if(typeof G<"u")i=G;else if(typeof webkitURL<"u")i=webkitURL;else throw"Neither URL nor webkitURL detected.";return i.revokeObjectURL(d),h}},this.writeToDisk=function(){l.writeToDisk({audio:this.audioRecorder,video:this.videoRecorder,gif:this.gifRecorder})},this.save=function(e){e=e||{audio:!0,video:!0,gif:!0},e.audio&&this.audioRecorder&&this.audioRecorder.save(typeof e.audio=="string"?e.audio:""),e.video&&this.videoRecorder&&this.videoRecorder.save(typeof e.video=="string"?e.video:""),e.gif&&this.gifRecorder&&this.gifRecorder.save(typeof e.gif=="string"?e.gif:"")}}B.getFromDisk=l.getFromDisk,B.writeToDisk=l.writeToDisk,typeof l<"u"&&(l.MRecordRTC=B);var E="Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45";(function(r){r&&(typeof window<"u"||typeof W>"u"||(W.navigator={userAgent:E,getUserMedia:function(){}},W.console||(W.console={}),(typeof W.console.log>"u"||typeof W.console.error>"u")&&(W.console.error=W.console.log=W.console.log||function(){console.log(arguments)}),typeof document>"u"&&(r.document={documentElement:{appendChild:function(){return""}}},document.createElement=document.captureStream=document.mozCaptureStream=function(){var e={getContext:function(){return e},play:function(){},pause:function(){},drawImage:function(){},toDataURL:function(){return""},style:{}};return e},r.HTMLVideoElement=function(){}),typeof location>"u"&&(r.location={protocol:"file:",href:"",hash:""}),typeof screen>"u"&&(r.screen={width:0,height:0}),typeof G>"u"&&(r.URL={createObjectURL:function(){return""},revokeObjectURL:function(){return""}}),r.window=W))})(typeof W<"u"?W:null);var z=window.requestAnimationFrame;if(typeof z>"u"){if(typeof webkitRequestAnimationFrame<"u")z=webkitRequestAnimationFrame;else if(typeof mozRequestAnimationFrame<"u")z=mozRequestAnimationFrame;else if(typeof msRequestAnimationFrame<"u")z=msRequestAnimationFrame;else if(typeof z>"u"){var te=0;z=function(r,e){var t=new Date().getTime(),s=Math.max(0,16-(t-te)),u=setTimeout(function(){r(t+s)},s);return te=t+s,u}}}var re=window.cancelAnimationFrame;typeof re>"u"&&(typeof webkitCancelAnimationFrame<"u"?re=webkitCancelAnimationFrame:typeof mozCancelAnimationFrame<"u"?re=mozCancelAnimationFrame:typeof msCancelAnimationFrame<"u"?re=msCancelAnimationFrame:typeof re>"u"&&(re=function(r){clearTimeout(r)}));var X=window.AudioContext;typeof X>"u"&&(typeof webkitAudioContext<"u"&&(X=webkitAudioContext),typeof mozAudioContext<"u"&&(X=mozAudioContext));var G=window.URL;typeof G>"u"&&typeof webkitURL<"u"&&(G=webkitURL),typeof navigator<"u"&&typeof navigator.getUserMedia>"u"&&(typeof navigator.webkitGetUserMedia<"u"&&(navigator.getUserMedia=navigator.webkitGetUserMedia),typeof navigator.mozGetUserMedia<"u"&&(navigator.getUserMedia=navigator.mozGetUserMedia));var he=navigator.userAgent.indexOf("Edge")!==-1&&(!!navigator.msSaveBlob||!!navigator.msSaveOrOpenBlob),ve=!!window.opera||navigator.userAgent.indexOf("OPR/")!==-1,se=navigator.userAgent.toLowerCase().indexOf("firefox")>-1&&"netscape"in window&&/ rv:/.test(navigator.userAgent),K=!ve&&!he&&!!navigator.webkitGetUserMedia||Ie()||navigator.userAgent.toLowerCase().indexOf("chrome/")!==-1,we=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);we&&!K&&navigator.userAgent.indexOf("CriOS")!==-1&&(we=!1,K=!0);var ie=window.MediaStream;typeof ie>"u"&&typeof webkitMediaStream<"u"&&(ie=webkitMediaStream),typeof ie<"u"&&typeof ie.prototype.stop>"u"&&(ie.prototype.stop=function(){this.getTracks().forEach(function(r){r.stop()})});function ke(r){var e=1e3,t=["Bytes","KB","MB","GB","TB"];if(r===0)return"0 Bytes";var s=parseInt(Math.floor(Math.log(r)/Math.log(e)),10);return(r/Math.pow(e,s)).toPrecision(3)+" "+t[s]}function Fe(r,e){if(!r)throw"Blob object is required.";if(!r.type)try{r.type="video/webm"}catch{}var t=(r.type||"video/webm").split("/")[1];if(t.indexOf(";")!==-1&&(t=t.split(";")[0]),e&&e.indexOf(".")!==-1){var s=e.split(".");e=s[0],t=s[1]}var u=(e||Math.round(Math.random()*9999999999)+888888888)+"."+t;if(typeof navigator.msSaveOrOpenBlob<"u")return navigator.msSaveOrOpenBlob(r,u);if(typeof navigator.msSaveBlob<"u")return navigator.msSaveBlob(r,u);var d=document.createElement("a");d.href=G.createObjectURL(r),d.download=u,d.style="display:none;opacity:0;color:transparent;",(document.body||document.documentElement).appendChild(d),typeof d.click=="function"?d.click():(d.target="_blank",d.dispatchEvent(new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0}))),G.revokeObjectURL(d.href)}function Ie(){return!!(typeof window<"u"&&typeof window.process=="object"&&window.process.type==="renderer"||typeof process<"u"&&typeof process.versions=="object"&&process.versions.electron||typeof navigator=="object"&&typeof navigator.userAgent=="string"&&navigator.userAgent.indexOf("Electron")>=0)}function _(r,e){return!r||!r.getTracks?[]:r.getTracks().filter(function(t){return t.kind===(e||"audio")})}function Ae(r,e){"srcObject"in e?e.srcObject=r:"mozSrcObject"in e?e.mozSrcObject=r:e.srcObject=r}function be(r,e){if(typeof EBML>"u")throw new Error("Please link: https://www.webrtc-experiment.com/EBML.js");var t=new EBML.Reader,s=new EBML.Decoder,u=EBML.tools,d=new FileReader;d.onload=function(h){var i=s.decode(this.result);i.forEach(function(S){t.read(S)}),t.stop();var v=u.makeMetadataSeekable(t.metadatas,t.duration,t.cues),R=this.result.slice(t.metadataSize),p=new Blob([v,R],{type:"video/webm"});e(p)},d.readAsArrayBuffer(r)}typeof l<"u"&&(l.invokeSaveAsDialog=Fe,l.getTracks=_,l.getSeekableBlob=be,l.bytesToSize=ke,l.isElectron=Ie);/**
 * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. "new AudioContext".
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @example
 * Storage.AudioContext === webkitAudioContext
 * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 */var de={};typeof X<"u"?de.AudioContext=X:typeof webkitAudioContext<"u"&&(de.AudioContext=webkitAudioContext),typeof l<"u"&&(l.Storage=de);function le(){if(se||we||he)return!0;var r=navigator.userAgent,e=""+parseFloat(navigator.appVersion),t=parseInt(navigator.appVersion,10),s,u;return(K||ve)&&(s=r.indexOf("Chrome"),e=r.substring(s+7)),(u=e.indexOf(";"))!==-1&&(e=e.substring(0,u)),(u=e.indexOf(" "))!==-1&&(e=e.substring(0,u)),t=parseInt(""+e,10),isNaN(t)&&(e=""+parseFloat(navigator.appVersion),t=parseInt(navigator.appVersion,10)),t>=49}/**
 * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.
 * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://github.com/muaz-khan|Muaz Khan}
 * @typedef MediaStreamRecorder
 * @class
 * @example
 * var config = {
 *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis
 *     audioBitsPerSecond : 256 * 8 * 1024,
 *     videoBitsPerSecond : 256 * 8 * 1024,
 *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two
 *     checkForInactiveTracks: true,
 *     timeSlice: 1000, // concatenate intervals based blobs
 *     ondataavailable: function() {} // get intervals based blobs
 * }
 * var recorder = new MediaStreamRecorder(mediaStream, config);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 *
 *     // or
 *     var blob = recorder.blob;
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {disableLogs:true, initCallback: function, mimeType: "video/webm", timeSlice: 1000}
 * @throws Will throw an error if first argument "MediaStream" is missing. Also throws error if "MediaRecorder API" are not supported by the browser.
 */function $(r,e){var p=this;if(typeof r>"u")throw'First argument "MediaStream" is required.';if(typeof MediaRecorder>"u")throw"Your browser does not support the Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.";if(e=e||{mimeType:"video/webm"},e.type==="audio"){if(_(r,"video").length&&_(r,"audio").length){var t;navigator.mozGetUserMedia?(t=new ie,t.addTrack(_(r,"audio")[0])):t=new ie(_(r,"audio")),r=t}(!e.mimeType||e.mimeType.toString().toLowerCase().indexOf("audio")===-1)&&(e.mimeType=K?"audio/webm":"audio/ogg"),e.mimeType&&e.mimeType.toString().toLowerCase()!=="audio/ogg"&&navigator.mozGetUserMedia&&(e.mimeType="audio/ogg")}var s=[];this.getArrayOfBlobs=function(){return s},this.record=function(){p.blob=null,p.clearRecordedData(),p.timestamps=[],R=[],s=[];var S=e;e.disableLogs||console.log("Passing following config over MediaRecorder API.",S),i&&(i=null),K&&!le()&&(S="video/vp8"),typeof MediaRecorder.isTypeSupported=="function"&&S.mimeType&&(MediaRecorder.isTypeSupported(S.mimeType)||(e.disableLogs||console.warn("MediaRecorder API seems unable to record mimeType:",S.mimeType),S.mimeType=e.type==="audio"?"audio/webm":"video/webm"));try{i=new MediaRecorder(r,S),e.mimeType=S.mimeType}catch{i=new MediaRecorder(r)}S.mimeType&&!MediaRecorder.isTypeSupported&&"canRecordMimeType"in i&&i.canRecordMimeType(S.mimeType)===!1&&(e.disableLogs||console.warn("MediaRecorder API seems unable to record mimeType:",S.mimeType)),i.ondataavailable=function(b){if(b.data&&R.push("ondataavailable: "+ke(b.data.size)),typeof e.timeSlice=="number"){if(b.data&&b.data.size&&(s.push(b.data),u(),typeof e.ondataavailable=="function")){var y=e.getNativeBlob?b.data:new Blob([b.data],{type:d(S)});e.ondataavailable(y)}return}if(!b.data||!b.data.size||b.data.size<100||p.blob){p.recordingCallback&&(p.recordingCallback(new Blob([],{type:d(S)})),p.recordingCallback=null);return}p.blob=e.getNativeBlob?b.data:new Blob([b.data],{type:d(S)}),p.recordingCallback&&(p.recordingCallback(p.blob),p.recordingCallback=null)},i.onstart=function(){R.push("started")},i.onpause=function(){R.push("paused")},i.onresume=function(){R.push("resumed")},i.onstop=function(){R.push("stopped")},i.onerror=function(b){b&&(b.name||(b.name="UnknownError"),R.push("error: "+b),e.disableLogs||(b.name.toString().toLowerCase().indexOf("invalidstate")!==-1?console.error("The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.",b):b.name.toString().toLowerCase().indexOf("notsupported")!==-1?console.error("MIME type (",S.mimeType,") is not supported.",b):b.name.toString().toLowerCase().indexOf("security")!==-1?console.error("MediaRecorder security error",b):b.name==="OutOfMemory"?console.error("The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.",b):b.name==="IllegalStreamModification"?console.error("A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.",b):b.name==="OtherRecordingError"?console.error("Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.",b):b.name==="GenericError"?console.error("The UA cannot provide the codec or recording option that has been requested.",b):console.error("MediaRecorder Error",b)),function(y){if(!p.manuallyStopped&&i&&i.state==="inactive"){delete e.timeslice,i.start(10*60*1e3);return}setTimeout(y,1e3)}(),i.state!=="inactive"&&i.state!=="stopped"&&i.stop())},typeof e.timeSlice=="number"?(u(),i.start(e.timeSlice)):i.start(36e5),e.initCallback&&e.initCallback()},this.timestamps=[];function u(){p.timestamps.push(new Date().getTime()),typeof e.onTimeStamp=="function"&&e.onTimeStamp(p.timestamps[p.timestamps.length-1],p.timestamps)}function d(S){return i&&i.mimeType?i.mimeType:S.mimeType||"video/webm"}this.stop=function(S){S=S||function(){},p.manuallyStopped=!0,i&&(this.recordingCallback=S,i.state==="recording"&&i.stop(),typeof e.timeSlice=="number"&&setTimeout(function(){p.blob=new Blob(s,{type:d(e)}),p.recordingCallback(p.blob)},100))},this.pause=function(){i&&i.state==="recording"&&i.pause()},this.resume=function(){i&&i.state==="paused"&&i.resume()},this.clearRecordedData=function(){i&&i.state==="recording"&&p.stop(h),h()};function h(){s=[],i=null,p.timestamps=[]}var i;this.getInternalRecorder=function(){return i};function v(){if("active"in r){if(!r.active)return!1}else if("ended"in r&&r.ended)return!1;return!0}this.blob=null,this.getState=function(){return i&&i.state||"inactive"};var R=[];this.getAllStates=function(){return R},typeof e.checkForInactiveTracks>"u"&&(e.checkForInactiveTracks=!1);var p=this;(function S(){if(!(!i||e.checkForInactiveTracks===!1)){if(v()===!1){e.disableLogs||console.log("MediaStream seems stopped."),p.stop();return}setTimeout(S,1e3)}})(),this.name="MediaStreamRecorder",this.toString=function(){return this.name}}typeof l<"u"&&(l.MediaStreamRecorder=$);/**
 * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring "stereo" audio-recording in chrome.
 * @summary JavaScript standalone object for stereo audio recording.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef StereoAudioRecorder
 * @class
 * @example
 * var recorder = new StereoAudioRecorder(MediaStream, {
 *     sampleRate: 44100,
 *     bufferSize: 4096
 * });
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}
 */function Re(r,e){if(!_(r,"audio").length)throw"Your stream has no audio tracks.";e=e||{};var t=this,s=[],u=[],d=!1,h=0,i,v=2,R=e.desiredSampRate;e.leftChannel===!0&&(v=1),e.numberOfAudioChannels===1&&(v=1),(!v||v<1)&&(v=2),e.disableLogs||console.log("StereoAudioRecorder is set to record number of channels: "+v),typeof e.checkForInactiveTracks>"u"&&(e.checkForInactiveTracks=!0);function p(){if(e.checkForInactiveTracks===!1)return!0;if("active"in r){if(!r.active)return!1}else if("ended"in r&&r.ended)return!1;return!0}this.record=function(){if(p()===!1)throw"Please make sure MediaStream is active.";A(),c=w=!1,d=!0,typeof e.timeSlice<"u"&&P()};function S(F,g){function f(k,N){var O=k.numberOfAudioChannels,Y=k.leftBuffers.slice(0),ee=k.rightBuffers.slice(0),ne=k.sampleRate,pe=k.internalInterleavedLength,ue=k.desiredSampRate;O===2&&(Y=ze(Y,pe),ee=ze(ee,pe),ue&&(Y=De(Y,ue,ne),ee=De(ee,ue,ne))),O===1&&(Y=ze(Y,pe),ue&&(Y=De(Y,ue,ne))),ue&&(ne=ue);function De(q,fe,oe){var ae=Math.round(q.length*(fe/oe)),Q=[],me=Number((q.length-1)/(ae-1));Q[0]=q[0];for(var Ce=1;Ce<ae-1;Ce++){var Ge=Ce*me,Je=Number(Math.floor(Ge)).toFixed(),ht=Number(Math.ceil(Ge)).toFixed(),pt=Ge-Je;Q[Ce]=dt(q[Je],q[ht],pt)}return Q[ae-1]=q[q.length-1],Q}function dt(q,fe,oe){return q+(fe-q)*oe}function ze(q,fe){for(var oe=new Float64Array(fe),ae=0,Q=q.length,me=0;me<Q;me++){var Ce=q[me];oe.set(Ce,ae),ae+=Ce.length}return oe}function ut(q,fe){for(var oe=q.length+fe.length,ae=new Float64Array(oe),Q=0,me=0;me<oe;)ae[me++]=q[Q],ae[me++]=fe[Q],Q++;return ae}function Pe(q,fe,oe){for(var ae=oe.length,Q=0;Q<ae;Q++)q.setUint8(fe+Q,oe.charCodeAt(Q))}var Oe;O===2&&(Oe=ut(Y,ee)),O===1&&(Oe=Y);var Ne=Oe.length,lt=44+Ne*2,We=new ArrayBuffer(lt),J=new DataView(We);Pe(J,0,"RIFF"),J.setUint32(4,36+Ne*2,!0),Pe(J,8,"WAVE"),Pe(J,12,"fmt "),J.setUint32(16,16,!0),J.setUint16(20,1,!0),J.setUint16(22,O,!0),J.setUint32(24,ne,!0),J.setUint32(28,ne*O*2,!0),J.setUint16(32,O*2,!0),J.setUint16(34,16,!0),Pe(J,36,"data"),J.setUint32(40,Ne*2,!0);for(var ct=Ne,Ke=44,ft=1,Ve=0;Ve<ct;Ve++)J.setInt16(Ke,Oe[Ve]*(32767*ft),!0),Ke+=2;if(N)return N({buffer:We,view:J});postMessage({buffer:We,view:J})}if(F.noWorker){f(F,function(k){g(k.buffer,k.view)});return}var I=b(f);I.onmessage=function(k){g(k.data.buffer,k.data.view),G.revokeObjectURL(I.workerURL),I.terminate()},I.postMessage(F)}function b(F){var g=G.createObjectURL(new Blob([F.toString(),";this.onmessage =  function (eee) {"+F.name+"(eee.data);}"],{type:"application/javascript"})),f=new Worker(g);return f.workerURL=g,f}this.stop=function(F){F=F||function(){},d=!1,S({desiredSampRate:R,sampleRate:o,numberOfAudioChannels:v,internalInterleavedLength:h,leftBuffers:s,rightBuffers:v===1?[]:u,noWorker:e.noWorker},function(g,f){t.blob=new Blob([f],{type:"audio/wav"}),t.buffer=new ArrayBuffer(f.buffer.byteLength),t.view=f,t.sampleRate=R||o,t.bufferSize=j,t.length=h,c=!1,F&&F(t.blob)})},typeof l.Storage>"u"&&(l.Storage={AudioContextConstructor:null,AudioContext:window.AudioContext||window.webkitAudioContext}),(!l.Storage.AudioContextConstructor||l.Storage.AudioContextConstructor.state==="closed")&&(l.Storage.AudioContextConstructor=new l.Storage.AudioContext);var y=l.Storage.AudioContextConstructor,m=y.createMediaStreamSource(r),D=[0,256,512,1024,2048,4096,8192,16384],j=typeof e.bufferSize>"u"?4096:e.bufferSize;if(D.indexOf(j)===-1&&(e.disableLogs||console.log("Legal values for buffer-size are "+JSON.stringify(D,null,"	"))),y.createJavaScriptNode)i=y.createJavaScriptNode(j,v,v);else if(y.createScriptProcessor)i=y.createScriptProcessor(j,v,v);else throw"WebAudio API has no support on this browser.";m.connect(i),e.bufferSize||(j=i.bufferSize);var o=typeof e.sampleRate<"u"?e.sampleRate:y.sampleRate||44100;(o<22050||o>96e3)&&(e.disableLogs||console.log("sample-rate must be under range 22050 and 96000.")),e.disableLogs||e.desiredSampRate&&console.log("Desired sample-rate: "+e.desiredSampRate);var w=!1;this.pause=function(){w=!0},this.resume=function(){if(p()===!1)throw"Please make sure MediaStream is active.";if(!d){e.disableLogs||console.log("Seems recording has been restarted."),this.record();return}w=!1},this.clearRecordedData=function(){e.checkForInactiveTracks=!1,d&&this.stop(n),n()};function A(){s=[],u=[],h=0,c=!1,d=!1,w=!1,y=null,t.leftchannel=s,t.rightchannel=u,t.numberOfAudioChannels=v,t.desiredSampRate=R,t.sampleRate=o,t.recordingLength=h,M={left:[],right:[],recordingLength:0}}function n(){i&&(i.onaudioprocess=null,i.disconnect(),i=null),m&&(m.disconnect(),m=null),A()}this.name="StereoAudioRecorder",this.toString=function(){return this.name};var c=!1;function C(F){if(!w){if(p()===!1&&(e.disableLogs||console.log("MediaStream seems stopped."),i.disconnect(),d=!1),!d){m&&(m.disconnect(),m=null);return}c||(c=!0,e.onAudioProcessStarted&&e.onAudioProcessStarted(),e.initCallback&&e.initCallback());var g=F.inputBuffer.getChannelData(0),f=new Float32Array(g);if(s.push(f),v===2){var I=F.inputBuffer.getChannelData(1),k=new Float32Array(I);u.push(k)}h+=j,t.recordingLength=h,typeof e.timeSlice<"u"&&(M.recordingLength+=j,M.left.push(f),v===2&&M.right.push(k))}}i.onaudioprocess=C,y.createMediaStreamDestination?i.connect(y.createMediaStreamDestination()):i.connect(y.destination),this.leftchannel=s,this.rightchannel=u,this.numberOfAudioChannels=v,this.desiredSampRate=R,this.sampleRate=o,t.recordingLength=h;var M={left:[],right:[],recordingLength:0};function P(){!d||typeof e.ondataavailable!="function"||typeof e.timeSlice>"u"||(M.left.length?(S({desiredSampRate:R,sampleRate:o,numberOfAudioChannels:v,internalInterleavedLength:M.recordingLength,leftBuffers:M.left,rightBuffers:v===1?[]:M.right},function(F,g){var f=new Blob([g],{type:"audio/wav"});e.ondataavailable(f),setTimeout(P,e.timeSlice)}),M={left:[],right:[],recordingLength:0}):setTimeout(P,e.timeSlice))}}typeof l<"u"&&(l.StereoAudioRecorder=Re);/**
 * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.
 * @summary HTML2Canvas recording into video WebM.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef CanvasRecorder
 * @class
 * @example
 * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true, useWhammyRecorder: true });
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.
 * @param {object} config - {disableLogs:true, initCallback: function}
 */function xe(r,e){if(typeof html2canvas>"u")throw"Please link: https://www.webrtc-experiment.com/screenshot.js";e=e||{},e.frameInterval||(e.frameInterval=10);var t=!1;["captureStream","mozCaptureStream","webkitCaptureStream"].forEach(function(D){D in document.createElement("canvas")&&(t=!0)});var s=(!!window.webkitRTCPeerConnection||!!window.webkitGetUserMedia)&&!!window.chrome,u=50,d=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);s&&d&&d[2]&&(u=parseInt(d[2],10)),s&&u<52&&(t=!1),e.useWhammyRecorder&&(t=!1);var h,i;if(t)if(e.disableLogs||console.log("Your browser supports both MediRecorder API and canvas.captureStream!"),r instanceof HTMLCanvasElement)h=r;else if(r instanceof CanvasRenderingContext2D)h=r.canvas;else throw"Please pass either HTMLCanvasElement or CanvasRenderingContext2D.";else navigator.mozGetUserMedia&&(e.disableLogs||console.error("Canvas recording is NOT supported in Firefox."));var v;this.record=function(){if(v=!0,t&&!e.useWhammyRecorder){var D;"captureStream"in h?D=h.captureStream(25):"mozCaptureStream"in h?D=h.mozCaptureStream(25):"webkitCaptureStream"in h&&(D=h.webkitCaptureStream(25));try{var j=new ie;j.addTrack(_(D,"video")[0]),D=j}catch{}if(!D)throw"captureStream API are NOT available.";i=new $(D,{mimeType:e.mimeType||"video/webm"}),i.record()}else m.frames=[],y=new Date().getTime(),b();e.initCallback&&e.initCallback()},this.getWebPImages=function(D){if(r.nodeName.toLowerCase()!=="canvas"){D();return}var j=m.frames.length;m.frames.forEach(function(o,w){var A=j-w;e.disableLogs||console.log(A+"/"+j+" frames remaining"),e.onEncodingCallback&&e.onEncodingCallback(A,j);var n=o.image.toDataURL("image/webp",1);m.frames[w].image=n}),e.disableLogs||console.log("Generating WebM"),D()},this.stop=function(D){v=!1;var j=this;if(t&&i){i.stop(D);return}this.getWebPImages(function(){m.compile(function(o){e.disableLogs||console.log("Recording finished!"),j.blob=o,j.blob.forEach&&(j.blob=new Blob([],{type:"video/webm"})),D&&D(j.blob),m.frames=[]})})};var R=!1;this.pause=function(){if(R=!0,i instanceof $){i.pause();return}},this.resume=function(){if(R=!1,i instanceof $){i.resume();return}v||this.record()},this.clearRecordedData=function(){v&&this.stop(p),p()};function p(){m.frames=[],v=!1,R=!1}this.name="CanvasRecorder",this.toString=function(){return this.name};function S(){var D=document.createElement("canvas"),j=D.getContext("2d");return D.width=r.width,D.height=r.height,j.drawImage(r,0,0),D}function b(){if(R)return y=new Date().getTime(),setTimeout(b,500);if(r.nodeName.toLowerCase()==="canvas"){var D=new Date().getTime()-y;y=new Date().getTime(),m.frames.push({image:S(),duration:D}),v&&setTimeout(b,e.frameInterval);return}html2canvas(r,{grabMouse:typeof e.showMousePointer>"u"||e.showMousePointer,onrendered:function(j){var o=new Date().getTime()-y;if(!o)return setTimeout(b,e.frameInterval);y=new Date().getTime(),m.frames.push({image:j.toDataURL("image/webp",1),duration:o}),v&&setTimeout(b,e.frameInterval)}})}var y=new Date().getTime(),m=new ye.Video(100)}typeof l<"u"&&(l.CanvasRecorder=xe);/**
 * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.
 * @summary Video recording feature in Chrome.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef WhammyRecorder
 * @class
 * @example
 * var recorder = new WhammyRecorder(mediaStream);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}
 */function Le(r,e){e=e||{},e.frameInterval||(e.frameInterval=10),e.disableLogs||console.log("Using frames-interval:",e.frameInterval),this.record=function(){e.width||(e.width=320),e.height||(e.height=240),e.video||(e.video={width:e.width,height:e.height}),e.canvas||(e.canvas={width:e.width,height:e.height}),v.width=e.canvas.width||320,v.height=e.canvas.height||240,R=v.getContext("2d"),e.video&&e.video instanceof HTMLVideoElement?(p=e.video.cloneNode(),e.initCallback&&e.initCallback()):(p=document.createElement("video"),Ae(r,p),p.onloadedmetadata=function(){e.initCallback&&e.initCallback()},p.width=e.video.width,p.height=e.video.height),p.muted=!0,p.play(),S=new Date().getTime(),b=new ye.Video,e.disableLogs||(console.log("canvas resolutions",v.width,"*",v.height),console.log("video width/height",p.width||v.width,"*",p.height||v.height)),t(e.frameInterval)};function t(y){y=typeof y<"u"?y:10;var m=new Date().getTime()-S;if(!m)return setTimeout(t,y,y);if(h)return S=new Date().getTime(),setTimeout(t,100);S=new Date().getTime(),p.paused&&p.play(),R.drawImage(p,0,0,v.width,v.height),b.frames.push({duration:m,image:v.toDataURL("image/webp")}),d||setTimeout(t,y,y)}function s(y){var m=-1,D=y.length;(function j(){if(m++,m===D){y.callback();return}setTimeout(function(){y.functionToLoop(j,m)},1)})()}function u(y,m,D,j,o){var w=document.createElement("canvas");w.width=v.width,w.height=v.height;var A=w.getContext("2d"),n=[],c=y.length,C={r:0,g:0,b:0},M=Math.sqrt(Math.pow(255,2)+Math.pow(255,2)+Math.pow(255,2)),P=0,F=0,g=!1;s({length:c,functionToLoop:function(f,I){var k,N,O,Y=function(){!g&&O-k<=O*F||(g=!0,n.push(y[I])),f()};if(g)Y();else{var ee=new Image;ee.onload=function(){A.drawImage(ee,0,0,v.width,v.height);var ne=A.getImageData(0,0,v.width,v.height);k=0,N=ne.data.length,O=ne.data.length/4;for(var pe=0;pe<N;pe+=4){var ue={r:ne.data[pe],g:ne.data[pe+1],b:ne.data[pe+2]},De=Math.sqrt(Math.pow(ue.r-C.r,2)+Math.pow(ue.g-C.g,2)+Math.pow(ue.b-C.b,2));De<=M*P&&k++}Y()},ee.src=y[I].image}},callback:function(){n=n.concat(y.slice(c)),n.length<=0&&n.push(y[y.length-1]),o(n)}})}var d=!1;this.stop=function(y){y=y||function(){},d=!0;var m=this;setTimeout(function(){u(b.frames,-1,null,null,function(D){b.frames=D,e.advertisement&&e.advertisement.length&&(b.frames=e.advertisement.concat(b.frames)),b.compile(function(j){m.blob=j,m.blob.forEach&&(m.blob=new Blob([],{type:"video/webm"})),y&&y(m.blob)})})},10)};var h=!1;this.pause=function(){h=!0},this.resume=function(){h=!1,d&&this.record()},this.clearRecordedData=function(){d||this.stop(i),i()};function i(){b.frames=[],d=!0,h=!1}this.name="WhammyRecorder",this.toString=function(){return this.name};var v=document.createElement("canvas"),R=v.getContext("2d"),p,S,b}typeof l<"u"&&(l.WhammyRecorder=Le);/**
 * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}
 * @summary A real time javascript webm encoder based on a canvas hack.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef Whammy
 * @class
 * @example
 * var recorder = new Whammy().Video(15);
 * recorder.add(context || canvas || dataURL);
 * var output = recorder.compile();
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 */var ye=function(){function r(s){this.frames=[],this.duration=s||1,this.quality=.8}r.prototype.add=function(s,u){if("canvas"in s&&(s=s.canvas),"toDataURL"in s&&(s=s.toDataURL("image/webp",this.quality)),!/^data:image\/webp;base64,/ig.test(s))throw"Input must be formatted properly as a base64 encoded DataURI of type image/webp";this.frames.push({image:s,duration:u||this.duration})};function e(s){var u=G.createObjectURL(new Blob([s.toString(),"this.onmessage =  function (eee) {"+s.name+"(eee.data);}"],{type:"application/javascript"})),d=new Worker(u);return G.revokeObjectURL(u),d}function t(s){function u(o){var w=h(o);if(!w)return[];for(var A=3e4,n=[{id:440786851,data:[{data:1,id:17030},{data:1,id:17143},{data:4,id:17138},{data:8,id:17139},{data:"webm",id:17026},{data:2,id:17031},{data:2,id:17029}]},{id:408125543,data:[{id:357149030,data:[{data:1e6,id:2807729},{data:"whammy",id:19840},{data:"whammy",id:22337},{data:D(w.duration),id:17545}]},{id:374648427,data:[{id:174,data:[{data:1,id:215},{data:1,id:29637},{data:0,id:156},{data:"und",id:2274716},{data:"V_VP8",id:134},{data:"VP8",id:2459272},{data:1,id:131},{id:224,data:[{data:w.width,id:176},{data:w.height,id:186}]}]}]}]}],c=0,C=0;c<o.length;){var M=[],P=0;do M.push(o[c]),P+=o[c].duration,c++;while(c<o.length&&P<A);var F=0,g={id:524531317,data:d(C,F,M)};n[1].data.push(g),C+=P}return p(n)}function d(o,w,A){return[{data:o,id:231}].concat(A.map(function(n){var c=S({discardable:0,frame:n.data.slice(4),invisible:0,keyframe:1,lacing:0,trackNum:1,timecode:Math.round(w)});return w+=n.duration,{data:c,id:163}}))}function h(o){if(!o[0]){postMessage({error:"Something went wrong. Maybe WebP format is not supported in the current browser."});return}for(var w=o[0].width,A=o[0].height,n=o[0].duration,c=1;c<o.length;c++)n+=o[c].duration;return{duration:n,width:w,height:A}}function i(o){for(var w=[];o>0;)w.push(o&255),o=o>>8;return new Uint8Array(w.reverse())}function v(o){return new Uint8Array(o.split("").map(function(w){return w.charCodeAt(0)}))}function R(o){var w=[],A=o.length%8?new Array(9-o.length%8).join("0"):"";o=A+o;for(var n=0;n<o.length;n+=8)w.push(parseInt(o.substr(n,8),2));return new Uint8Array(w)}function p(o){for(var w=[],A=0;A<o.length;A++){var n=o[A].data;typeof n=="object"&&(n=p(n)),typeof n=="number"&&(n=R(n.toString(2))),typeof n=="string"&&(n=v(n));var c=n.size||n.byteLength||n.length,C=Math.ceil(Math.ceil(Math.log(c)/Math.log(2))/8),M=c.toString(2),P=new Array(C*7+7+1-M.length).join("0")+M,F=new Array(C).join("0")+"1"+P;w.push(i(o[A].id)),w.push(R(F)),w.push(n)}return new Blob(w,{type:"video/webm"})}function S(o){var w=0;if(w|=128,o.trackNum>127)throw"TrackNumber > 127 not supported";var A=[o.trackNum|128,o.timecode>>8,o.timecode&255,w].map(function(n){return String.fromCharCode(n)}).join("")+o.frame;return A}function b(o){for(var w=o.RIFF[0].WEBP[0],A=w.indexOf("*"),n=0,c=[];n<4;n++)c[n]=w.charCodeAt(A+3+n);var C,M,P;return P=c[1]<<8|c[0],C=P&16383,P=c[3]<<8|c[2],M=P&16383,{width:C,height:M,data:w,riff:o}}function y(o,w){return parseInt(o.substr(w+4,4).split("").map(function(A){var n=A.charCodeAt(0).toString(2);return new Array(8-n.length+1).join("0")+n}).join(""),2)}function m(o){for(var w=0,A={};w<o.length;){var n=o.substr(w,4),c=y(o,w),C=o.substr(w+4+4,c);w+=8+c,A[n]=A[n]||[],n==="RIFF"||n==="LIST"?A[n].push(m(C)):A[n].push(C)}return A}function D(o){return[].slice.call(new Uint8Array(new Float64Array([o]).buffer),0).map(function(w){return String.fromCharCode(w)}).reverse().join("")}var j=new u(s.map(function(o){var w=b(m(atob(o.image.slice(23))));return w.duration=o.duration,w}));postMessage(j)}return r.prototype.compile=function(s){var u=e(t);u.onmessage=function(d){if(d.data.error){console.error(d.data.error);return}s(d.data)},u.postMessage(this.frames)},{Video:r}}();typeof l<"u"&&(l.Whammy=ye);/**
 * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.
 * @summary Writing blobs into IndexedDB.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @example
 * DiskStorage.Store({
 *     audioBlob: yourAudioBlob,
 *     videoBlob: yourVideoBlob,
 *     gifBlob  : yourGifBlob
 * });
 * DiskStorage.Fetch(function(dataURL, type) {
 *     if(type === 'audioBlob') { }
 *     if(type === 'videoBlob') { }
 *     if(type === 'gifBlob')   { }
 * });
 * // DiskStorage.dataStoreName = 'recordRTC';
 * // DiskStorage.onError = function(error) { };
 * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.
 * @property {function} Fetch - This method fetches stored blobs from IndexedDB.
 * @property {function} Store - This method stores blobs in IndexedDB.
 * @property {function} onError - This function is invoked for any known/unknown error.
 * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 */var Z={init:function(){var r=this;if(typeof indexedDB>"u"||typeof indexedDB.open>"u"){console.error("IndexedDB API are not available in this browser.");return}var e=1,t=this.dbName||location.href.replace(/\/|:|#|%|\.|\[|\]/g,""),s,u=indexedDB.open(t,e);function d(i){i.createObjectStore(r.dataStoreName)}function h(){var i=s.transaction([r.dataStoreName],"readwrite");r.videoBlob&&i.objectStore(r.dataStoreName).put(r.videoBlob,"videoBlob"),r.gifBlob&&i.objectStore(r.dataStoreName).put(r.gifBlob,"gifBlob"),r.audioBlob&&i.objectStore(r.dataStoreName).put(r.audioBlob,"audioBlob");function v(R){i.objectStore(r.dataStoreName).get(R).onsuccess=function(p){r.callback&&r.callback(p.target.result,R)}}v("audioBlob"),v("videoBlob"),v("gifBlob")}u.onerror=r.onError,u.onsuccess=function(){if(s=u.result,s.onerror=r.onError,s.setVersion)if(s.version!==e){var i=s.setVersion(e);i.onsuccess=function(){d(s),h()}}else h();else h()},u.onupgradeneeded=function(i){d(i.target.result)}},Fetch:function(r){return this.callback=r,this.init(),this},Store:function(r){return this.audioBlob=r.audioBlob,this.videoBlob=r.videoBlob,this.gifBlob=r.gifBlob,this.init(),this},onError:function(r){console.error(JSON.stringify(r,null,"	"))},dataStoreName:"recordRTC",dbName:null};typeof l<"u"&&(l.DiskStorage=Z);/**
 * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef GifRecorder
 * @class
 * @example
 * var recorder = new GifRecorder(mediaStream || canvas || context, { onGifPreview: function, onGifRecordingStarted: function, width: 1280, height: 720, frameRate: 200, quality: 10 });
 * recorder.record();
 * recorder.stop(function(blob) {
 *     img.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.
 * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}
 */function Se(r,e){if(typeof GIFEncoder>"u"){var t=document.createElement("script");t.src="https://www.webrtc-experiment.com/gif-recorder.js",(document.body||document.documentElement).appendChild(t)}e=e||{};var s=r instanceof CanvasRenderingContext2D||r instanceof HTMLCanvasElement;this.record=function(){if(typeof GIFEncoder>"u"){setTimeout(y.record,1e3);return}if(!v){setTimeout(y.record,1e3);return}s||(e.width||(e.width=R.offsetWidth||320),e.height||(e.height=R.offsetHeight||240),e.video||(e.video={width:e.width,height:e.height}),e.canvas||(e.canvas={width:e.width,height:e.height}),h.width=e.canvas.width||320,h.height=e.canvas.height||240,R.width=e.video.width||320,R.height=e.video.height||240),b=new GIFEncoder,b.setRepeat(0),b.setDelay(e.frameRate||200),b.setQuality(e.quality||10),b.start(),typeof e.onGifRecordingStarted=="function"&&e.onGifRecordingStarted();function m(D){if(y.clearedRecordedData!==!0){if(u)return setTimeout(function(){m(D)},100);p=z(m),typeof S===void 0&&(S=D),!(D-S<90)&&(!s&&R.paused&&R.play(),s||i.drawImage(R,0,0,h.width,h.height),e.onGifPreview&&e.onGifPreview(h.toDataURL("image/png")),b.addFrame(i),S=D)}}p=z(m),e.initCallback&&e.initCallback()},this.stop=function(m){m=m||function(){},p&&re(p),this.blob=new Blob([new Uint8Array(b.stream().bin)],{type:"image/gif"}),m(this.blob),b.stream().bin=[]};var u=!1;this.pause=function(){u=!0},this.resume=function(){u=!1},this.clearRecordedData=function(){y.clearedRecordedData=!0,d()};function d(){b&&(b.stream().bin=[])}this.name="GifRecorder",this.toString=function(){return this.name};var h=document.createElement("canvas"),i=h.getContext("2d");s&&(r instanceof CanvasRenderingContext2D?(i=r,h=i.canvas):r instanceof HTMLCanvasElement&&(i=r.getContext("2d"),h=r));var v=!0;if(!s){var R=document.createElement("video");R.muted=!0,R.autoplay=!0,R.playsInline=!0,v=!1,R.onloadedmetadata=function(){v=!0},Ae(r,R),R.play()}var p=null,S,b,y=this}typeof l<"u"&&(l.GifRecorder=Se);function _e(r,e){var t="Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45";(function(n){typeof l<"u"||n&&(typeof window<"u"||typeof W>"u"||(W.navigator={userAgent:t,getUserMedia:function(){}},W.console||(W.console={}),(typeof W.console.log>"u"||typeof W.console.error>"u")&&(W.console.error=W.console.log=W.console.log||function(){console.log(arguments)}),typeof document>"u"&&(n.document={documentElement:{appendChild:function(){return""}}},document.createElement=document.captureStream=document.mozCaptureStream=function(){var c={getContext:function(){return c},play:function(){},pause:function(){},drawImage:function(){},toDataURL:function(){return""},style:{}};return c},n.HTMLVideoElement=function(){}),typeof location>"u"&&(n.location={protocol:"file:",href:"",hash:""}),typeof screen>"u"&&(n.screen={width:0,height:0}),typeof R>"u"&&(n.URL={createObjectURL:function(){return""},revokeObjectURL:function(){return""}}),n.window=W))})(typeof W<"u"?W:null),e=e||"multi-streams-mixer";var s=[],u=!1,d=document.createElement("canvas"),h=d.getContext("2d");d.style.opacity=0,d.style.position="absolute",d.style.zIndex=-1,d.style.top="-1000em",d.style.left="-1000em",d.className=e,(document.body||document.documentElement).appendChild(d),this.disableLogs=!1,this.frameInterval=10,this.width=360,this.height=240,this.useGainNode=!0;var i=this,v=window.AudioContext;typeof v>"u"&&(typeof webkitAudioContext<"u"&&(v=webkitAudioContext),typeof mozAudioContext<"u"&&(v=mozAudioContext));var R=window.URL;typeof R>"u"&&typeof webkitURL<"u"&&(R=webkitURL),typeof navigator<"u"&&typeof navigator.getUserMedia>"u"&&(typeof navigator.webkitGetUserMedia<"u"&&(navigator.getUserMedia=navigator.webkitGetUserMedia),typeof navigator.mozGetUserMedia<"u"&&(navigator.getUserMedia=navigator.mozGetUserMedia));var p=window.MediaStream;typeof p>"u"&&typeof webkitMediaStream<"u"&&(p=webkitMediaStream),typeof p<"u"&&typeof p.prototype.stop>"u"&&(p.prototype.stop=function(){this.getTracks().forEach(function(n){n.stop()})});var S={};typeof v<"u"?S.AudioContext=v:typeof webkitAudioContext<"u"&&(S.AudioContext=webkitAudioContext);function b(n,c){"srcObject"in c?c.srcObject=n:"mozSrcObject"in c?c.mozSrcObject=n:c.srcObject=n}this.startDrawingFrames=function(){y()};function y(){if(!u){var n=s.length,c=!1,C=[];if(s.forEach(function(P){P.stream||(P.stream={}),P.stream.fullcanvas?c=P:C.push(P)}),c)d.width=c.stream.width,d.height=c.stream.height;else if(C.length){d.width=n>1?C[0].width*2:C[0].width;var M=1;(n===3||n===4)&&(M=2),(n===5||n===6)&&(M=3),(n===7||n===8)&&(M=4),(n===9||n===10)&&(M=5),d.height=C[0].height*M}else d.width=i.width||360,d.height=i.height||240;c&&c instanceof HTMLVideoElement&&m(c),C.forEach(function(P,F){m(P,F)}),setTimeout(y,i.frameInterval)}}function m(n,c){if(!u){var C=0,M=0,P=n.width,F=n.height;c===1&&(C=n.width),c===2&&(M=n.height),c===3&&(C=n.width,M=n.height),c===4&&(M=n.height*2),c===5&&(C=n.width,M=n.height*2),c===6&&(M=n.height*3),c===7&&(C=n.width,M=n.height*3),typeof n.stream.left<"u"&&(C=n.stream.left),typeof n.stream.top<"u"&&(M=n.stream.top),typeof n.stream.width<"u"&&(P=n.stream.width),typeof n.stream.height<"u"&&(F=n.stream.height),h.drawImage(n,C,M,P,F),typeof n.stream.onRender=="function"&&n.stream.onRender(h,C,M,P,F,c)}}function D(){u=!1;var n=j(),c=o();return c&&c.getTracks().filter(function(C){return C.kind==="audio"}).forEach(function(C){n.addTrack(C)}),r.forEach(function(C){C.fullcanvas}),n}function j(){A();var n;"captureStream"in d?n=d.captureStream():"mozCaptureStream"in d?n=d.mozCaptureStream():i.disableLogs||console.error("Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features");var c=new p;return n.getTracks().filter(function(C){return C.kind==="video"}).forEach(function(C){c.addTrack(C)}),d.stream=c,c}function o(){S.AudioContextConstructor||(S.AudioContextConstructor=new S.AudioContext),i.audioContext=S.AudioContextConstructor,i.audioSources=[],i.useGainNode===!0&&(i.gainNode=i.audioContext.createGain(),i.gainNode.connect(i.audioContext.destination),i.gainNode.gain.value=0);var n=0;if(r.forEach(function(c){if(c.getTracks().filter(function(M){return M.kind==="audio"}).length){n++;var C=i.audioContext.createMediaStreamSource(c);i.useGainNode===!0&&C.connect(i.gainNode),i.audioSources.push(C)}}),!!n)return i.audioDestination=i.audioContext.createMediaStreamDestination(),i.audioSources.forEach(function(c){c.connect(i.audioDestination)}),i.audioDestination.stream}function w(n){var c=document.createElement("video");return b(n,c),c.className=e,c.muted=!0,c.volume=0,c.width=n.width||i.width||360,c.height=n.height||i.height||240,c.play(),c}this.appendStreams=function(n){if(!n)throw"First parameter is required.";n instanceof Array||(n=[n]),n.forEach(function(c){var C=new p;if(c.getTracks().filter(function(F){return F.kind==="video"}).length){var M=w(c);M.stream=c,s.push(M),C.addTrack(c.getTracks().filter(function(F){return F.kind==="video"})[0])}if(c.getTracks().filter(function(F){return F.kind==="audio"}).length){var P=i.audioContext.createMediaStreamSource(c);i.audioDestination=i.audioContext.createMediaStreamDestination(),P.connect(i.audioDestination),C.addTrack(i.audioDestination.stream.getTracks().filter(function(F){return F.kind==="audio"})[0])}r.push(C)})},this.releaseStreams=function(){s=[],u=!0,i.gainNode&&(i.gainNode.disconnect(),i.gainNode=null),i.audioSources.length&&(i.audioSources.forEach(function(n){n.disconnect()}),i.audioSources=[]),i.audioDestination&&(i.audioDestination.disconnect(),i.audioDestination=null),i.audioContext&&i.audioContext.close(),i.audioContext=null,h.clearRect(0,0,d.width,d.height),d.stream&&(d.stream.stop(),d.stream=null)},this.resetVideoStreams=function(n){n&&!(n instanceof Array)&&(n=[n]),A(n)};function A(n){s=[],n=n||r,n.forEach(function(c){if(c.getTracks().filter(function(M){return M.kind==="video"}).length){var C=w(c);C.stream=c,s.push(C)}})}this.name="MultiStreamsMixer",this.toString=function(){return this.name},this.getMixedStream=D}typeof l>"u"&&(L.exports=_e);/**
 * MultiStreamRecorder can record multiple videos in single container.
 * @summary Multi-videos recorder.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef MultiStreamRecorder
 * @class
 * @example
 * var options = {
 *     mimeType: 'video/webm'
 * }
 * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 *
 *     // or
 *     var blob = recorder.blob;
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStreams} mediaStreams - Array of MediaStreams.
 * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: "video/webm"}
 */function Ue(r,e){r=r||[];var t=this,s,u;e=e||{elementClass:"multi-streams-mixer",mimeType:"video/webm",video:{width:360,height:240}},e.frameInterval||(e.frameInterval=10),e.video||(e.video={}),e.video.width||(e.video.width=360),e.video.height||(e.video.height=240),this.record=function(){s=new _e(r,e.elementClass||"multi-streams-mixer"),d().length&&(s.frameInterval=e.frameInterval||10,s.width=e.video.width||360,s.height=e.video.height||240,s.startDrawingFrames()),e.previewStream&&typeof e.previewStream=="function"&&e.previewStream(s.getMixedStream()),u=new $(s.getMixedStream(),e),u.record()};function d(){var h=[];return r.forEach(function(i){_(i,"video").forEach(function(v){h.push(v)})}),h}this.stop=function(h){u&&u.stop(function(i){t.blob=i,h(i),t.clearRecordedData()})},this.pause=function(){u&&u.pause()},this.resume=function(){u&&u.resume()},this.clearRecordedData=function(){u&&(u.clearRecordedData(),u=null),s&&(s.releaseStreams(),s=null)},this.addStreams=function(h){if(!h)throw"First parameter is required.";h instanceof Array||(h=[h]),r.concat(h),!(!u||!s)&&(s.appendStreams(h),e.previewStream&&typeof e.previewStream=="function"&&e.previewStream(s.getMixedStream()))},this.resetVideoStreams=function(h){s&&(h&&!(h instanceof Array)&&(h=[h]),s.resetVideoStreams(h))},this.getMixer=function(){return s},this.name="MultiStreamRecorder",this.toString=function(){return this.name}}typeof l<"u"&&(l.MultiStreamRecorder=Ue);/**
 * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}
 * @summary Promises for {@link RecordRTC}
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef RecordRTCPromisesHandler
 * @class
 * @example
 * var recorder = new RecordRTCPromisesHandler(mediaStream, options);
 * recorder.startRecording()
 *         .then(successCB)
 *         .catch(errorCB);
 * // Note: You can access all RecordRTC API using "recorder.recordRTC" e.g. 
 * recorder.recordRTC.onStateChanged = function(state) {};
 * recorder.recordRTC.setRecordingDuration(5000);
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.
 * @param {object} config - {type:"video", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}
 * @throws Will throw an error if "new" keyword is not used to initiate "RecordRTCPromisesHandler". Also throws error if first argument "MediaStream" is missing.
 * @requires {@link RecordRTC}
 */function H(r,e){if(!this)throw'Use "new RecordRTCPromisesHandler()"';if(typeof r>"u")throw'First argument "MediaStream" is required.';var t=this;t.recordRTC=new l(r,e),this.startRecording=function(){return new Promise(function(s,u){try{t.recordRTC.startRecording(),s()}catch(d){u(d)}})},this.stopRecording=function(){return new Promise(function(s,u){try{t.recordRTC.stopRecording(function(d){if(t.blob=t.recordRTC.getBlob(),!t.blob||!t.blob.size){u("Empty blob.",t.blob);return}s(d)})}catch(d){u(d)}})},this.pauseRecording=function(){return new Promise(function(s,u){try{t.recordRTC.pauseRecording(),s()}catch(d){u(d)}})},this.resumeRecording=function(){return new Promise(function(s,u){try{t.recordRTC.resumeRecording(),s()}catch(d){u(d)}})},this.getDataURL=function(s){return new Promise(function(u,d){try{t.recordRTC.getDataURL(function(h){u(h)})}catch(h){d(h)}})},this.getBlob=function(){return new Promise(function(s,u){try{s(t.recordRTC.getBlob())}catch(d){u(d)}})},this.getInternalRecorder=function(){return new Promise(function(s,u){try{s(t.recordRTC.getInternalRecorder())}catch(d){u(d)}})},this.reset=function(){return new Promise(function(s,u){try{s(t.recordRTC.reset())}catch(d){u(d)}})},this.destroy=function(){return new Promise(function(s,u){try{s(t.recordRTC.destroy())}catch(d){u(d)}})},this.getState=function(){return new Promise(function(s,u){try{s(t.recordRTC.getState())}catch(d){u(d)}})},this.blob=null,this.version="5.6.2"}typeof l<"u"&&(l.RecordRTCPromisesHandler=H);/**
 * WebAssemblyRecorder lets you create webm videos in JavaScript via WebAssembly. The library consumes raw RGBA32 buffers (4 bytes per pixel) and turns them into a webm video with the given framerate and quality. This makes it compatible out-of-the-box with ImageData from a CANVAS. With realtime mode you can also use webm-wasm for streaming webm videos.
 * @summary Video recording feature in Chrome, Firefox and maybe Edge.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef WebAssemblyRecorder
 * @class
 * @example
 * var recorder = new WebAssemblyRecorder(mediaStream);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {webAssemblyPath:'webm-wasm.wasm',workerPath: 'webm-worker.js', frameRate: 30, width: 1920, height: 1080, bitrate: 1024, realtime: true}
 */function ce(r,e){(typeof ReadableStream>"u"||typeof WritableStream>"u")&&console.error("Following polyfill is strongly recommended: https://unpkg.com/@mattiasbuelens/web-streams-polyfill/dist/polyfill.min.js"),e=e||{},e.width=e.width||640,e.height=e.height||480,e.frameRate=e.frameRate||30,e.bitrate=e.bitrate||1200,e.realtime=e.realtime||!0;var t;function s(){return new ReadableStream({start:function(R){var p=document.createElement("canvas"),S=document.createElement("video"),b=!0;S.srcObject=r,S.muted=!0,S.height=e.height,S.width=e.width,S.volume=0,S.onplaying=function(){p.width=e.width,p.height=e.height;var y=p.getContext("2d"),m=1e3/e.frameRate,D=setInterval(function(){if(t&&(clearInterval(D),R.close()),b&&(b=!1,e.onVideoProcessStarted&&e.onVideoProcessStarted()),y.drawImage(S,0,0),R._controlledReadableStream.state!=="closed")try{R.enqueue(y.getImageData(0,0,e.width,e.height))}catch{}},m)},S.play()}})}var u;function d(R,p){if(!e.workerPath&&!p){t=!1,fetch("https://unpkg.com/webm-wasm@latest/dist/webm-worker.js").then(function(b){b.arrayBuffer().then(function(y){d(R,y)})});return}if(!e.workerPath&&p instanceof ArrayBuffer){var S=new Blob([p],{type:"text/javascript"});e.workerPath=G.createObjectURL(S)}e.workerPath||console.error("workerPath parameter is missing."),u=new Worker(e.workerPath),u.postMessage(e.webAssemblyPath||"https://unpkg.com/webm-wasm@latest/dist/webm-wasm.wasm"),u.addEventListener("message",function(b){b.data==="READY"?(u.postMessage({width:e.width,height:e.height,bitrate:e.bitrate||1200,timebaseDen:e.frameRate||30,realtime:e.realtime}),s().pipeTo(new WritableStream({write:function(y){if(t){console.error("Got image, but recorder is finished!");return}u.postMessage(y.data.buffer,[y.data.buffer])}}))):b.data&&(h||v.push(b.data))})}this.record=function(){v=[],h=!1,this.blob=null,d(r),typeof e.initCallback=="function"&&e.initCallback()};var h;this.pause=function(){h=!0},this.resume=function(){h=!1};function i(R){if(!u){R&&R();return}u.addEventListener("message",function(p){p.data===null&&(u.terminate(),u=null,R&&R())}),u.postMessage(null)}var v=[];this.stop=function(R){t=!0;var p=this;i(function(){p.blob=new Blob(v,{type:"video/webm"}),R(p.blob)})},this.name="WebAssemblyRecorder",this.toString=function(){return this.name},this.clearRecordedData=function(){v=[],h=!1,this.blob=null},this.blob=null}typeof l<"u"&&(l.WebAssemblyRecorder=ce)})(at);var rr=at.exports;const tt=Pt(rr),ir=V.div`
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #f7f7f7;
  z-index: 1000;
  display: flex;
  flex-direction: column;
`,nr=V.header`
  background-color: #000000;
  color: white;
  padding: 1rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  display: flex;
  align-items: center;
  justify-content: space-between;
`,or=V.div`
  display: flex;
  align-items: center;
  flex: 1;
`,ar=V.img`
  width: 40px;
  height: 40px;
  border-radius: 50%;
  margin-right: 10px;
`,sr=V.span`
  font-weight: bold;
  margin-left: 10px;
`,dr=V.div`
  flex: 1;
  overflow-y: auto;
  padding: 1rem;
  display: flex;
  flex-direction: column;
`,st=V.div`
  max-width: 70%;
  padding: 10px;
  border-radius: 20px;
  background-color: ${L=>L.$isSentByCurrentUser?"rgb(192, 132, 237)":"#ffffff"};
  color: ${L=>L.$isSentByCurrentUser?"#ffffff":"#000000"};
  align-self: ${L=>L.$isSentByCurrentUser?"flex-end":"flex-start"};
  margin-bottom: 10px;
  position: relative;
`,rt=V.p`
  margin: 0;
  white-space: pre-wrap;
`,it=V.span`
  font-size: 0.8em;
  color: #666;
  display: block;
  text-align: right;
  margin-top: 5px;
`,ur=V.div`
  padding: 1rem;
  background-color: white;
  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.05);
  display: flex;
  align-items: center;
`,lr=V(jt)`
  flex: 1;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 20px;
  margin-right: 10px;
`,cr=V.div`
  font-size: 0.8em;
  color: #666;
  padding: 5px 10px;
  position: absolute;
  bottom: 60px;
  left: 20px;
`,fr=V.div`
  display: flex;
  flex-direction: column;
  align-items: ${L=>L.$isSentByCurrentUser?"flex-end":"flex-start"};
  margin-bottom: 10px;
`,hr=V(st)`
  background-color: #f0f0f0;
  color: #000000;
  font-style: italic;
`,pr=V.span`
  color: #999999;
  font-size: 0.8em;
  margin-left: 5px;
`,mr=V(Ft)`
  background-color: #1a5f7a;
  border-radius: 8px;
  padding: 8px;
`,nt=V(Ye)`
  width: 100%;
  justify-content: flex-start;
  color: white;
  &.edit {
    background-color: #f5f6ff;
  }
  &.delete {
    background-color: #fb4444;
  }
`,gr=V.div`
  font-size: 0.7em;
  color: #999;
  text-align: right;
  margin-top: 2px;
`,vr=V.img`
  width: 12px;
  height: 12px;
  border-radius: 50%;
  margin-left: 5px;
`,br=V.div`
  text-align: center;
  margin: 10px 0;
  color: #999;
  font-size: 0.9em;
`,yr=V.div`
  display: flex;
  align-items: center;
  background-color: #f0f0f0;
  border-radius: 20px;
  padding: 5px 10px;
`,wr=V.div`
  display: flex;
  align-items: center;
  background-color: #f0f0f0;
  border-radius: 20px;
  padding: 10px;
  margin-top: 10px;
`,He=V(It)`
  color: ${L=>L.color||"inherit"};
`,Rr=V(Ut)`
  position: absolute;
  top: 0;
  left: -10px;
  background-color: red;
  color: white;
  border-radius: 50%;
  padding: 4px 8px;
  font-size: 12px;
`,xr=6e4,Lr=({currentUser:L,otherUser:l,isOpen:T,onClose:a})=>{const[B,E]=U.useState([]),[z,te]=U.useState(""),[re,X]=U.useState(!0),[G,he]=U.useState(1),[ve,se]=U.useState(!0),[K,we]=U.useState(null),[ie,ke]=U.useState(!1),[Fe,Ie]=U.useState(null),[_,Ae]=U.useState(!1),[be,de]=U.useState(null),[le,$]=U.useState(null),[Re,xe]=U.useState(0),[Le,ye]=U.useState(!1),[Z,Se]=U.useState(!1),[_e,Ue]=U.useState(!1),H=mt(),ce=U.useRef(null),r=U.useRef(null),e=U.useRef(null),t=Ot(),s=U.useRef(null),u=U.useRef(null),[d,h]=U.useState(null),i=U.useCallback(async(g=1)=>{if(!L||!l){console.error("Current user or other user is not defined");return}try{X(!0);const f=await ge.get(`/api/messages/${l._id}`,{params:{page:g,limit:15}});if(f.data&&Array.isArray(f.data.messages)){const{messages:I,hasMore:k,isBlocked:N}=f.data;E(O=>{const Y=Array.isArray(I)?I.filter(ee=>ee&&ee.createdAt&&!isNaN(new Date(ee.createdAt).getTime())):[];return g===1?Y:[...O,...Y]}),se(k),he(O=>O+1),Se(N)}else E([]),se(!1)}catch(f){f.response&&f.response.status===404?(console.log("No existing conversation found. Ready to start a new one."),E([]),se(!1)):(console.error("Error fetching messages:",f),H({title:"Error",description:"Failed to load messages. Please try again.",status:"error",duration:3e3,isClosable:!0}))}finally{X(!1)}},[L,l,H]),v=U.useCallback(async()=>{try{const g=await ge.get(`/api/users/blockStatus/${l._id}`),{isBlocked:f,isBlockedBy:I}=g.data;Se(f),Ue(I)}catch(g){console.error("Error checking block status:",g)}},[l._id]);U.useEffect(()=>{v()},[v]),U.useEffect(()=>{T&&L&&l&&(E([]),he(1),se(!0),i(1)),te("")},[T,L,l,i]),U.useEffect(()=>{if(t){const g=k=>{(k.sender._id===l._id||k.sender._id===L.id)&&(E(N=>[...N,k]),R(),k.sender._id===l._id&&xe(N=>N+1))},f=k=>{E(N=>N.map(O=>O._id===k._id?k:O))},I=k=>{E(N=>N.map(O=>O._id===k._id?k:O))};return t.on("new message",g),t.on("message edited",f),t.on("message deleted",I),()=>{t.off("new message",g),t.off("message edited",f),t.off("message deleted",I)}}},[t,L.id,l._id]);const R=()=>{ce.current&&(ce.current.scrollTop=ce.current.scrollHeight)};U.useEffect(()=>{if(B.length>0&&t&&t.connected){const g=B.filter(f=>f.recipient===L.id&&!f.seen).map(f=>f._id);g.length>0&&t.emit("mark as seen",g,(f,I)=>{f?console.error("Error marking messages as seen:",f):(console.log(`${I} messages marked as seen`),xe(0))})}},[B,L.id,t]),U.useEffect(()=>{if(t)return t.on("user typing",g=>{g===l._id&&ke(!0)}),t.on("user stop typing",g=>{g===l._id&&ke(!1)}),()=>{t.off("user typing"),t.off("user stop typing")}},[t,l._id]);const p=U.useCallback(async()=>{if(Z){H({title:"Error",description:"You cannot send messages in a blocked conversation.",status:"error",duration:3e3,isClosable:!0});return}if(!(!z.trim()&&!K&&!be)){if(!t||!t.connected){H({title:"Error",description:"Not connected to chat server. Please try again.",status:"error",duration:3e3,isClosable:!0});return}try{let g=null,f="text";if(K)if(K.type.startsWith("image/")){const k=new FormData;k.append("file",K),g=(await ge.post("/api/messages/upload",k)).data.url,f="image"}else{H({title:"Error",description:"Only photos are allowed.",status:"error",duration:3e3,isClosable:!0});return}else if(be){const k=new FormData;k.append("file",be,"voice_message.webm"),g=(await ge.post("/api/messages/upload",k)).data.url,f="voice"}const I={sender:L.id,recipient:l._id,content:z.trim(),media:g,type:f};t.emit("private message",I,(k,N)=>{k?(console.error("Error sending message:",k),H({title:"Error",description:k.message||"Failed to send message. Please try again.",status:"error",duration:3e3,isClosable:!0})):(E(O=>[...O,N]),te(""),we(null),de(null),$(null),R())})}catch(g){console.error("Error handling message:",g),H({title:"Error",description:"An unexpected error occurred. Please try again.",status:"error",duration:3e3,isClosable:!0})}}},[Z,z,K,be,l._id,L.id,t,H,R]),S=g=>{te(g.target.value),t&&t.connected&&(t.emit("typing",{recipientId:l._id}),s.current&&clearTimeout(s.current),s.current=setTimeout(()=>{t.emit("stop typing",{recipientId:l._id})},3e3))},b=g=>{we(g.target.files[0])},y=g=>{g.key==="Enter"&&!g.shiftKey&&(g.preventDefault(),p())},m=async g=>{try{if(!t||!t.connected)throw new Error("Socket connection not established");t.emit("delete message",g,(f,I)=>{f?(console.error("Error deleting message:",f),H({title:"Error",description:"Failed to unsend message. Please try again.",status:"error",duration:3e3,isClosable:!0})):(E(k=>k.map(N=>N._id===I._id?I:N)),H({title:"Message unsent",status:"success",duration:3e3,isClosable:!0}))})}catch(f){console.error("Error deleting message:",f),H({title:"Error",description:"Failed to unsend message. Please try again.",status:"error",duration:3e3,isClosable:!0})}},D=(g,f)=>{Ie(g),te(f),r.current.focus()},j=U.useCallback(g=>{if(!g)return console.warn("Empty timestamp provided to formatMessageTime"),"";try{const f=Qe(g);return isNaN(f.getTime())?(console.warn("Invalid date:",g),""):zt(f)?Be(f,"h:mm a"):Wt(f)?`Yesterday ${Be(f,"h:mm a")}`:Vt(f)?Be(f,"EEEE h:mm a"):Be(f,"dd.MM.yyyy h:mm a")}catch(f){return console.error("Error formatting message time:",f),""}},[]),o=async()=>{try{const g=await navigator.mediaDevices.getUserMedia({audio:!0}),f=tt(g,{type:"audio",mimeType:"audio/webm",sampleRate:44100,desiredSampRate:16e3,recorderType:tt.StereoAudioRecorder,numberOfAudioChannels:1});f.startRecording(),h(f),Ae(!0),u.current=setTimeout(()=>{_&&w()},xr)}catch(g){console.error("Error starting recording:",g),H({title:"Error",description:"Failed to start recording. Please check your microphone permissions.",status:"error",duration:3e3,isClosable:!0})}},w=()=>{d&&d.stopRecording(()=>{const g=d.getBlob();de(g),$(URL.createObjectURL(g)),Ae(!1)}),u.current&&clearTimeout(u.current)},A=()=>{de(null),$(null)},n=async()=>{if(be)try{const g=new FormData;g.append("audio",be,"voice_message.webm"),g.append("recipient",l._id);const I=(await ge.post("/api/messages/voice",g,{headers:{"Content-Type":"multipart/form-data"}})).data;E(k=>[...k,I]),de(null),$(null),R()}catch(g){console.error("Error sending voice message:",g),H({title:"Error",description:"Failed to send voice message. Please try again.",status:"error",duration:3e3,isClosable:!0})}},c=async()=>{var g,f;try{const N=(await ge.get("/api/messages/conversations")).data.find(O=>O.participants.some(Y=>Y._id===l._id));if(!N)throw new Error("Conversation not found");await ge.delete(`/api/messages/conversations/${N._id}`),H({title:"Conversation deleted",description:"The conversation has been successfully deleted.",status:"success",duration:3e3,isClosable:!0}),a()}catch(I){console.error("Error deleting conversation:",I),H({title:"Error",description:((f=(g=I.response)==null?void 0:g.data)==null?void 0:f.message)||"Failed to delete conversation. Please try again.",status:"error",duration:5e3,isClosable:!0})}},C=async()=>{ye(!0)},M=async()=>{var g,f;try{await ge.post(`/api/users/block/${l._id}`),H({title:"User blocked",description:`${l.username} has been blocked successfully.`,status:"success",duration:3e3,isClosable:!0}),ye(!1),a()}catch(I){console.error("Error blocking user:",I),H({title:"Error",description:((f=(g=I.response)==null?void 0:g.data)==null?void 0:f.message)||"Failed to block user. Please try again.",status:"error",duration:3e3,isClosable:!0})}},P=async()=>{var g,f,I;try{await ge.post("/api/reports/create",{reportedUserId:l._id,conversationId:(g=B[0])==null?void 0:g.conversationId,reason:"Inappropriate content"}),H({title:"Conversation reported",status:"success",duration:3e3,isClosable:!0})}catch(k){console.error("Error reporting conversation:",k),H({title:"Error",description:((I=(f=k.response)==null?void 0:f.data)==null?void 0:I.message)||"Failed to report conversation. Please try again.",status:"error",duration:3e3,isClosable:!0})}},F=()=>{let g=null;return B.slice().reverse().map((f,I)=>{if(!f||!f.createdAt)return console.warn("Invalid message or missing createdAt:",f),null;let k;try{if(k=Qe(f.createdAt),isNaN(k.getTime()))return console.warn("Invalid date:",f.createdAt),null}catch(Y){return console.error("Error parsing date:",Y),null}const N=!g||!Gt(k,g);g=k;const O=f.sender._id===L.id;return x.jsxs(Ee.Fragment,{children:[N&&x.jsx(br,{children:Be(k,"MMMM d, yyyy")}),x.jsx(fr,{$isSentByCurrentUser:O,children:f.deleted?x.jsxs(hr,{children:[x.jsx(rt,{children:"This message was unsent."}),x.jsx(it,{children:f.createdAt?j(f.createdAt):""})]}):x.jsxs(At,{placement:"top",trigger:"click",children:[x.jsx(Dt,{children:x.jsxs(st,{$isSentByCurrentUser:O,children:[f.type==="image"&&x.jsx("img",{src:f.media,alt:"Uploaded media",style:{maxWidth:"100%",marginBottom:"10px",borderRadius:"10px"}}),f.type==="voice"&&x.jsx(yr,{children:x.jsx("audio",{controls:!0,src:f.media})}),x.jsx(rt,{children:f.content}),f.edited&&x.jsx(pr,{children:"edited"}),x.jsx(it,{children:f.createdAt?j(f.createdAt):""}),x.jsxs(gr,{children:[O&&(f.seen?"Seen":"Sent"),f.seen&&O&&x.jsx(vr,{src:l.photo,alt:l.username})]})]})}),O&&x.jsx(Bt,{children:x.jsx(Et,{children:x.jsxs(mr,{children:[f.type!=="voice"&&x.jsx(nt,{className:"edit",onClick:()=>D(f._id,f.content),children:"Edit"}),x.jsx(nt,{className:"delete",onClick:()=>m(f._id),children:"Delete"})]})})})]})})]},`${f._id}-${I}`)}).filter(Boolean)};return T?x.jsxs(ir,{children:[x.jsxs(nr,{children:[x.jsxs(or,{children:[x.jsx(Te,{icon:x.jsx(qt,{}),"aria-label":"Back",onClick:a,variant:"ghost",colorScheme:"whiteAlpha"}),x.jsx(ar,{src:l.photo,alt:l.username}),x.jsx(sr,{children:l.username}),Re>0&&x.jsx(Rr,{children:Re})]}),x.jsxs(gt,{children:[x.jsx(vt,{as:Te,"aria-label":"Options",icon:x.jsx(tr,{}),variant:"ghost",colorScheme:"whiteAlpha"}),x.jsxs(bt,{children:[x.jsx(He,{onClick:c,color:"red.500",children:"Delete Conversation"}),x.jsx(He,{onClick:C,color:"orange.500",children:"Block User"}),x.jsx(He,{onClick:P,color:"yellow.500",children:"Report Conversation"})]})]})]}),x.jsxs(dr,{ref:ce,id:"scrollableDiv",children:[x.jsx(Jt,{dataLength:B.length,next:()=>i(G),hasMore:ve,loader:x.jsx(yt,{}),scrollableTarget:"scrollableDiv",inverse:!0,style:{display:"flex",flexDirection:"column-reverse"},children:F()}),ie&&x.jsx(cr,{children:"Typing..."})]}),x.jsx(ur,{children:Z?x.jsx(wt,{width:"100%",textAlign:"center",py:4,bg:"gray.100",borderRadius:"md",children:x.jsxs(Rt,{fontWeight:"bold",children:[Z?"This conversation is blocked.":"The user has blocked you."," You can't send new messages."]})}):x.jsx(x.Fragment,{children:le?x.jsxs(wr,{children:[x.jsx("audio",{controls:!0,src:le}),x.jsx(Te,{icon:x.jsx(Ht,{}),onClick:A,variant:"ghost","aria-label":"Cancel recording"}),x.jsx(Te,{icon:x.jsx(Ze,{}),onClick:n,colorScheme:"blue","aria-label":"Send voice message"})]}):x.jsxs(x.Fragment,{children:[x.jsx(lr,{placeholder:Fe?"Edit message...":"Type a message...",value:z,onChange:S,onKeyDown:y,ref:r}),x.jsx("input",{type:"file",accept:"image/*",style:{display:"none"},ref:e,onChange:b}),x.jsx(Te,{icon:x.jsx(Yt,{}),onClick:()=>e.current.click(),variant:"ghost","aria-label":"Attach file"}),x.jsx(Te,{icon:_?x.jsx(Nt,{}):x.jsx(_t,{}),onClick:_?w:o,variant:"ghost","aria-label":_?"Stop recording":"Start recording",colorScheme:_?"red":"gray"}),x.jsx(Te,{icon:x.jsx(Ze,{}),colorScheme:"purple",onClick:p,"aria-label":"Send message"})]})})}),x.jsxs(xt,{isOpen:Le,onClose:()=>ye(!1),children:[x.jsx(St,{}),x.jsxs(Ct,{children:[x.jsx(Tt,{children:"Block User"}),x.jsx(kt,{}),x.jsxs(Lt,{children:["Are you sure you want to block ",l.username," forever? This action cannot be undone."]}),x.jsxs(Mt,{children:[x.jsx(Ye,{colorScheme:"red",mr:3,onClick:M,children:"Yes, Block User"}),x.jsx(Ye,{variant:"ghost",onClick:()=>ye(!1),children:"No, Cancel"})]})]})]})]}):null};export{Lr as default};
//# sourceMappingURL=Chat-CsLsvlFL.js.map
